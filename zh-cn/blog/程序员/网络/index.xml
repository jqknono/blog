<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>网络 on Nono Blogs</title><link>https://blog.jqknono.com/zh-cn/blog/%E7%A8%8B%E5%BA%8F%E5%91%98/%E7%BD%91%E7%BB%9C/</link><description>Recent content in 网络 on Nono Blogs</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 28 Feb 2025 12:45:22 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/zh-cn/blog/%E7%A8%8B%E5%BA%8F%E5%91%98/%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>几个更安全使用公网IPv6的方法</title><link>https://blog.jqknono.com/zh-cn/blog/2025/02/28/%E5%87%A0%E4%B8%AA%E6%9B%B4%E5%AE%89%E5%85%A8%E4%BD%BF%E7%94%A8%E5%85%AC%E7%BD%91ipv6%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Fri, 28 Feb 2025 12:45:22 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2025/02/28/%E5%87%A0%E4%B8%AA%E6%9B%B4%E5%AE%89%E5%85%A8%E4%BD%BF%E7%94%A8%E5%85%AC%E7%BD%91ipv6%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;p>有些人会有使用公网 IPv6 回家的需求, 不同于 tailscale/zerotier 等 VPN 需要内网穿透打洞来建立直连的方式, IPv6 回家就是直连, 手机蜂窝网络大多数时候都是有 IPv6 的, 回家非常方便.&lt;/p>
&lt;p>我之前分享过一篇文章&lt;a href="https://www.v2ex.com/t/1112630">家庭宽带使用常见 DDns 子域名可能会使电信宽带服务降级&lt;/a>, 描述使用 IPv6 时运营商挖的一个坑, 简短来说就是域名会被扫, 暴漏自己的域名等同于暴露 IPv6, 因此可能会被扫描, 扫到服务后入站连接一多就降级宽带服务.&lt;/p>
&lt;p>那篇分享里只提到了域名扫描, 没有提到&lt;code>网络空间扫描&lt;/code>, 这种扫描不管什么暴露的信息, 直接遍历 IP 池开扫, 这种情况较难防.&lt;/p>
&lt;p>&lt;code>网络空间扫描&lt;/code>通常包括以下几个方面：&lt;/p>
&lt;ul>
&lt;li>IP 存活性探测：利用 ARP、ICMP、TCP 等协议来识别在线主机。&lt;/li>
&lt;li>端口/服务探测：通过端口扫描筛选出在线主机的开放端口，并获取目标主机的服务信息、版本信息以及操作系统信息。&lt;/li>
&lt;li>操作系统探测：通过分析响应数据包来推断目标主机的操作系统类型和版本。&lt;/li>
&lt;li>流量采集：监控网络流量以发现异常行为或攻击模式。&lt;/li>
&lt;li>别名解析：针对拥有多个 IP 地址的路由器，建立 IP 地址与路由器之间的映射关系。&lt;/li>
&lt;li>DNS 探测：通过 IP 地址反向解析建立 IP 地址与域名之间的对应关系。&lt;/li>
&lt;/ul>
&lt;p>这里分享几个避免被网络空间扫描扫到的方法:&lt;/p>
&lt;ol>
&lt;li>内网 DNS 服务器不返回 AAAA 记录&lt;/li>
&lt;li>内网服务仅允许通过域名访问, 不允许直接通过 IP 访问&lt;/li>
&lt;li>使用私有 DNS 服务&lt;a href="https://www.adguardprivate.com">AdGuardPrivate&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="内网-dns-服务器不返回-aaaa-记录">内网 DNS 服务器不返回 AAAA 记录&lt;/h2>
&lt;p>上网时上到各式各样的网站, 这样自然的访问就可以暴露源 IPv6, 对方服务器可以获取源 IPv6, 用户侧如果没开防火墙的话, 这个 IPv6 就可以放到网络空间扫描的优先遍历池里.&lt;/p></description></item><item><title>使用常见DDns子域名可能导致电信宽带服务降级</title><link>https://blog.jqknono.com/zh-cn/blog/2025/02/19/%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%81ddns%E5%AD%90%E5%9F%9F%E5%90%8D%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E7%94%B5%E4%BF%A1%E5%AE%BD%E5%B8%A6%E6%9C%8D%E5%8A%A1%E9%99%8D%E7%BA%A7/</link><pubDate>Wed, 19 Feb 2025 13:06:08 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2025/02/19/%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%81ddns%E5%AD%90%E5%9F%9F%E5%90%8D%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E7%94%B5%E4%BF%A1%E5%AE%BD%E5%B8%A6%E6%9C%8D%E5%8A%A1%E9%99%8D%E7%BA%A7/</guid><description>&lt;p>IPv6 断连和打洞失败问题折腾了三个多月, 终于确认原因, 分享给大家.&lt;/p>
&lt;h2 id="第一次发帖求助-ipv6-断连问题">第一次发帖求助 IPv6 断连问题&lt;/h2>
&lt;!-- https://www.v2ex.com/t/1088217 -->
&lt;p>IPv6 一直可以正常访问, 没有修改设置的情况下, 且设备均有独立 ipv6, 但连不通 ipv6 网络.&lt;/p>
&lt;p>&lt;code>curl 6.ipw.cn&lt;/code> 拿不到返回, &lt;code>ping6&lt;/code> 和 &lt;code>traceroute6 2400:3200::1&lt;/code> 都中断.&lt;/p>
&lt;p>光猫桥接路由, 可以拿到路由器的 ipv6 地址, 这是可以访问 ipv6 的地址.&lt;/p>
&lt;p>可以拿到&lt;code>/56&lt;/code> 前缀, 路由器下设备都可以拿到分配的 ipv6 地址 &lt;code>240e:36f:15c3:3200::/56&lt;/code>, 但都无法连接到 ipv6 网站.&lt;/p>
&lt;p>怀疑是运营商没有建好 &lt;code>240e:36f:15c3:3200::&lt;/code>的路由, 但无法确认.&lt;/p>
&lt;p>网友说可能是 PCDN 上传流量过大导致, 但上传流量很小, 也没有开启 PCDN.&lt;/p>
&lt;p>也可能是使用了 Cloudflare 和 Aliyun ESA 反代导致.&lt;/p>
&lt;h2 id="第二次发帖确认直接原因">第二次发帖确认直接原因&lt;/h2>
&lt;!-- https://www.v2ex.com/t/1111168 -->
&lt;p>确认部分地区的电信运营商会因为 IPv6 入站 http/https 链接较多而降级服务, 表现为:&lt;/p>
&lt;ul>
&lt;li>假 IPv6, ipv6 可以获得 &lt;code>/56&lt;/code> 前缀, 各设备 IPv6 分配正常, 但 tracert 缺路由, 导致 ipv6 实际无法联网.&lt;/li>
&lt;li>假穿墙, tailscale 测试连接显示是直连, 但延迟超高, 实际网速极慢.&lt;/li>
&lt;/ul>
&lt;p>关闭 Cloudflare/Aliyun ESA 的反代, 经过多次重启路由后, 可以恢复 IPv6 和真直连.&lt;/p></description></item><item><title>家庭网络反向代理的合规性探讨</title><link>https://blog.jqknono.com/zh-cn/blog/2025/02/17/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E5%90%88%E8%A7%84%E6%80%A7%E6%8E%A2%E8%AE%A8/</link><pubDate>Mon, 17 Feb 2025 15:04:23 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2025/02/17/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E5%90%88%E8%A7%84%E6%80%A7%E6%8E%A2%E8%AE%A8/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>约 90 天前，我遇到了湖北电信 IPv6 无法连接的问题。经过长期观察和分析，现总结出以下经验。&lt;/p>
&lt;h1 id="问题分析">问题分析&lt;/h1>
&lt;p>最初怀疑的两个可能原因：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>PCDN 使用检测&lt;/p>
&lt;ul>
&lt;li>虽未主动使用 PCDN&lt;/li>
&lt;li>仅有少量 BT 下载行为&lt;/li>
&lt;li>已实施上传限速，但问题仍然存在&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>家庭服务器作为博客源站&lt;/p>
&lt;ul>
&lt;li>通过 Cloudflare 回源规则指定端口&lt;/li>
&lt;li>可能被运营商判定为&amp;quot;商用行为&amp;quot;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>经过三个月的验证，问题更可能源于向公网开放 HTTP/HTTPS 服务端口。&lt;/p>
&lt;h1 id="具体表现">具体表现&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>IPv6 状态异常：&lt;/p>
&lt;ul>
&lt;li>可获得 /56 前缀&lt;/li>
&lt;li>设备能获取全局 IPv6 地址&lt;/li>
&lt;li>但无法访问外网&lt;/li>
&lt;li>仅光猫桥接的路由器可正常使用 IPv6&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Tailscale 连接异常：&lt;/p>
&lt;ul>
&lt;li>源站服务器显示直连但延迟异常（约 400ms）&lt;/li>
&lt;li>其他设备经中继连接，反而延迟更低（约 80ms）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h1 id="运营商策略分析">运营商策略分析&lt;/h1>
&lt;p>部分地区电信运营商对频繁入站 HTTP/HTTPS 连接采取服务降级措施：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>IPv6 服务降级&lt;/p>
&lt;ul>
&lt;li>分配地址正常&lt;/li>
&lt;li>路由表缺失&lt;/li>
&lt;li>实际无法联网&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>P2P 连接限制&lt;/p>
&lt;ul>
&lt;li>Tailscale 显示直连&lt;/li>
&lt;li>实际延迟高&lt;/li>
&lt;li>带宽受限&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h1 id="解决方案">解决方案&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>关闭反向代理服务：&lt;/p>
&lt;ul>
&lt;li>停用 Cloudflare/阿里云 ESA 反代&lt;/li>
&lt;li>多次重启路由器后可恢复正常&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>防范域名扫描：
避免使用以下常见子域名：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">- home.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- ddns.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- dev.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- test.example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>最佳实践：&lt;/p></description></item><item><title>电信IPv6的一些特征</title><link>https://blog.jqknono.com/zh-cn/blog/2024/06/28/%E7%94%B5%E4%BF%A1ipv6%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E5%BE%81/</link><pubDate>Fri, 28 Jun 2024 17:21:06 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2024/06/28/%E7%94%B5%E4%BF%A1ipv6%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E5%BE%81/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> 电信IPv6的一些特征&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> 电信 IPv6 的一些特征&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>国内已经全面铺开 ipv6 使用, ipv6 地址池足够大, 个人的每个设备都可以获取到一个 ipv6 地址.&lt;br>
家庭用户使用时需要全栈设备都支持 ipv6 才能最终使用到 ipv6, 由于已经推了很多年, 目前来说 2016 年以后买的设备基本都支持 ipv6 了.&lt;/p>
&lt;p>全栈设备包括: 城域设备-&amp;gt;小区路由-&amp;gt;家庭路由(光猫,路由器)-&amp;gt;终端设备(手机,电脑,电视等)&lt;/p>
&lt;p>这里不讨论标准的 ipv6 协议, 只讨论电信的 ipv6 的一些特征.&lt;/p>
&lt;h2 id="地址分配">地址分配&lt;/h2>
&lt;p>首先是地址分配方式, ipv6 有三种分配方式: 静态分配, SLAAC, DHCPv6.&lt;br>
湖北电信使用的是 SLAAC, 也就是说电信的 ipv6 地址是由设备自动分配的, 由于电信的 ipv6 地址池足够大, 所以不会出现地址冲突的问题.&lt;/p>
&lt;p>电信 ipv6 地址是随机分配的, 24 小时后重新分配. 如果要从外部访问, 必须使用 DDNS 服务.&lt;/p>
&lt;h2 id="防火墙">防火墙&lt;/h2>
&lt;p>目前可以发现常见的&lt;code>80&lt;/code>, &lt;code>139&lt;/code>, &lt;code>445&lt;/code>等端口已对齐 ipv4 防火前已经都封了, 这非常容易理解, 运营商级的防火墙确实能保护到缺乏网络安全意识的普通用户. 2020 年时电信 ipv6 都是开放的, 现在已经封了一些常用端口.&lt;/p></description></item><item><title>为什么不应该把TCP思维套在UDP上</title><link>https://blog.jqknono.com/zh-cn/blog/2024/06/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BA%94%E8%AF%A5%E6%8A%8Atcp%E6%80%9D%E7%BB%B4%E5%A5%97%E5%9C%A8udp%E4%B8%8A/</link><pubDate>Fri, 28 Jun 2024 17:20:09 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2024/06/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BA%94%E8%AF%A5%E6%8A%8Atcp%E6%80%9D%E7%BB%B4%E5%A5%97%E5%9C%A8udp%E4%B8%8A/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 为什么不应该把TCP思维套在UDP上&lt;/li>
&lt;/ul>
&lt;h1 id="为什么不应该把-tcp-思维套在-udp-上">为什么不应该把 TCP 思维套在 UDP 上?&lt;/h1>
&lt;h2 id="结构差异">结构差异&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2023/06/30/ndPGpzMRX1L4Q6D.png" alt="TCP表头">&lt;br>
&lt;img src="https://s2.loli.net/2023/06/30/ofdBYKb6iqaICA9.png" alt="UDP表头">&lt;/p>
&lt;p>TCP 上的概念很多: 建立通路, 资源使用, 数据传输, 可靠传输, 基于重复累计确认的重传, 超时重传, 校验和, 流量控制, 拥塞控制, 最大分段大小, 选择确认, TCP 窗口缩放选项, TCP 时间戳, 强制数据递交, 终结通路.&lt;/p>
&lt;p>以上这些能力, UDP 基本上都没有, 它仅比链路层多一点区分应用层目的的能力. UDP 足够简单意味着足够灵活.&lt;/p>
&lt;h2 id="如果可能发生则一定会发生">如果可能发生,则一定会发生&lt;/h2>
&lt;p>墨菲定律:&lt;/p>
&lt;blockquote>
&lt;p>如果有多过一种方式去做某事，而其中一种方式将导致灾难，则必定有人会这样选择。&lt;/p>&lt;/blockquote>
&lt;p>通常介绍 UDP 适合应用在游戏/语音/视频等场景, 少量的错包不影响业务.
为什么 UDP 适合这些场景? 它能用在这些场景, 不代表它是这些场景的最优方案, 必然是存在 TCP 无法解决的问题, 才让这些服务选择了功能简陋的 UDP 协议. 错包不影响业务扩展开来讲是指 TCP 协议在乎错包, UDP 不在乎错包, 更在乎实时性/连续性. UDP 的特点就是它不在乎 TCP 在乎的因素, 这些因素影响了实时性.&lt;/p>
&lt;p>在代码实现上, UDP 只需要创建一个 socket, 绑定到一个端口上, 即可以开始收发. 通常 socket 用完时, 端口也用完了.&lt;/p></description></item><item><title>linux网络问题定位</title><link>https://blog.jqknono.com/zh-cn/blog/2024/05/28/linux%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/</link><pubDate>Tue, 28 May 2024 16:39:14 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2024/05/28/linux%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/</guid><description>&lt;h2 id="排障工具">排障工具&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>工具&lt;/th>
 &lt;th>说明&lt;/th>
 &lt;th>用法&lt;/th>
 &lt;th>说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ping&lt;/td>
 &lt;td>测试网络连通性&lt;/td>
 &lt;td>ping baidu.com&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>traceroute&lt;/td>
 &lt;td>路由跟踪&lt;/td>
 &lt;td>traceroute ip&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>route&lt;/td>
 &lt;td>路由表&lt;/td>
 &lt;td>route -n&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netstat&lt;/td>
 &lt;td>网络连接&lt;/td>
 &lt;td>netstat -ano&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nslookup&lt;/td>
 &lt;td>DNS 解析&lt;/td>
 &lt;td>nslookup baidu.com&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ifconfig&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>ifconfig&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>arp&lt;/td>
 &lt;td>ARP 缓存&lt;/td>
 &lt;td>arp -a&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nbtstat&lt;/td>
 &lt;td>NetBIOS&lt;/td>
 &lt;td>nbtstat -n&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netsh&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>netsh&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>net&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>net&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpdump&lt;/td>
 &lt;td>网络抓包&lt;/td>
 &lt;td>tcpdump&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>wireshark&lt;/td>
 &lt;td>网络抓包&lt;/td>
 &lt;td>wireshark&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ip&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>ip addr show&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ss&lt;/td>
 &lt;td>网络连接&lt;/td>
 &lt;td>ss -tunlp&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netstat&lt;/td>
 &lt;td>查看网络连接状态&lt;/td>
 &lt;td>netstat -anp&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpdump&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpdump -i eth0 -nn -s 0 -c 1000 -w /tmp/tcpdump.pcap&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iptables&lt;/td>
 &lt;td>防火墙&lt;/td>
 &lt;td>iptables -L -n -v -t nat -t mangle -t filter&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ss&lt;/td>
 &lt;td>netstat 的替代品&lt;/td>
 &lt;td>ss -anp&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ifconfig&lt;/td>
 &lt;td>查看网卡信息&lt;/td>
 &lt;td>ifconfig eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ip&lt;/td>
 &lt;td>查看网卡信息&lt;/td>
 &lt;td>ip addr show eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>route&lt;/td>
 &lt;td>查看路由表&lt;/td>
 &lt;td>route -n&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>traceroute&lt;/td>
 &lt;td>查看路由跳数&lt;/td>
 &lt;td>traceroute &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ping&lt;/td>
 &lt;td>测试网络连通性&lt;/td>
 &lt;td>ping &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>telnet&lt;/td>
 &lt;td>测试端口连通性&lt;/td>
 &lt;td>telnet &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a> 80&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nslookup&lt;/td>
 &lt;td>域名解析&lt;/td>
 &lt;td>nslookup &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dig&lt;/td>
 &lt;td>域名解析&lt;/td>
 &lt;td>dig &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>arp&lt;/td>
 &lt;td>查看 arp 缓存&lt;/td>
 &lt;td>arp -a&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netcat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>nc -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nmap&lt;/td>
 &lt;td>端口扫描工具&lt;/td>
 &lt;td>nmap -sT -p 80 &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>mtr&lt;/td>
 &lt;td>网络连通性测试工具&lt;/td>
 &lt;td>mtr &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iperf&lt;/td>
 &lt;td>网络性能测试工具&lt;/td>
 &lt;td>iperf -s -p 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iptraf&lt;/td>
 &lt;td>网络流量监控工具&lt;/td>
 &lt;td>iptraf -i eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ipcalc&lt;/td>
 &lt;td>IP 地址计算工具&lt;/td>
 &lt;td>ipcalc&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iftop&lt;/td>
 &lt;td>网络流量监控工具&lt;/td>
 &lt;td>iftop -i eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iostat&lt;/td>
 &lt;td>磁盘 IO 监控工具&lt;/td>
 &lt;td>iostat -x 1 10&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>vmstat&lt;/td>
 &lt;td>虚拟内存监控工具&lt;/td>
 &lt;td>vmstat 1 10&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>sar&lt;/td>
 &lt;td>系统性能监控工具&lt;/td>
 &lt;td>sar -n DEV 1 10&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>lsof&lt;/td>
 &lt;td>查看文件打开情况&lt;/td>
 &lt;td>lsof -i:80&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>strace&lt;/td>
 &lt;td>跟踪系统调用&lt;/td>
 &lt;td>strace -p 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpflow&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpflow -i eth0 -c -C -p -o /tmp/tcpflow&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpick&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpick -i eth0 -C -p -o /tmp/tcpick&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcptrace&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcptrace -i eth0 -C -p -o /tmp/tcptrace&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpslice&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpslice -i eth0 -C -p -o /tmp/tcpslice&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpstat&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpstat -i eth0 -C -p -o /tmp/tcpstat&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpdump&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpdump -i eth0 -C -p -o /tmp/tcpdump&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tshark&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tshark -i eth0 -C -p -o /tmp/tshark&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>wireshark&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>wireshark -i eth0 -C -p -o /tmp/wireshark&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>socat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>socat -d -d TCP-LISTEN:1234,fork TCP:www.baidu.com:80&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ncat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>ncat -l 1234 -c &amp;rsquo;ncat &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a> 80'&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netperf&lt;/td>
 &lt;td>网络性能测试工具&lt;/td>
 &lt;td>netperf -H &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a> -l 60 -t TCP_STREAM&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netcat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>netcat -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nc&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>nc -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netpipe&lt;/td>
 &lt;td>网络性能测试工具&lt;/td>
 &lt;td>netpipe -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netkit&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>netkit -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>bridge&lt;/td>
 &lt;td>网桥工具&lt;/td>
 &lt;td>bridge -s&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>如何提升自建DNS服务下的网络体验</title><link>https://blog.jqknono.com/zh-cn/blog/2024/05/18/%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%87%AA%E5%BB%BAdns%E6%9C%8D%E5%8A%A1%E4%B8%8B%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BD%93%E9%AA%8C/</link><pubDate>Sat, 18 May 2024 10:46:44 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2024/05/18/%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%87%AA%E5%BB%BAdns%E6%9C%8D%E5%8A%A1%E4%B8%8B%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BD%93%E9%AA%8C/</guid><description>&lt;h2 id="网络质量和网络体验">网络质量和网络体验&lt;/h2>
&lt;blockquote>
&lt;p>什么都不做, 即可以获得最好的网络体验&lt;/p>&lt;/blockquote>
&lt;p>需要明确, 这里&lt;code>网络质量&lt;/code>和&lt;code>网络体验&lt;/code>是两个不同的概念. 通信是一个过程, 涉及多个设备, 我们可以称单个设备的上下行表现为&lt;code>网络质量&lt;/code>, 而整个端到端的通信表现, 我们可以称为&lt;code>网络体验&lt;/code>.&lt;/p>
&lt;h2 id="如何衡量网络质量">如何衡量网络质量&lt;/h2>
&lt;p>衡量网络质量通常涉及多个指标和方法。以下是一些常见的衡量网络质量的方法和指标：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>带宽（Bandwidth）&lt;/strong>：带宽是指网络传输数据的能力，通常以每秒传输的数据量（比特/秒）来衡量。更高的带宽通常表示更好的网络质量。&lt;/li>
&lt;li>&lt;strong>延迟（Latency）&lt;/strong>：延迟是指数据从发送端到接收端所需的时间。低延迟表示数据传输速度快，网络响应更快。&lt;/li>
&lt;li>&lt;strong>丢包率（Packet Loss Rate）&lt;/strong>：丢包率是指在数据传输过程中丢失的数据包的比例。较低的丢包率通常意味着网络质量较好。&lt;/li>
&lt;li>&lt;strong>抖动（Jitter）&lt;/strong>：抖动是指数据包在传输过程中的变化或波动。较小的抖动表示网络稳定性较高。&lt;/li>
&lt;li>&lt;strong>吞吐量（Throughput）&lt;/strong>：吞吐量是指网络传输的实际数据量，通常以单位时间内的数据传输量来衡量。更高的吞吐量表示网络质量更好。&lt;/li>
&lt;li>&lt;strong>网络拓扑（Network Topology）&lt;/strong>：网络拓扑描述了网络中节点之间的连接方式和结构。合理的网络拓扑设计可以提高网络性能和质量。&lt;/li>
&lt;li>&lt;strong>服务质量（Quality of Service，QoS）&lt;/strong>：QoS 是一组技术和机制，用于确保在网络中的数据传输中实现可接受的服务质量。QoS 可以通过各种方式实现，包括流量控制、优先级队列等。&lt;/li>
&lt;li>&lt;strong>网络协议分析（Protocol Analysis）&lt;/strong>：通过分析网络协议和数据包，可以了解网络中的性能指标和问题，例如使用 Wireshark 等网络分析工具。&lt;/li>
&lt;/ol>
&lt;p>综合利用这些指标和方法，可以全面地评估网络质量，确定网络性能的优势和改进的空间。 但这些是运营商关注的指标, 对于普通用户, 只需要购买价格合适的路由器即可, 现代路由器都有自动调整网络质量的功能.&lt;/p>
&lt;h2 id="如何衡量网络体验">如何衡量网络体验&lt;/h2>
&lt;p>首先是&lt;strong>可访问性&lt;/strong>, 能访问是最重要的基础. 因此, 域名解析服务需要满足基础的能力:&lt;/p>
&lt;ul>
&lt;li>全面, 上级 DNS 服务需要权威, 且能够解析更多的域名&lt;/li>
&lt;li>正确, 解析结果需要正确, 不能出现解析错误. 部分 DNS 服务商会对一些域名进行劫持或污染, 解析到广告页面.&lt;/li>
&lt;li>及时, ip 地址变更后, 需要及时更新解析结果, 而不是返回旧的 ip 地址&lt;/li>
&lt;/ul>
&lt;p>其次是 DNS 解析结果的 IP 所能提供服务的&lt;code>网络质量&lt;/code>.&lt;/p>
&lt;p>互联网服务所能提供的&lt;code>网络质量&lt;/code>, 通常&lt;strong>强依赖地域&lt;/strong>, 服务器和客户端在地域上越接近, 则服务质量越好.&lt;/p>
&lt;p>许多付费 DNS 解析服务商都支持按地域解析不同 IP, 例如这是阿里云能提供的一部分服务:&lt;/p></description></item><item><title>ChatGPT VPN识别绕过方法</title><link>https://blog.jqknono.com/zh-cn/blog/2024/05/09/chatgpt-vpn%E8%AF%86%E5%88%AB%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 09 May 2024 10:30:29 +0800</pubDate><guid>https://blog.jqknono.com/zh-cn/blog/2024/05/09/chatgpt-vpn%E8%AF%86%E5%88%AB%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/</guid><description>&lt;p>如何处理 ChatGPT 报错&lt;br>
&amp;ldquo;Unable to load site&amp;rdquo;&lt;br>
&amp;ldquo;Please try again later, if you are using a VPN, try turning it off.&amp;rdquo;&lt;br>
&amp;ldquo;Check the status page for information on outages.&amp;rdquo;&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/05/09/dT4xi1mwFgYRKhq.png" alt="">&lt;/p>
&lt;p>chatgpt 目前仍然是使用体验最好的聊天机器人，但是在国内使用时，由于网络环境的限制，我们需要使用梯子来访问 chatgpt。但是 chatgpt 对梯子的检测较为严格，如果检测到使用了梯子，会直接拒绝访问。这里介绍一种绕过 chatgpt 对梯子检测的方法。&lt;/p>
&lt;p>有其他人提到更换 IP 来绕过封锁, 但我们一般使用 IP 的地域已经是可以提供服务的地区, 所以这种方法并不一定是实际的拒绝服务原因.&lt;/p>
&lt;p>另外有人提到梯子使用人数较多容易被识别, 劝人购买较贵的使用人数少的梯子, 这也很难成为合理理由, 在 ipv4 短缺的今天, 即便是海外, 也存在大量的社区使用 nat 分配端口, 共用一个 ipv4 的情况. chatgpt 一封就要封一大片, 作为一个被广泛使用的服务, 这样的检测设计肯定是不合理的.&lt;/p>
&lt;p>对大众服务来说, 检测源 IP 一致性则更为合理. 付费梯子的特征通常是限制流量或限制网速, 因此多数使用梯子的用户选择按规则绕过. 绕过自己的运营商可直接访问的地址, 以减少流量消耗, 或者获得更快的访问速度, 仅在访问被防火墙拦截的地址时导入流量到代理. 这种访问目标服务的不同方式, 可能会造成源地址不一致. 例如访问 A 服务需要同时和域名 X 和域名 Y 进行通信, 而防火墙仅拦截了域名 X, 那么在 A 服务看到的同一请求的不同阶段的访问来源 IP 不一致.&lt;/p></description></item></channel></rss>