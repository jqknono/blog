<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on Nono Blogs</title><link>https://blog.jqknono.com/tags/tools/</link><description>Recent content in Tools on Nono Blogs</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 10 Jul 2025 16:30:07 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Split-Routing Support to AdGuardHome</title><link>https://blog.jqknono.com/blog/2025/07/10/adding-split-routing-support-to-adguardhome/</link><pubDate>Thu, 10 Jul 2025 16:30:07 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/07/10/adding-split-routing-support-to-adguardhome/</guid><description>&lt;p>Open-source repo: &lt;a href="https://github.com/AdGuardPrivate/AdGuardPrivate">https://github.com/AdGuardPrivate/AdGuardPrivate&lt;/a>&lt;/p>
&lt;p>Out of the box, AdGuardHome has no built-in split-routing rules—you either hand-write them or configure an upstream file, which is one of its pain points.&lt;/p>
&lt;p>It took quite a while to develop and thoroughly test the split-routing feature, but it’s now running stably.&lt;/p>
&lt;p>With split-routing in place, you no longer need to put SmartDNS in front of AdGuardHome; the single AdGuardPrivate binary handles everything.&lt;/p>
&lt;p>At the moment the feature only supports &lt;strong>splitting traffic into two upstream pools: A and B&lt;/strong>—part of your traffic goes to pool A, the rest to pool B. Enabling more flexible routing would require significantly more work, as the routing logic spans both AdGuardHome and dnsproxy. If two pools aren’t enough, feel free to fork the project and experiment yourself.&lt;/p></description></item><item><title>Automated debugging with Cursor</title><link>https://blog.jqknono.com/blog/2025/06/27/automated-debugging-with-cursor/</link><pubDate>Fri, 27 Jun 2025 13:18:19 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/06/27/automated-debugging-with-cursor/</guid><description>&lt;p>The following is an outline for automated development testing using Cursor:&lt;/p>
&lt;h3 id="1-introduction">1. Introduction&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Overview of Cursor&lt;/strong>: Describe what Cursor is and its main features and capabilities.&lt;/li>
&lt;li>&lt;strong>Background on automated development testing&lt;/strong>: Explain why automated development testing is needed and its importance in modern software development.&lt;/li>
&lt;/ul>
&lt;h3 id="2-preparation">2. Preparation&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Installation and setup&lt;/strong>:
&lt;ul>
&lt;li>Download and install Cursor.&lt;/li>
&lt;li>Configure required plugins and extensions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Environment configuration&lt;/strong>:
&lt;ul>
&lt;li>Set up the project structure.&lt;/li>
&lt;li>Install dependencies (e.g., Node.js, Python, etc.).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-fundamentals-of-automation-testing">3. Fundamentals of automation testing&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Test types&lt;/strong>:
&lt;ul>
&lt;li>Unit tests&lt;/li>
&lt;li>Integration tests&lt;/li>
&lt;li>End-to-end tests&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Choosing a test framework&lt;/strong>:
&lt;ul>
&lt;li>Introduce common frameworks (e.g., Jest, Mocha, PyTest, etc.).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="4-writing-test-cases-with-cursor">4. Writing test cases with Cursor&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Creating test files&lt;/strong>:
&lt;ul>
&lt;li>Create new test files in Cursor.&lt;/li>
&lt;li>Use templates to generate basic test structures.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Writing test logic&lt;/strong>:
&lt;ul>
&lt;li>Write unit tests.&lt;/li>
&lt;li>Use assertion libraries for validation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="5-running-and-debugging-tests">5. Running and debugging tests&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Run tests&lt;/strong>:
&lt;ul>
&lt;li>Execute single or multiple test cases in Cursor.&lt;/li>
&lt;li>View test results and output.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Debug tests&lt;/strong>:
&lt;ul>
&lt;li>Set breakpoints.&lt;/li>
&lt;li>Step through execution to inspect variables and program state.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="6-test-reports-and-analysis">6. Test reports and analysis&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Generate test reports&lt;/strong>:
&lt;ul>
&lt;li>Use frameworks to produce detailed reports.&lt;/li>
&lt;li>Export in HTML or other formats.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Analyze results&lt;/strong>:
&lt;ul>
&lt;li>Identify failing tests.&lt;/li>
&lt;li>Determine causes and repair them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="7-continuous-integration--deployment-cicd">7. Continuous integration &amp;amp; deployment (CI/CD)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Integrate with CI/CD tools&lt;/strong>:
&lt;ul>
&lt;li>Integrate Cursor with GitHub Actions, Travis CI, etc.&lt;/li>
&lt;li>Configure automatic test triggering.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Deployment and monitoring&lt;/strong>:
&lt;ul>
&lt;li>Auto-deploy to test environments.&lt;/li>
&lt;li>Monitor test coverage and quality metrics.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="8-best-practices-and-tips">8. Best practices and tips&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Refactoring and test maintenance&lt;/strong>:
&lt;ul>
&lt;li>Keep tests effective while refactoring code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Performance optimization&lt;/strong>:
&lt;ul>
&lt;li>Tips to speed up test execution.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Troubleshooting common issues&lt;/strong>:
&lt;ul>
&lt;li>Address frequent causes of test failures.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="9-conclusion">9. Conclusion&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Summary&lt;/strong>: Review the advantages and key steps of automated development testing with Cursor.&lt;/li>
&lt;li>&lt;strong>Outlook&lt;/strong>: Possible future developments and improvements.&lt;/li>
&lt;/ul>
&lt;p>This outline aims to help developers systematically understand how to leverage Cursor for automated development testing, thereby improving efficiency and code quality.&lt;/p></description></item><item><title>Character Design</title><link>https://blog.jqknono.com/blog/tools/ai/roles/</link><pubDate>Sat, 24 May 2025 18:01:17 +0800</pubDate><guid>https://blog.jqknono.com/blog/tools/ai/roles/</guid><description/></item><item><title>The AI Assistant Is Way Smarter Than Me</title><link>https://blog.jqknono.com/blog/2025/03/17/the-ai-assistant-is-way-smarter-than-me/</link><pubDate>Mon, 17 Mar 2025 12:17:24 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/03/17/the-ai-assistant-is-way-smarter-than-me/</guid><description>&lt;p>For a middle-aged man who has been coding for ten years, once went abroad for a gilded stint, and still cares about saving face, admitting that AI is better than me is downright embarrassing.&lt;/p>
&lt;p>The total monthly cost of all the AI tools I use doesn’t exceed 200 RMB, yet my boss pays me far more than that.&lt;/p>
&lt;p>I fully expect earfuls of ridicule:&lt;/p>
&lt;blockquote>
&lt;p>“That’s only you.”&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>“That’s what junior devs say.”&lt;/p></description></item><item><title>Hands-on Experience with GitHub Copilot Agent Mode</title><link>https://blog.jqknono.com/blog/2025/02/28/hands-on-experience-with-github-copilot-agent-mode/</link><pubDate>Fri, 28 Feb 2025 17:46:31 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/02/28/hands-on-experience-with-github-copilot-agent-mode/</guid><description>&lt;p>This post summarizes how to use GitHub Copilot in Agent mode, sharing practical experience.&lt;/p>
&lt;p>&lt;img src="https://img1.techfetch.dev/blog/202503041211061.png" alt="">&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ol>
&lt;li>Use VSCode Insider;&lt;/li>
&lt;li>Install the GitHub Copilot (Preview) extension;&lt;/li>
&lt;li>Select the Claude 3.7 Sonnet (Preview) model, which excels at code generation; other models may be superior in speed, multi-modal (e.g. image recognition) or reasoning capabilities;&lt;/li>
&lt;li>Choose &lt;strong>Agent&lt;/strong> as the working style.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://img1.techfetch.dev/qt/202502191622707.png" alt="Prerequisites">&lt;/p>
&lt;h2 id="step-by-step">Step-by-step&lt;/h2>
&lt;ol>
&lt;li>Open the “Copilot Edits” tab;&lt;/li>
&lt;li>Attach items such as “Codebase”, “Get Errors”, “Terminal Last Commands”;&lt;/li>
&lt;li>Add files to the “Working Set”; it defaults to the currently opened file, but you can manually choose others (e.g. “Open Editors”);&lt;/li>
&lt;li>Add “Instructions”; type the prompt that you especially want the Copilot Agent to notice;&lt;/li>
&lt;li>Click “Send” and watch the Agent perform.&lt;/li>
&lt;/ol>
&lt;h2 id="additional-notes">Additional notes&lt;/h2>
&lt;ul>
&lt;li>VSCode language extensions’ lint features produce Errors or Warnings; the Agent can automatically fix the code based on those hints.&lt;/li>
&lt;li>As the conversation continues, the modifications may drift from your intent. Keep every session tightly scoped to a single clear topic; finish the short-term goal and start a new task rather than letting the session grow too long.&lt;/li>
&lt;li>Under “Working Set”, the “Add Files” menu provides a “Related Files” option which recommends related sources.&lt;/li>
&lt;li>Watch the line count of individual files to avoid burning tokens.&lt;/li>
&lt;li>Generate the baseline first, then tests. This allows the Agent to debug and self-verify with test results.&lt;/li>
&lt;li>To constrain modifications, you can add the following to settings.json; it only alters files in the designated directory (for reference):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;github.copilot.chat.codeGeneration.instructions&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Only modify files under ./script/; leave others unchanged.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;If the target file exceeds 1,000 lines, place new functions in a new file and import them; if the change would make the file too long you may disregard this rule temporarily.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;github.copilot.chat.testGeneration.instructions&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Generate test cases in the existing unit-test files.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;After any code changes, always run the tests to verify correctness.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="common-issues">Common issues&lt;/h2>
&lt;h3 id="desired-business-logic-code-is-not-produced">Desired business logic code is not produced&lt;/h3>
&lt;p>Break large tasks into small ones; one session per micro-task. A bloated context makes the model’s attention scatter.&lt;/p></description></item><item><title>A New Choice for Ad Blocking—AdGuardPrivate</title><link>https://blog.jqknono.com/blog/2025/02/20/a-new-choice-for-ad-blockingadguardprivate/</link><pubDate>Thu, 20 Feb 2025 19:10:12 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/02/20/a-new-choice-for-ad-blockingadguardprivate/</guid><description>&lt;p>&lt;a href="https://www.adguardprivate.com">AdGuardPrivate&lt;/a> is a DNS–based service focused on protecting network privacy and blocking ads. Built atop the open-source project &lt;a href="https://github.com/AdguardTeam/AdGuardHome">AdGuard Home&lt;/a>, it uses intelligent traffic analysis and filtration to deliver a secure, high-performance browsing experience. Below are its key features and characteristics:&lt;/p>
&lt;h2 id="core-functionality-ad-blocking--privacy-protection">Core Functionality: Ad Blocking &amp;amp; Privacy Protection&lt;/h2>
&lt;ul>
&lt;li>Ad Blocking: Intercepts web advertisements (banners, pop-ups, video ads, etc.) and in-app ads at the DNS level, speeding up page loads and improving device performance.&lt;/li>
&lt;li>Privacy Protection: Prevents tracking scripts, social-media widgets, and privacy-breaching requests from collecting behavioral data; blocks malicious sites, phishing links, and malware.&lt;/li>
&lt;li>DNS Anti-Hijacking: Ensures accurate and secure domain resolution through encrypted DNS (DoT, DoH, HTTP/3), guarding against traffic tampering.&lt;/li>
&lt;/ul>
&lt;h2 id="advanced-features-customization--optimization">Advanced Features: Customization &amp;amp; Optimization&lt;/h2>
&lt;ul>
&lt;li>Custom Rules: Allow users to import third-party allow/deny lists or create personalized filtering rules, granting fine control over access to specific apps, sites, or games.&lt;/li>
&lt;li>Smart Resolution: Supports friendly domain resolution for LAN devices (e.g., NAS or corporate servers), simplifying network management.&lt;/li>
&lt;li>Statistics &amp;amp; Analytics: Provides detailed request logs, blocking statistics, and 72-hour query history, giving users visibility into their network usage.&lt;/li>
&lt;/ul>
&lt;h2 id="family--enterprise-scenarios">Family &amp;amp; Enterprise Scenarios&lt;/h2>
&lt;ul>
&lt;li>Parental Controls: Blocks adult sites and games; helps manage household internet time and protect minors.&lt;/li>
&lt;li>Enterprise Deployment: Offers distributed server load balancing and optimized China-mainland access speed, backed by stable Alibaba Cloud nodes.&lt;/li>
&lt;/ul>
&lt;h2 id="platform-compatibility--service-tiers">Platform Compatibility &amp;amp; Service Tiers&lt;/h2>
&lt;ul>
&lt;li>Cross-Platform: Works on multiple operating systems with no extra software required—just configure encrypted DNS and go.&lt;/li>
&lt;li>Service Models:
&lt;ul>
&lt;li>Free Public Service: Core ad-blocking and security rules; may trigger occasional false positives.&lt;/li>
&lt;li>Paid Private Service: Adds custom resolution, authoritative DNS, per-device ID tracking for usage history, and more—ideal for users needing advanced personalization.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="technical-strengths--limitations">Technical Strengths &amp;amp; Limitations&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Strengths: Works across all devices, adds zero overhead, reduces unnecessary data loads—great for mobile battery life.&lt;/p></description></item><item><title>Using curl to Fetch DNS Results</title><link>https://blog.jqknono.com/blog/2025/02/20/using-curl-to-fetch-dns-results/</link><pubDate>Thu, 20 Feb 2025 17:08:34 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/02/20/using-curl-to-fetch-dns-results/</guid><description>&lt;p>This article presents two methods to retrieve DNS query results using curl:&lt;/p>
&lt;ol>
&lt;li>DNS JSON format&lt;/li>
&lt;li>DNS Wire Format&lt;/li>
&lt;/ol>
&lt;h2 id="1-dns-json-format-queries">1. DNS JSON Format Queries&lt;/h2>
&lt;p>Returns DNS responses in JSON, making them easy to parse.&lt;/p>
&lt;h3 id="google">Google&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -H &lt;span class="s1">&amp;#39;accept: application/dns-json&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;https://dns.google/resolve?name=baidu.com&amp;amp;type=A&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cloudflare">Cloudflare&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -H &lt;span class="s1">&amp;#39;accept: application/dns-json&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;https://cloudflare-dns.com/dns-query?name=baidu.com&amp;amp;type=A&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> jq .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="aliyun">Aliyun&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -H &lt;span class="s2">&amp;#34;accept: application/dns-json&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;https://223.5.5.5/resolve?name=baidu.com&amp;amp;type=1&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dnspub">dns.pub&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -H &lt;span class="s1">&amp;#39;accept: application/dns-json&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;https://doh.dns.pub/dns-query?name=baidu.com&amp;amp;type=A&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> jq .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="adguard-private-dns">AdGuard Private DNS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Currently unsupported&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-dns-wire-format-queries">2. DNS Wire Format Queries&lt;/h2>
&lt;p>Returns binary DNS responses that require further parsing.&lt;/p></description></item><item><title>Tools</title><link>https://blog.jqknono.com/blog/tools/dns/</link><pubDate>Thu, 20 Feb 2025 15:02:33 +0800</pubDate><guid>https://blog.jqknono.com/blog/tools/dns/</guid><description/></item><item><title>WeRead Experience Sharing</title><link>https://blog.jqknono.com/blog/tools/wechat-reading/</link><pubDate>Tue, 24 Dec 2024 15:01:40 +0800</pubDate><guid>https://blog.jqknono.com/blog/tools/wechat-reading/</guid><description>&lt;p>There are many free reading options, but WeRead truly offers one of the better experiences. Those seeking free books can look at zlibrary.&lt;/p>
&lt;p>This post mainly covers the day-to-day use of WeRead and a few helpful tools. If any content infringes rights, please contact me for removal: &lt;code>weread-challenge@techfetch.dev&lt;/code>&lt;/p></description></item><item><title>WeChat Read Auto Check-in &amp; Read-Time Boost</title><link>https://blog.jqknono.com/blog/2024/12/05/wechat-read-auto-check-in-read-time-boost/</link><pubDate>Thu, 05 Dec 2024 12:36:38 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/12/05/wechat-read-auto-check-in-read-time-boost/</guid><description>&lt;p>Just to get a cheaper WeChat Read membership.&lt;/p>
&lt;p>This document may be out of date; for the latest version visit the open-source repository: &lt;a href="https://github.com/jqknono/weread-challenge-selenium">https://github.com/jqknono/weread-challenge-selenium&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://img1.techfetch.dev/blog/202412261741639.gif" alt="Cheaper WeChat Read membership">&lt;/p>
&lt;h2 id="wechat-read-rules">WeChat Read Rules&lt;/h2>
&lt;ul>
&lt;li>Offline reading counts toward the total, but must sync while online.&lt;/li>
&lt;li>Web edition, e-ink, mini-program, TTS, and audiobook listening &lt;strong>all count&lt;/strong>.&lt;/li>
&lt;li>Sessions judged as “too long” in a single auto-read/listen will have the excess &lt;strong>excluded&lt;/strong> based on behavioral features.&lt;/li>
&lt;li>A day counts only after &lt;strong>&amp;gt;5 minutes&lt;/strong> of reading that day.&lt;/li>
&lt;li>Pay ¥5 to get 2 days of membership immediately; read for 29 of the next 30 days and rack up 30 hours to earn 30 more days + 30 coins.&lt;/li>
&lt;li>Pay ¥50 to get 30 days immediately; read 360 of the next 365 days and reach 300 hours to earn 365 days + 500 coins.&lt;/li>
&lt;/ul>
&lt;p>Undocumented quirks observed in practice:&lt;/p></description></item><item><title>Turning off the discrete GPU to save power</title><link>https://blog.jqknono.com/blog/2024/11/18/turning-off-the-discrete-gpu-to-save-power/</link><pubDate>Mon, 18 Nov 2024 10:22:16 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/11/18/turning-off-the-discrete-gpu-to-save-power/</guid><description>&lt;p>This post is for friends who rarely shut down their desktop and often remote into it to work.&lt;/p>
&lt;p>My daily workstation and gaming rig are the same machine, with a 4K 144 Hz monitor. I normally leave the discrete GPU on just to make everyday interactions smoother, but power draw is noticeably higher.&lt;/p>
&lt;p>&lt;em>The wattage in the screenshots below also covers an always-on J4125 mini-host that idles around 18 W, so take the numbers with a grain of salt.&lt;/em>&lt;/p></description></item><item><title>snort</title><link>https://blog.jqknono.com/blog/2024/06/28/snort/</link><pubDate>Fri, 28 Jun 2024 19:03:59 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/snort/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> snort&lt;/li>
&lt;/ul>
&lt;h1 id="snort">Snort&lt;/h1>
&lt;p>&lt;a href="https://www.snort.org/">https://www.snort.org/&lt;/a>&lt;/p>
&lt;p>Protect your network with the world&amp;rsquo;s most powerful Open Source detection software.&lt;/p>
&lt;p>&lt;strong>What is Snort?&lt;/strong>
Snort is the foremost Open Source Intrusion Prevention System (IPS) in the world.
Snort IPS uses a series of rules that help define malicious network activity and
uses those rules to find packets that match against them and generates alerts for users.&lt;/p>
&lt;p>Snort can be deployed inline to stop these packets, as well.
Snort has three primary uses: As a packet sniffer like tcpdump, as a packet logger —
which is useful for network traffic debugging, or it can be used as a full-blown network intrusion prevention system.
Snort can be downloaded and configured for personal and business use alike.&lt;/p></description></item><item><title>wireguard configuration</title><link>https://blog.jqknono.com/blog/2024/06/28/wireguard-configuration/</link><pubDate>Fri, 28 Jun 2024 17:11:32 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/wireguard-configuration/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> wireguard configuration&lt;/li>
&lt;/ul>
&lt;h1 id="wireguard-configuration">wireguard Configuration&lt;/h1>
&lt;h2 id="firewall-configuration">Firewall Configuration&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wireguard&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">installtunnelservice&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">wg_conf_path&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wg&lt;/span> &lt;span class="n">show&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetConnectionProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetFirewallProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetFirewallProfile&lt;/span> &lt;span class="n">-Profile&lt;/span> &lt;span class="n">domain&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">public&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">-DisabledInterfaceAliases&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">wg_config_name&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-ifindex&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">interface&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">-Forwarding&lt;/span> &lt;span class="n">Enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">New-NetFirewallRule&lt;/span> &lt;span class="n">-DisplayName&lt;/span> &lt;span class="s2">&amp;#34;@wg1&amp;#34;&lt;/span> &lt;span class="n">-Direction&lt;/span> &lt;span class="n">Inbound&lt;/span> &lt;span class="n">-RemoteAddress&lt;/span> &lt;span class="mf">10.66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">24&lt;/span> &lt;span class="n">-Action&lt;/span> &lt;span class="n">Allow&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">New-NetFirewallRule&lt;/span> &lt;span class="n">-DisplayName&lt;/span> &lt;span class="s2">&amp;#34;@wg1&amp;#34;&lt;/span> &lt;span class="n">-Direction&lt;/span> &lt;span class="n">Outbound&lt;/span> &lt;span class="n">-RemoteAddress&lt;/span> &lt;span class="mf">10.66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">24&lt;/span> &lt;span class="n">-Action&lt;/span> &lt;span class="n">Allow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Locate the blocking cause&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">auditpol&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nb">set &lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">subcategory&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="s2">&amp;#34;{0CCE9225-69AE-11D9-BED3-505054503030}&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">disable&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">failure&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">enable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wevtutil&lt;/span> &lt;span class="n">qe&lt;/span> &lt;span class="n">Security&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">q:&lt;/span>&lt;span class="s2">&amp;#34;*[System/EventID=5152]&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">c:&lt;/span>&lt;span class="mf">5&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">rd&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">true&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">f:text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">auditpol&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nb">set &lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">subcategory&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="s2">&amp;#34;{0CCE9225-69AE-11D9-BED3-505054503030}&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">disable&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">failure&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">disable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Let's Encrypt Certificate Issuance Limits</title><link>https://blog.jqknono.com/blog/2024/06/28/lets-encrypt-certificate-issuance-limits/</link><pubDate>Fri, 28 Jun 2024 16:12:01 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/lets-encrypt-certificate-issuance-limits/</guid><description>&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;ul>
&lt;li>At most 50 certificates per registered domain per week&lt;/li>
&lt;li>At most 300 new-order requests per account per 3 hours&lt;/li>
&lt;li>At most 100 domains per certificate&lt;/li>
&lt;li>At most 5 duplicate certificates per week&lt;/li>
&lt;li>&lt;strong>Renewal certificates are exempt from these limits&lt;/strong>&lt;/li>
&lt;li>At most 10 accounts created per IP address per 3 hours&lt;/li>
&lt;li>At most 500 accounts created per IPv6 /48 per 3 hours&lt;/li>
&lt;/ul>
&lt;p>If you need certificates for many sub-domains, combine “50 certificates per registered domain per week” with “100 domains per certificate” to issue up to 5,000 sub-domains per week.&lt;/p></description></item><item><title>Tools</title><link>https://blog.jqknono.com/blog/tools/</link><pubDate>Fri, 28 Jun 2024 16:11:32 +0800</pubDate><guid>https://blog.jqknono.com/blog/tools/</guid><description/></item><item><title>Simple server-client code</title><link>https://blog.jqknono.com/blog/2024/06/28/simple-server-client-code/</link><pubDate>Fri, 28 Jun 2024 16:07:13 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/simple-server-client-code/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Simple server-client code&lt;/li>
&lt;/ul>
&lt;h1 id="simple-server-client-code-windows">Simple server-client code Windows&lt;/h1>
&lt;h2 id="windows">Windows&lt;/h2>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/windows/win32/winsock/complete-client-code">Complete Winsock Client Code&lt;/a>
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/winsock/complete-server-code">Complete Winsock Server Code&lt;/a>&lt;/p>
&lt;h2 id="linux">Linux&lt;/h2>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/socket-programming-cc/">Linux Socket Programming&lt;/a>
&lt;a href="https://www.geeksforgeeks.org/simple-client-server-application-in-c/">Simple client/server application in C&lt;/a>&lt;/p></description></item><item><title>Testing Tools</title><link>https://blog.jqknono.com/blog/tools/testing-tools/</link><pubDate>Fri, 28 Jun 2024 16:06:37 +0800</pubDate><guid>https://blog.jqknono.com/blog/tools/testing-tools/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Testing Tools&lt;/li>
&lt;/ul>
&lt;h1 id="testing-tools">Testing Tools&lt;/h1>
&lt;ul>
&lt;li>[&lt;a href="%E7%B2%BE%E7%A1%AE%E5%8F%91%E5%8C%85-hping3" title="精确发包-hping3">Precise Packet Crafting-hping3&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="%E7%AE%80%E6%98%93server-client%E4%BB%A3%E7%A0%81" title="简易server-client代码">Simple server-client code&lt;/a>]&lt;/li>
&lt;/ul></description></item><item><title>Device Classification</title><link>https://blog.jqknono.com/docs/private-service/devices/device-classification/</link><pubDate>Tue, 04 Jun 2024 12:26:28 +0800</pubDate><guid>https://blog.jqknono.com/docs/private-service/devices/device-classification/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Device Classification&lt;/li>
&lt;/ul>
&lt;p>Popular network devices such as NAS, soft routers, Mac minis, and routers are all abstracted as “devices.” There is no need to care about their names or form factors—focus instead on the four core aspects: &lt;strong>processor&lt;/strong>, &lt;strong>storage&lt;/strong>, &lt;strong>networking&lt;/strong>, and &lt;strong>application ecosystem&lt;/strong>.&lt;/p>
&lt;p>When evaluating the processor, the primary concern is its architecture. The common choices are &lt;strong>x86&lt;/strong> and &lt;strong>ARM&lt;/strong>; other architectures are not recommended for non-experts because their limited ecosystems will increase learning and maintenance difficulty.&lt;/p></description></item></channel></rss>