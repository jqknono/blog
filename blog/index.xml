<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Nono Blogs</title><link>https://blog.jqknono.com/blog/</link><description>Recent content in Blogs on Nono Blogs</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 25 Apr 2025 19:25:01 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Certificate Application Issues Caused by CNAME–TXT Conflicts</title><link>https://blog.jqknono.com/blog/2025/04/25/certificate-application-issues-caused-by-cnametxt-conflicts/</link><pubDate>Fri, 25 Apr 2025 19:25:01 +0800</pubDate><guid>https://blog.jqknono.com/blog/2025/04/25/certificate-application-issues-caused-by-cnametxt-conflicts/</guid><description>&lt;h2 id="cname-and-txt-records-with-the-same-prefix-cannot-coexist">CNAME and TXT Records With the Same Prefix Cannot Coexist&lt;/h2>
&lt;p>Anyone who has ever configured a domain knows that (A, AAAA) records cannot coexist with a CNAME, but most people have never run into a TXT vs. CNAME conflict.&lt;/p>
&lt;p>When would TXT and CNAME need the same prefix?&lt;/p>
&lt;p>One scenario occurs while applying for a Let’s Encrypt certificate and using the &lt;strong>&lt;em>DNS-01&lt;/em> challenge&lt;/strong> to prove domain ownership.&lt;/p>
&lt;ol>
&lt;li>Certbot creates a &lt;strong>TXT record&lt;/strong> for &lt;code>_acme-challenge.example.com&lt;/code>, using an akid/aksecret pair or a token.&lt;/li>
&lt;li>Let’s Encrypt queries the &lt;strong>TXT record&lt;/strong> to confirm that the applicant can modify DNS and therefore controls the domain.&lt;/li>
&lt;li>Let’s Encrypt issues the certificate.&lt;/li>
&lt;li>Certbot cleans up the &lt;strong>TXT record&lt;/strong> for &lt;code>_acme-challenge.example.com&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>If a &lt;strong>CNAME record&lt;/strong> for &lt;code>_acme-challenge.example.com&lt;/code> already exists when the &lt;strong>TXT record&lt;/strong> is created, the &lt;strong>TXT record&lt;/strong> insertion usually fails, causing the challenge to fail and the certificate to be denied.&lt;/p></description></item><item><title>Releasing Reserved Memory on a VPS</title><link>https://blog.jqknono.com/blog/2024/12/31/releasing-reserved-memory-on-a-vps/</link><pubDate>Tue, 31 Dec 2024 16:07:11 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/12/31/releasing-reserved-memory-on-a-vps/</guid><description>&lt;p>By default, the Linux kernel reserves a block of memory for &lt;code>kdump&lt;/code>, and its size is controlled by the &lt;code>crashkernel&lt;/code> parameter. Most application developers rarely trigger kernel panics, so you can recover this memory by editing &lt;code>/etc/default/grub&lt;/code>.&lt;/p>
&lt;p>If you do &lt;strong>not&lt;/strong> need &lt;code>kdump&lt;/code>, set the &lt;code>crashkernel&lt;/code> parameter to&lt;br>
&lt;code>0M-1G:0M,1G-4G:0M,4G-128G:0M,128G-:512M&lt;/code>; this releases the reserved memory.&lt;/p>
&lt;p>&lt;strong>Check current value&lt;/strong>: &lt;code>cat /etc/default/grub&lt;/code>&lt;/p>
&lt;p>Typical default:&lt;/p>
&lt;blockquote>
&lt;p>GRUB_CMDLINE_LINUX=&amp;quot; vga=792 console=tty0 console=ttyS0,115200n8 net.ifnames=0 noibrs nvme_core.io_timeout=4294967295 nvme_core.admin_timeout=4294967295 iommu=pt crashkernel=0M-1G:0M,1G-4G:192M,4G-128G:384M,128G-:512M crash_kexec_post_notifiers=1&amp;quot;&lt;/p></description></item><item><title>ingress-nginx is not the same as nginx ingress</title><link>https://blog.jqknono.com/blog/2024/06/18/ingress-nginx-is-not-the-same-as-nginx-ingress/</link><pubDate>Tue, 18 Jun 2024 16:39:06 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/18/ingress-nginx-is-not-the-same-as-nginx-ingress/</guid><description>&lt;p>After two weeks of reading documents, I finally realized that &lt;code>Ingress-Nginx&lt;/code> and &lt;code>Nginx Ingress&lt;/code> are not the same thing; they differ in functionality as well as implementation. There are even documents guiding the migration.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.nginx.com/nginx-ingress-controller/installation/ingress-nginx/">Migrating from the Ingress-NGINX Controller to the NGINX Ingress Controller&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.nginx.com/nginx-ingress-controller/">NGINX Ingress Controller&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.github.io/ingress-nginx/">Ingress-NGINX&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Ingress-NGINX&lt;/code> is the community edition with more participants and a greater number of search results. &lt;code>NGINX Ingress&lt;/code> is the commercial edition, richer in features but with lower community participation.&lt;/p></description></item><item><title>Using Alibaba Cloud Distributed Storage with Self-Built K8s Clusters</title><link>https://blog.jqknono.com/blog/2024/06/14/using-alibaba-cloud-distributed-storage-with-self-built-k8s-clusters/</link><pubDate>Fri, 14 Jun 2024 12:53:46 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/14/using-alibaba-cloud-distributed-storage-with-self-built-k8s-clusters/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This article, written on 2024-06-14, explains how to use Alibaba Cloud distributed storage in a self-built cluster on Alibaba Cloud. At the end you will find document links; the official Alibaba Cloud documentation is in Chinese, while the Alibaba Cloud storage plugin repository on GitHub currently contains only English docs—readers who can do so are encouraged to consult the original texts.&lt;/p>
&lt;h2 id="storage-plugin-installation">Storage Plugin Installation&lt;/h2>
&lt;ol>
&lt;li>Create a custom permission policy: &lt;a href="https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/ram-policies/disk.json">https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/ram-policies/disk.json&lt;/a>&lt;/li>
&lt;li>Create a RAM role, attach the custom policy, and save the &lt;code>accesskey&lt;/code> and &lt;code>secret&lt;/code>:
&lt;ol>
&lt;li>&lt;code>kubectl create secret -n kube-system generic csi-access-key --from-literal=id='{id}' --from-literal=secret='{secret}'&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Install the CSI driver—no Helm chart exists, so installation must be done locally (as of 2024-06-13).
&lt;ol>
&lt;li>&lt;code>git clone https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver.git&lt;/code>&lt;/li>
&lt;li>&lt;code>cd alibaba-cloud-csi-driver/deploy&lt;/code>&lt;/li>
&lt;li>If you are deploying to a self-built cluster on Alibaba Cloud ECS, simply run the next command; &lt;strong>otherwise, read the notes carefully&lt;/strong>: &lt;a href="https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/install.md">https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/install.md&lt;/a>&lt;/li>
&lt;li>&lt;code>helm upgrade --install alibaba-cloud-csi-driver ./chart --values chart/values-ecs.yaml --namespace kube-system&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Confirm with &lt;code>watch kubectl get pods -n kube-system -l app=csi-plugin&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="storage-type-selection-guide">Storage Type Selection Guide&lt;/h2>
&lt;ul>
&lt;li>The minimum size for an ECS cloud disk is 20 GB with 3,000 IOPS; this is quite large and not particularly cost-effective.
&lt;ul>
&lt;li>Dynamic cloud-disk volumes
&lt;ul>
&lt;li>Official docs:
&lt;ul>
&lt;li>Cloud disks cannot span availability zones; they are non-shared and can be mounted by only one Pod at a time (tests show multiple Pods in the same deployment can mount the same disk).&lt;/li>
&lt;li>Disk type must match the ECS type or mounting will fail. Refer to &lt;a href="https://help.aliyun.com/zh/ecs/user-guide/overview-of-instance-families#concept-sx4-lxv-tdb">Instance Families&lt;/a> for detailed compatibility.&lt;/li>
&lt;li>During deployment, a StorageClass auto-provisions the PV to purchase the cloud disk. If you have already purchased the disk, use a static volume instead.&lt;/li>
&lt;li>The requested disk size must lie within the range allowed for single disks.&lt;/li>
&lt;li>When the Pod is recreated, it will re-attach the original cloud disk. If scheduling constraints prevent relocation to the original AZ, the Pod will stay in the Pending state.&lt;/li>
&lt;li>Dynamically created disks are pay-as-you-go.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Extra test notes:
&lt;ul>
&lt;li>Although multiple Pods can mount a disk, only one can read and write; the rest are read-only. Therefore the PVC must set &lt;code>accessModes&lt;/code> to &lt;code>ReadWriteOnce&lt;/code>, and changing this has no effect.&lt;/li>
&lt;li>If the StorageClass &lt;code>reclaimPolicy&lt;/code> is &lt;code>Delete&lt;/code>, deleting the PVC also automatically deletes the cloud disk.&lt;/li>
&lt;li>If the StorageClass &lt;code>reclaimPolicy&lt;/code> is &lt;code>Retain&lt;/code>, the cloud disk is not deleted automatically; you must manually remove it both from the cluster and from the Alibaba Cloud console.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A suitable scenario is hard to find.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Static cloud-disk volumes
&lt;ul>
&lt;li>Official docs:
&lt;ul>
&lt;li>Manually create the PV and PVC.&lt;/li>
&lt;li>Cloud disks cannot span availability zones; they are non-shared and can be mounted by only one Pod at a time.&lt;/li>
&lt;li>Disk type must match the ECS type or mounting fails.&lt;/li>
&lt;li>You may select disks in the same region and AZ as the cluster that are in the “Available” state.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NAS exhibits comparatively high latency; the best-case latency is ~2 ms, deep storage ~10 ms, pay-as-you-go, and offers better read/write performance than OSS object storage.&lt;/li>
&lt;li>OSS volume: &lt;a href="https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/oss-volume-overview-1?spm=a2c4g.11186623.0.0.43166a351NbtvU">https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/oss-volume-overview-1?spm=a2c4g.11186623.0.0.43166a351NbtvU&lt;/a>
&lt;ul>
&lt;li>OSS is shared storage that can serve multiple Pods simultaneously.&lt;/li>
&lt;li>As of 2024-06-13 supports CentOS, Alibaba Cloud Linux, ContainerOS and Anolis OS.&lt;/li>
&lt;li>Each application uses an independent PV name when using the volume.&lt;/li>
&lt;li>OSS volumes rely on ossfs as a FUSE file system.
&lt;ul>
&lt;li>Good for read-only workloads—e.g., reading config, videos, images, etc.&lt;/li>
&lt;li>Not suitable for writing; consider the OSS SDK for writes or switch to NAS.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ossfs can be tuned (cache, permissions, etc.) via configuration parameters.&lt;/li>
&lt;li>ossfs limitations:
&lt;ul>
&lt;li>Random or append writes cause the entire file to be rewritten.&lt;/li>
&lt;li>Listing directories and other metadata operations are slow due to remote calls.&lt;/li>
&lt;li>File/folder rename is not atomic.&lt;/li>
&lt;li>When multiple clients mount the same bucket, users must coordinate behavior (e.g., avoid concurrent writes to the same file).&lt;/li>
&lt;li>No hard links.&lt;/li>
&lt;li>For CSI plugin versions below v1.20.7, only local changes are detected; external modifications by other clients or tools are ignored.&lt;/li>
&lt;li>Do not use in high-concurrent read/write scenarios to avoid system overload.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>In a hybrid cluster (with some nodes outside Alibaba Cloud) only NAS and OSS static volumes can be used.&lt;/li>
&lt;li>Cloud disks, NAS, and OSS have region restrictions.&lt;/li>
&lt;/ul>
&lt;p>In summary: Cloud disks are provisioned and mounted as whole disks, making sharing inconvenient. OSS operates at file granularity; high-concurrent read/write suffers performance issues and supported OSes are limited.&lt;/p></description></item><item><title>Volume Classification and Methodology</title><link>https://blog.jqknono.com/blog/2024/06/05/volume-classification-and-methodology/</link><pubDate>Wed, 05 Jun 2024 17:17:37 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/05/volume-classification-and-methodology/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volumes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">Persistent Volumes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/projected-volumes/">Projected Volumes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/">Ephemeral Volumes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/storage-classes/">Storage Classes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/">Dynamic Provisioning&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/volume-snapshots/">Volume Snapshots&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/">Volume Snapshot Classes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/">Volume Cloning&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title/><link>https://blog.jqknono.com/blog/1/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jqknono.com/blog/1/01/01/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">layout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">blog&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Image Hosting Design and Selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">linkTitle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Image Hosting Design and Selection&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">categories&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">uncategorized&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">uncategorized, cloud-services]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="ld">2024-06-28 15:46:17 +0800&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">draft&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">toc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">toc_hide&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">math&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">comments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">giscus_comments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">hide_summary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">hide_feedback&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> 
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">weight&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Image Hosting Design and Selection&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-image-hosting">What Is Image Hosting?&lt;/h2>
&lt;p>In short, image hosting is a remote server used to store and manage the image assets required by a blog or website.&lt;/p></description></item><item><title/><link>https://blog.jqknono.com/blog/1/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jqknono.com/blog/1/01/01/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">layout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">blog&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">How to preserve the original client IP after load-balancing in a K8s cluster&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">categories&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Networking&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">networking, blog]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="ld">2024-05-27 11:52:22 +0800&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">draft&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">toc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">comments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Introduction&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">**Application&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deployment** is not always as simple as **installation** and **run**—sometimes you also have to consider **networking** issues. This post introduces how to let a service running in a **Kubernetes cluster** retrieve a request’s **source (client) IP**.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">A service generally relies on some input information. If that input does not depend on the **5-tuple** (source IP, source port, destination IP, destination port, protocol), then the service has **low coupling with the network** and does not need to care about networking details.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">Therefore, most people don’t need to read this article. If you are interested in networking or want to broaden your horizons, please keep reading and learn about more service scenarios.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">This article is based on Kubernetes `v1.29.4`. Some statements mix “Pod” and “Endpoint”; in the scenario described here they can be treated as equivalent.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">**If&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">you spot any mistakes, let me know and I will promptly correct them.**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Why is source-IP information lost?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">Let’s first clarify what source IP means. When A sends a request to B and B forwards that request to C, even though C’s IP layer says the source IP is B, **this article considers A’s IP** to be the source IP.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">There are two main reasons the original source information is lost&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="l">. **Network Address Translation (NAT)**, whose goals are to conserve public IPv4 addresses and implement load balancing, etc. It will cause the server to see the **NAT device’s IP** instead of the true source IP.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="l">. **Proxy**, including **Reverse Proxy (RP)** and **Load Balancer (LB)**; the article below refers to them collectively as **proxy servers**. Such proxies forward requests to back-end services but replace the source IP with their own.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">NAT in short **trades port space for IP address space**; IPv4 addresses are limited. One IP address can map to 65,535 ports, and most of the time those ports are not exhausted, so multiple private subnet IPs can share a single public IP, distinguished on ports. The mapping form is&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">`public IP:public port → private IP_1:private port`—consult [Network Address Translation](https://www.google.com/search?q=network+address+translation) for more.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">A proxy is intended to **hide or expose**. It forwards a request to a back-end service and simultaneously replaces the source IP with its own, thereby concealing the back-end service’s real IP and protecting the back-end service’s security. The proxy usage pattern is&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">`client IP → proxy IP → server IP`—consult [proxy](https://www.google.com/search?q=proxy) for more.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">**NAT**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">and **proxy servers** are both very common, so most services never obtain the request’s source IP.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">_These are the two most common ways the source IP is altered; feel free to add others._&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## How to preserve the source IP?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Below is an example `HTTP request`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Field | Length (bytes) | Bit offset | Description |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| ----------------- | -------------- | ---------- | ---------------------------------------------------------- |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| **IP Header** | | | |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| `Source IP` | 4 | 0–31 | Sender’s IP address |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Destination IP | 4 | 32–63 | Receiver’s IP address |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| **TCP Header** | | | |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Source Port | 2 | 0–15 | Sender’s port |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Destination Port | 2 | 16–31 | Receiver’s port |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Sequence Number | 4 | 32–63 | Identifies the data the sender is sending in the stream |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| ACK Number | 4 | 64–95 | If ACK flag set, next expected sequence number |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Data Offset | 4 | 96–103 | Bytes from start of TCP header to start of data |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Reserved | 4 | 104–111 | Unused, always 0 |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Flags | 2 | 112–127 | Control flags like SYN, ACK, FIN, etc. |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Window Size | 2 | 128–143 | Amount of data receiver can accept |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Checksum | 2 | 144–159 | Error-detection code |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Urgent Pointer | 2 | 160–175 | Offset of urgent data (if URG flag set) |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Options | variable | 176–... | May contain timestamps, MSS, etc. |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| **HTTP Header** | | | |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Request Line | variable | ... | Request method, URI, HTTP version |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| `Header Fields` | variable | ... | Headers such as Host, User-Agent, etc. |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Blank Line | 2 | ... | Separates headers from body |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">| Body | variable | ... | Optional request/response body |&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">Looking at the HTTP request structure above, we see that **TCP Options**, **Request Line**, **Header Fields**, and **Body** are variable. &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="cp">**TCP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Options** have limited space and normally are **not** used to carry the source IP. &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="cp">**Request&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Line** has a fixed semantic and cannot be extended. &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="cp">**HTTP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Body** will be encrypted and therefore cannot be modified mid-path.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">Thus **HTTP header fields** are the only extensible place to carry the source IP.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">We can add an `X-REAL-IP` header at a proxy to convey the source IP. The **proxy server** is then supposed to forward the request to a back-end service so that the back-end can read the source IP from this header.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">Note that the proxy must sit **before** any NAT device so it can obtain the real client IP. We see Alibaba Cloud treats its [Load Balancer](https://slb.console.aliyun.com/overview) as a separate product that sits differently in the network from ordinary application servers.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## K8s hands-on instructions&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">We deploy the [whoami](https://github.com/traefik/whoami) project to show how.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">### Create a Deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">First create the service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">```yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">whoami-deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">whoami&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">whoami&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">whoami&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker.io/traefik/whoami:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This step creates a &lt;strong>Deployment&lt;/strong> containing 3 &lt;strong>Pods&lt;/strong>; each Pod has one container running the &lt;strong>whoami&lt;/strong> service.&lt;/p></description></item></channel></rss>