<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nono的博客 on Nono Blogs</title><link>https://blog.jqknono.com/</link><description>Recent content in nono的博客 on Nono Blogs</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 13 Nov 2024 11:35:36 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/index.xml" rel="self" type="application/rss+xml"/><item><title>DoT vs DoT vs DoQ</title><link>https://blog.jqknono.com/docs/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1/dns/dot-vs-dot-vs-doq/</link><pubDate>Wed, 13 Nov 2024 11:35:36 +0800</pubDate><guid>https://blog.jqknono.com/docs/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1/dns/dot-vs-dot-vs-doq/</guid><description>&lt;h2 id="dot">DoT&lt;/h2>
&lt;p>DNS over TLS（DoT）是一种基于 TLS 的 DNS 加密协议。TLS 1.2 至少需要四次往返，TLS 1.3 则至少需要三次往返，而 DNS 请求仅需一次往返。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">时间轴
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ┌───────────────────────────────────────────────────────────────────────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端 服务器
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端发送 SYN 段 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ────────────────────────────────────────────────────────────────────▶│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ SYN = 1, Seq = x │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ←─────────────────────────────────────────────────────────────────────│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 服务器响应 SYN-ACK 段 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ SYN = 1, ACK = 1, Seq = y, Ack = x + 1 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端发送 ACK 段 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ────────────────────────────────────────────────────────────────────▶│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ACK = 1, Seq = x + 1, Ack = y + 1 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ TCP 连接建立 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端发送 ClientHello │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ────────────────────────────────────────────────────────────────────▶│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ←─────────────────────────────────────────────────────────────────────│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 服务器响应 ServerHello │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 服务器发送证书链 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端发送密钥交换消息 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ────────────────────────────────────────────────────────────────────▶│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 服务器发送密钥交换消息 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ←─────────────────────────────────────────────────────────────────────│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端发送 Finished │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ────────────────────────────────────────────────────────────────────▶│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 服务器发送 Finished │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ←─────────────────────────────────────────────────────────────────────│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ TLS 握手完成 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 客户端发送 DNS 查询 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ────────────────────────────────────────────────────────────────────▶│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ ←─────────────────────────────────────────────────────────────────────│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ 服务器响应 DNS 查询 │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └───────────────────────────────────────────────────────────────────────┘
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>TLS 1.2 的握手过程需要至少两个往返（RTT），即客户端发送 ClientHello，服务器回复 ServerHello 和证书，然后客户端发送 ClientKeyExchange 和 ChangeCipherSpec，最后服务器发送 Finished。TLS 1.3 将握手过程简化为一个往返（1-RTT）。客户端在发送 ClientHello 时可以包含密钥共享信息（ClientKeyShare），服务器在回复 ServerHello 时也包含密钥共享信息，从而在第一个往返内完成密钥协商和握手。&lt;/p></description></item><item><title>最快的DNS</title><link>https://blog.jqknono.com/docs/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1/dns/%E6%9C%80%E5%BF%AB%E7%9A%84dns/</link><pubDate>Sun, 10 Nov 2024 19:12:42 +0800</pubDate><guid>https://blog.jqknono.com/docs/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1/dns/%E6%9C%80%E5%BF%AB%E7%9A%84dns/</guid><description>&lt;p>普通用户通常测量的是明文 DNS 的 IP 的 ping 相应速度，但这很难保证是否是真正到达对应服务器的速度。现代 DNS 至少需要使用加密 DNS 才能确保服务未被劫持。&lt;/p>
&lt;p>从客户端到终端通常会经过 5 到 8 个网络设备，在其中任意一个设备上都可以劫持 UDP:53 请求，这种劫持命令非常简单。因此，不要对明文 DNS 抱有任何侥幸的期待，特别是企业用户，基本上都会遭遇劫持。&lt;/p>
&lt;p>以下是劫持命令示例：
&lt;code>sudo iptables -t nat -A PREROUTING -p udp --dport 53 -j DNAT --to-destination 1.1.1.1:53&lt;/code>&lt;/p>
&lt;p>设置劫持非常简单，许多企业内网用户的 DNS 速度都在个位数毫秒范围内，而在家庭网络中通常小于 1 毫秒。无论配置什么明文 DNS，最终都是自建的 DNS 服务在响应。&lt;/p>
&lt;p>接下来讨论加密 DNS 的速度。在讨论之前，先介绍三种常见的加密 DNS 协议：DNS over TLS (DoT)、DNS over HTTP (DoH) 和 DNS over QUIC (DoQ)。&lt;/p>
&lt;p>理论上，三种加密协议和未加密 DNS 的简化实现方式:&lt;/p>
&lt;ul>
&lt;li>最快的是 DoQ。QUIC 基于 UDP，建立连接需要一次往返，DNS 请求只需一次往返。&lt;/li>
&lt;li>DoT 建立连接, tls1.2 需要至少四次往返, tls1.3 需要三次往返，略慢于 DoQ，DNS 请求一次往返。&lt;/li>
&lt;li>DoH 基于 HTTPS，建立连接需要至少四次往返, 由于 HTTP 协议较重, 导致服务会略慢于 DoT。&lt;/li>
&lt;li>传统的 UDP:53 不需要建立连接，只有一次往返。&lt;/li>
&lt;/ul>
&lt;p>也就是说，从零开始的 DNS 请求，加密 DNS 的耗时是未加密 DNS 的 2~4 倍左右，但在建立连接后，耗时与未加密 DNS 相同（未考虑连接强制关闭的情况）。&lt;/p></description></item><item><title>Windows Server 2019长时间运行ipv6断连问题</title><link>https://blog.jqknono.com/blog/2024/11/06/windows-server-2019%E9%95%BF%E6%97%B6%E9%97%B4%E8%BF%90%E8%A1%8Cipv6%E6%96%AD%E8%BF%9E%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 06 Nov 2024 10:56:27 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/11/06/windows-server-2019%E9%95%BF%E6%97%B6%E9%97%B4%E8%BF%90%E8%A1%8Cipv6%E6%96%AD%E8%BF%9E%E9%97%AE%E9%A2%98/</guid><description>&lt;p>我的Windows Server 2019不怎么关机, 在电信/红米路由下, ipv6每次更新时, 本地ipv6连接都会显示无Internet访问权限, 重启设备或者开闭IPv6功能可以解决, Linux下不会出现这样问题.&lt;/p>
&lt;p>&lt;img src="https://img1.techfetch.dev/blog/20241106115547.png">&lt;/p>
&lt;p>考虑自动化操作，用这两条命令解决:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="n">-ifAlias&lt;/span> &lt;span class="n">Ethernet&lt;/span> &lt;span class="n">-RouterDiscovery&lt;/span> &lt;span class="n">Disabled&lt;/span>&lt;span class="p">;&lt;/span> 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="n">-ifAlias&lt;/span> &lt;span class="n">Ethernet&lt;/span> &lt;span class="n">-RouterDiscovery&lt;/span> &lt;span class="n">Enabled&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>你可以看到命令只是让Windows更新了路由, 不知道为什么Windows没有自动更新路由.&lt;/p>
&lt;p>如果有人碰到相同问题可以参考, 如果有更好的解决办法, 也欢迎讨论.&lt;/p></description></item><item><title>snort</title><link>https://blog.jqknono.com/blog/2024/06/28/snort/</link><pubDate>Fri, 28 Jun 2024 19:03:59 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/snort/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> snort&lt;/li>
&lt;/ul>
&lt;h1 id="snort">Snort&lt;/h1>
&lt;p>&lt;a href="https://www.snort.org/">https://www.snort.org/&lt;/a>&lt;/p>
&lt;p>Protect your network with the world&amp;rsquo;s most powerful Open Source detection software.&lt;/p>
&lt;p>&lt;strong>What is Snort?&lt;/strong>
Snort is the foremost Open Source Intrusion Prevention System (IPS) in the world.
Snort IPS uses a series of rules that help define malicious network activity and
uses those rules to find packets that match against them and generates alerts for users.&lt;/p>
&lt;p>Snort can be deployed inline to stop these packets, as well.
Snort has three primary uses: As a packet sniffer like tcpdump, as a packet logger —
which is useful for network traffic debugging, or it can be used as a full-blown network intrusion prevention system.
Snort can be downloaded and configured for personal and business use alike.&lt;/p></description></item><item><title>linux导览</title><link>https://blog.jqknono.com/blog/2024/06/28/linux%E5%AF%BC%E8%A7%88/</link><pubDate>Fri, 28 Jun 2024 18:51:21 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/linux%E5%AF%BC%E8%A7%88/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> linux导览&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[&lt;a href="%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91" title="内核模块开发">内核模块开发&lt;/a>]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[&lt;a href="linux%E6%BA%90%E7%A0%81%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BC%A9%E5%86%99" title="linux源码中的一些缩写">linux源码中的一些缩写&lt;/a>]&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>第三方库的陷阱</title><link>https://blog.jqknono.com/blog/2024/06/28/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E9%99%B7%E9%98%B1/</link><pubDate>Fri, 28 Jun 2024 17:35:19 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E9%99%B7%E9%98%B1/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 第三方库的陷阱&lt;/li>
&lt;/ul>
&lt;p>今天聊到最近出的第三方日志库的一个漏洞, 可以很低门槛的利用以执行远程命令. 一个日志库和远程命令看着毫不相干, 但是画蛇添足的第三方库遍地都是.&lt;/p>
&lt;p>读的代码越多越感受到很多开源代码的水平非常差, 无论它有多少 k 的 star, star 代表了需求, 不代表开发水平.&lt;/p>
&lt;p>开源的好处是有更多的人来开发, 好处是特性迅速增加, bug 有人来解, 代码有人来审核, 但是水平参差不齐.&lt;/p>
&lt;p>如果没有一个强有力的提交约束, 代码的质量很难保证.&lt;/p>
&lt;p>代码越多增加的攻击面越多&lt;/p>
&lt;p>虽说重复造轮子不好, 但是产品需求就是婴儿车轮子, 一个塑料轮子怎么都用不坏, 装了个飞机轮胎, 徒增攻击面和维护成本. 因此如果只需要婴儿车的轮子, 不需要大材小用.&lt;/p>
&lt;p>维护成本高, 第三方库需要专门的流程和人员去维护. 华为一个魔改的测试框架, 直接导致升级编译器就用例失败, 升级测试框架和升级编译器产生冲突, 维护时要花大量时间继续魔改这条路. 作为参与者深刻体会到魔改三方库的困难. 如果魔改的是特性可以合回开源库还好说, 为了自己的需求去侵入式的定制开发, 会导致很难维护.&lt;/p>
&lt;p>对待第三方库华为创建了一系列流程, 可以说阻力重重.&lt;/p>
&lt;p>门槛收的极紧, 增加的第三方库需要 18 级专家和 20 级部长评审, 基本只有久负盛名的三方库能被使用.&lt;/p>
&lt;p>所有第三方库都放在 thirdparty 文件夹下, 全量编译时 CI 和源库对比, 严格禁止侵入式修改.&lt;/p>
&lt;p>专门的工具追踪所有第三方库的版本, 这部分请了外包人员来管理, 如果开发申请升级版本需要提申请, 部长审核.&lt;/p>
&lt;p>很难找部长去处理这样的事, 当一个流程非常繁琐的时候, 它实际上是在劝你不要这样做.&lt;/p>
&lt;p>对待第三方库应该保持不轻信的态度, 相信自己人的开发.&lt;/p></description></item><item><title>方案设计模板</title><link>https://blog.jqknono.com/blog/2024/06/28/%E6%96%B9%E6%A1%88%E8%AE%BE%E8%AE%A1%E6%A8%A1%E6%9D%BF/</link><pubDate>Fri, 28 Jun 2024 17:35:07 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E6%96%B9%E6%A1%88%E8%AE%BE%E8%AE%A1%E6%A8%A1%E6%9D%BF/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 方案设计模板&lt;/li>
&lt;/ul>
&lt;h1 id="xxx系统子系统详细设计">XXX系统/子系统详细设计&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>系统名称&lt;/th>
 &lt;th>XXX系统&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>作者&lt;/td>
 &lt;td>XXX&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&amp;mdash;&lt;/td>
 &lt;td>&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>提交日期&lt;/td>
 &lt;td>2021-6-30&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="修改记录">修改记录&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>修改后版本号&lt;/th>
 &lt;th>修改内容&lt;/th>
 &lt;th>修改日期&lt;/th>
 &lt;th>修改人&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>v1.0&lt;/td>
 &lt;td>XXXXXXX&lt;/td>
 &lt;td>2021-6-30&lt;/td>
 &lt;td>XXX&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&amp;mdash;&lt;/td>
 &lt;td>&amp;mdash;&lt;/td>
 &lt;td>&amp;mdash;&lt;/td>
 &lt;td>&amp;mdash;&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="技术评审意见">技术评审意见&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>No.&lt;/th>
 &lt;th>评审人&lt;/th>
 &lt;th>评审意见（通过/不通过/待定，可附上评论）&lt;/th>
 &lt;th>评审时间&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>XXX&lt;/td>
 &lt;td>通过&lt;/td>
 &lt;td>2022.1.1&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="设计背景">设计背景&lt;/h2>
&lt;h2 id="名词解释">名词解释&lt;/h2>
&lt;!-- 对文档中出现新的或不常见的名词、概念或简略语给出定义和解释。 -->
&lt;ul>
&lt;li>SIP: 会话初始协议 (Session Initiation Protocol)&lt;/li>
&lt;li>RTP: 实时传输协议（Real-time Transpo&lt;em>rt P&lt;/em>rotocol）&lt;/li>
&lt;/ul>
&lt;h2 id="设计目标">设计目标&lt;/h2>
&lt;h3 id="功能需求">功能需求&lt;/h3>
&lt;!-- 概要描述系统本身的功能性需求，不需描述外部的其他系统。如果项目已有MRD/PRD，可在此分层次分条目列出功能点及子功能点。如果没有MRD/PRD，需在此列出要实现的功能点及子功能点。 -->
&lt;h3 id="非功能需求不可省略">非功能需求（不可省略）&lt;/h3>
&lt;!-- 在此描述系统本身的非功能需求（包括性能需求）。建议分条列出量化的性能指标，比如响应时间、超时率、资源占用、运行周期等。不能模糊、有岐义、想当然。 -->
&lt;h2 id="系统环境">系统环境&lt;/h2>
&lt;h3 id="相关软件及硬件可选">相关软件及硬件（可选）&lt;/h3>
&lt;!--在这里加入系统所需的软, 硬件, 包括操作系统, 机器型号及配置要求。建议采用表格形式列出，最好还能规划出服务器和软件构件的部署图。该部分也可以单独编写部署设计文档，并在此引用。-->
&lt;h3 id="系统限制">系统限制&lt;/h3>
&lt;!--在这里加入系统的已知, 或可预知的限制。-->
&lt;h3 id="数据规模估计不可省略">数据规模估计（不可省略）&lt;/h3>
&lt;!--通过调研或经验，对数据规模进行估计，包括用户量、数据量、带宽消耗及增长速度等方面。分类分条列出。-->
&lt;h2 id="遍历已有">遍历已有&lt;/h2>
&lt;!--列举针对这个设计目标有哪些已知的解决方案，特别是**要遍历青藤内部已有方案**，如果已有方案不满足要求，要想办法在它之上做加法。直接分叉是最差的选择，除非需求完全不同。-->
&lt;h2 id="设计思路及折衷">设计思路及折衷&lt;/h2>
&lt;!--描述系统设计中需要解决或考虑的关键问题或难点问题，解决这些问题可能有不同方案, 在这里加入方案设计的选择, 折衷及解释，并在后面的系统设计中对选中的方案给出进一步阐述。建议分类列出，比如性能、可扩展性、安全性、服务稳定性、反作弊、复用等方面。建议使用调研数据支持设计方案的选择。-->
&lt;h3 id="假设及与其它系统的依赖联系">假设及与其它系统的依赖/联系&lt;/h3>
&lt;!-- 在这里加入系统成功的前提条件及与外界其它系统/模块的联系。采用文字分条列出或采用系统结构图描述均可。 -->
&lt;h2 id="系统设计">系统设计&lt;/h2>
&lt;h3 id="基本介绍">基本介绍&lt;/h3>
&lt;!--对系统整体的简要说明。-->
&lt;h3 id="系统架构图及说明">系统架构图及说明&lt;/h3>
&lt;!--把系统分解为若干子系统或模块，给出系统架构图，同时简单阐述每个模块完成的主要功能（必要时，给出模块划分的解释，即说明为什么把某些功能设计在某个模块中）。如果各个模块设计运行于不同环境（如操作系统、服务器）下，请在相关软件及硬件（可选）章节输出物理架构图。-->
&lt;h3 id="系统流程图及说明可选">系统流程图及说明（可选）&lt;/h3>
&lt;!--通过流程图说明系统之间的模块是怎么交互来实现系统功能的。-->
&lt;h3 id="与外部系统的接口">与外部系统的接口&lt;/h3>
&lt;!--在这里对该系统与外部系统的接口进行详细定义，若接口较多且复杂，可编写单独的接口设计文档，并在此引用。若外部系统已定义并提供接口文档，在此引用即可。这里的接口包括结构体、函数调用、接口文件、数据库、URL参数和lib库等。若需要使用外部提供的lib库，需要在设计阶段协调好将使用的版本，并在此进行说明。-->
&lt;h3 id="全局性数据结构说明">全局性数据结构说明&lt;/h3>
&lt;!--对各模块公用的全局性的数据结构进行说明（包括数据库Schema）。若该部分在接口设计中体现，则直接引用接口文档。-->
&lt;h3 id="xxx1模块简要说明">XXX1模块简要说明&lt;/h3>
&lt;h4 id="xxx1模块的功能">XXX1模块的功能&lt;/h4>
&lt;!--描述该模块要实现的功能，可以先简要描述，再分条列出。对于模块相关的关键功能和关键技术，也在此说明，供详细设计人员参考。-->
&lt;h4 id="与其它模块的接口">与其它模块的接口&lt;/h4>
&lt;!--在此描述该模块与系统内其它模块的接口，不包括模块内部的接口。模块内部的接口在详细设计中进行说明。如果接口复杂或描述篇幅较多，可编写单独的接口设计文档，并在此引用。也可以增加二级标题"各模块之间的接口"，对模块之间的接口进行系统、全面的定义。-->
&lt;h3 id="xxx2模块简要说明">XXX2模块简要说明&lt;/h3>
&lt;h4 id="xxx2模块的功能">XXX2模块的功能&lt;/h4>
&lt;h4 id="与其它模块的接口-1">与其它模块的接口&lt;/h4>
&lt;h2 id="威胁建模">威胁建模&lt;/h2>
&lt;!-- 通过结构化的方法，系统的识别、评估产品的安全风险和威胁，并针对这些风险、威胁制定消减措施 -->
&lt;h2 id="升级影响不可省略">升级影响（不可省略）&lt;/h2>
&lt;!-- 该方案如果需要在系统原有版本基础上进行升级，是否有 breaking change？升级是否可平滑进行？升级可能带来的影响是什么？如何规避？ -->
&lt;h2 id="风险评估及对其它系统影响可选">风险评估及对其它系统影响（可选）&lt;/h2>
&lt;h3 id="已知的或可预知的风险">已知的或可预知的风险&lt;/h3>
&lt;!--在这里加上已经知道的或可能会发生的风险，包括技术、业务等方面。最好针对每个风险，列出相应的应对措施。-->
&lt;h3 id="与其它系统模块可能的影响">与其它系统/模块可能的影响&lt;/h3>
&lt;!--在"假设及与其它系统联系"中描述了该系统与其它系统的依赖关系。在这里描述这些依赖关系可能带来的影响。包括本系统对其它系统可能造成的影响以及其它系统可能给本系统造成的影响两个方面。挖掘可能存在的创新点，申请专利。-->
&lt;h2 id="创新点挖掘可选">创新点挖掘（可选）&lt;/h2>
&lt;!--挖掘可能存在的创新点，申请专利。-->
&lt;h2 id="附件及参考资料">附件及参考资料&lt;/h2>
&lt;!--填写文档相关的附件或参考资料。若是不常变更的文档（比如调研报告），建议以对象方式插入到该文档中。如是经常变更的文档（比如接口文档），建议在此列出文件名即可。--></description></item><item><title>命令行语法约定</title><link>https://blog.jqknono.com/blog/2024/06/28/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%AD%E6%B3%95%E7%BA%A6%E5%AE%9A/</link><pubDate>Fri, 28 Jun 2024 17:32:54 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%AD%E6%B3%95%E7%BA%A6%E5%AE%9A/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 命令行语法约定&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.ibm.com/docs/en/iotdm/11.3?topic=interface-command-line-syntax">https://www.ibm.com/docs/en/iotdm/11.3?topic=interface-command-line-syntax&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/command-line-syntax-key">https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/command-line-syntax-key&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developers.google.com/style/code-syntax">https://developers.google.com/style/code-syntax&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_01">https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_01&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ftpdocs.broadcom.com/cadocs/0/CA%20ARCserve%20%20Backup%20r16-CHS/Bookshelf_Files/HTML/cmndline/cl_cmd_line_syntax_char.htm">https://ftpdocs.broadcom.com/cadocs/0/CA%20ARCserve%20%20Backup%20r16-CHS/Bookshelf_Files/HTML/cmndline/cl_cmd_line_syntax_char.htm&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>e.g.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Notation&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Text without brackets or braces&lt;/td>
 &lt;td>Items you must type as shown.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>&amp;lt;&lt;/code>Text inside angle brackets&lt;code>&amp;gt;&lt;/code>&lt;/td>
 &lt;td>Placeholder for which you must supply a value.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>[&lt;/code>Text inside square brackets&lt;code>]&lt;/code>&lt;/td>
 &lt;td>Optional items.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>{&lt;/code>Text inside braces&lt;code>}&lt;/code>&lt;/td>
 &lt;td>Set of required items. You must choose one.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Vertical bar ( &lt;code>|&lt;/code> )&lt;/td>
 &lt;td>Separator for mutually exclusive items. You must choose one.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Ellipsis (&lt;code>…&lt;/code>)&lt;/td>
 &lt;td>Items that can be repeated and used multiple times.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>命令行手册中括号的含义</title><link>https://blog.jqknono.com/blog/2024/06/28/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%8B%E5%86%8C%E4%B8%AD%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%90%AB%E4%B9%89/</link><pubDate>Fri, 28 Jun 2024 17:31:00 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%8B%E5%86%8C%E4%B8%AD%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%90%AB%E4%B9%89/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 命令行手册中括号的含义&lt;/li>
&lt;/ul>
&lt;h1 id="命令行手册中括号的含义">命令行手册中括号的含义&lt;/h1>
&lt;p>在命令行帮助中，不同种类的括号通常有以下含义：&lt;/p>
&lt;ol>
&lt;li>尖括号 &lt;code>&amp;lt;&amp;gt;&lt;/code>：
&lt;ul>
&lt;li>尖括号用于表示必需参数，即在运行命令时必须提供的值。通常用于表示命令的基本语法和参数。&lt;/li>
&lt;li>例如：&lt;code>command &amp;lt;filename&amp;gt;&lt;/code> 表示你需要提供一个文件名作为必需参数，如 &lt;code>command file.txt&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>方括号 &lt;code>[]&lt;/code>：
&lt;ul>
&lt;li>方括号用于表示可选参数，即在运行命令时可以选择是否提供的值。它们通常用于标记命令的可选参数和选项。&lt;/li>
&lt;li>例如：&lt;code>command [option]&lt;/code> 表示你可以选择性地提供一个选项，如 &lt;code>command -v&lt;/code> 或 &lt;code>command&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大括号 &lt;code>{}&lt;/code>：
&lt;ul>
&lt;li>大括号通常用于表示一组选项或值，表示你需要从中选择一个。它们也被称为&amp;quot;选择性参数组&amp;quot;。&lt;/li>
&lt;li>例如：&lt;code>command {option1 | option2 | option3}&lt;/code> 表示你必须从给定的选项中选择一个，如 &lt;code>command option2&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>圆括号 &lt;code>()&lt;/code>：
&lt;ul>
&lt;li>圆括号在命令行帮助中通常用于表示参数的分组，以明确参数的结构和优先级。&lt;/li>
&lt;li>例如：&lt;code>command (option1 | option2) filename&lt;/code> 表示你需要选择 &lt;code>option1&lt;/code> 或 &lt;code>option2&lt;/code>，并提供一个文件名作为参数，如 &lt;code>command option1 file.txt&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这些括号的使用旨在帮助用户理解命令的语法和参数选择，从而正确地使用命令行工具。在阅读命令行帮助时，仔细注意括号的含义和作用是很重要的，这样可以避免错误的命令输入并获得所需的结果。&lt;/p></description></item><item><title>华为C++编程规范</title><link>https://blog.jqknono.com/blog/2024/06/28/%E5%8D%8E%E4%B8%BAc-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link><pubDate>Fri, 28 Jun 2024 17:30:10 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E5%8D%8E%E4%B8%BAc-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 华为C++编程规范&lt;/li>
&lt;/ul>
&lt;h1 id="c语言编程规范">C++语言编程规范&lt;/h1>
&lt;h2 id="a-namec0-1a目的">&lt;a name="c0-1">&lt;/a>目的&lt;/h2>
&lt;p>规则并不是完美的，通过禁止在特定情况下有用的特性，可能会对代码实现造成影响。但是我们制定规则的目的“为了大多数程序员可以得到更多的好处”， 如果在团队运作中认为某个规则无法遵循，希望可以共同改进该规则。
参考该规范之前，希望您具有相应的C++语言基础能力，而不是通过该文档来学习C++语言。&lt;/p>
&lt;ol>
&lt;li>了解C++语言的ISO标准；&lt;/li>
&lt;li>熟知C++语言的基本语言特性，包括C++ 03/11/14/17相关特性；&lt;/li>
&lt;li>了解C++语言的标准库；&lt;/li>
&lt;/ol>
&lt;h2 id="a-namec0-2a总体原则">&lt;a name="c0-2">&lt;/a>总体原则&lt;/h2>
&lt;p>代码需要在保证功能正确的前提下，满足&lt;strong>可读、可维护、安全、可靠、可测试、高效、可移植&lt;/strong>的特征要求。&lt;/p>
&lt;h2 id="a-namec0-2a-重点关注">&lt;a name="c0-2">&lt;/a> 重点关注&lt;/h2>
&lt;ol>
&lt;li>约定C++语言的编程风格，比如命名，排版等。&lt;/li>
&lt;li>C++语言的模块化设计，如何设计头文件，类，接口和函数。&lt;/li>
&lt;li>C++语言相关特性的优秀实践，比如常量，类型转换，资源管理，模板等。&lt;/li>
&lt;li>现代C++语言的优秀实践，包括C++11/14/17中可以提高代码可维护性，提高代码可靠性的相关约定。&lt;/li>
&lt;li>本规范优先适于用C++17版本。&lt;/li>
&lt;/ol>
&lt;h2 id="a-namec0-3a-约定">&lt;a name="c0-3">&lt;/a> 约定&lt;/h2>
&lt;p>&lt;strong>规则&lt;/strong>：编程时必须遵守的约定(must)&lt;/p>
&lt;p>&lt;strong>建议&lt;/strong>：编程时应该遵守的约定(should)&lt;/p>
&lt;p>本规范适用通用C++标准, 如果没有特定的标准版本，适用所有的版本(C++03/11/14/17)。&lt;/p>
&lt;h2 id="a-namec0-4a-例外">&lt;a name="c0-4">&lt;/a> 例外&lt;/h2>
&lt;p>无论是&amp;rsquo;规则&amp;rsquo;还是&amp;rsquo;建议&amp;rsquo;，都必须理解该条目这么规定的原因，并努力遵守。
但是，有些规则和建议可能会有例外。&lt;/p>
&lt;p>在不违背总体原则，经过充分考虑，有充足的理由的前提下，可以适当违背规范中约定。
例外破坏了代码的一致性，请尽量避免。&amp;lsquo;规则&amp;rsquo;的例外应该是极少的。&lt;/p>
&lt;p>下列情况，应风格一致性原则优先：
&lt;strong>修改外部开源代码、第三方代码时，应该遵守开源代码、第三方代码已有规范，保持风格统一。&lt;/strong>&lt;/p>
&lt;h1 id="a-namec2a2-命名">&lt;a name="c2">&lt;/a>2 命名&lt;/h1>
&lt;h2 id="a-namec2-1a通用命名">&lt;a name="c2-1">&lt;/a>通用命名&lt;/h2>
&lt;p>&lt;strong>驼峰风格(CamelCase)&lt;/strong>
大小写字母混用，单词连在一起，不同单词间通过单词首字母大写来分开。
按连接后的首字母是否大写，又分: 大驼峰(UpperCamelCase)和小驼峰(lowerCamelCase)&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>类型&lt;/th>
 &lt;th>命名风格&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>类类型，结构体类型，枚举类型，联合体类型等类型定义， 作用域名称&lt;/td>
 &lt;td>大驼峰&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>函数(包括全局函数，作用域函数，成员函数)&lt;/td>
 &lt;td>大驼峰&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>全局变量(包括全局和命名空间域下的变量，类静态变量)，局部变量，函数参数，类、结构体和联合体中的成员变量&lt;/td>
 &lt;td>小驼峰&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>宏，常量(const)，枚举值，goto 标签&lt;/td>
 &lt;td>全大写，下划线分割&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>注意：
上表中__常量__是指全局作用域、namespace域、类的静态成员域下，以 const或constexpr 修饰的基本数据类型、枚举、字符串类型的变量，不包括数组和其他类型变量。
上表中__变量__是指除常量定义以外的其他变量，均使用小驼峰风格。&lt;/p>
&lt;h2 id="a-namec2-2a-文件命名">&lt;a name="c2-2">&lt;/a> 文件命名&lt;/h2>
&lt;h3 id="a-namer2-2-1a规则221-c文件以cpp结尾头文件以h结尾">&lt;a name="r2-2-1">&lt;/a>规则2.2.1 C++文件以.cpp结尾，头文件以.h结尾&lt;/h3>
&lt;p>我们推荐使用.h作为头文件的后缀，这样头文件可以直接兼容C和C++。
我们推荐使用.cpp作为实现文件的后缀，这样可以直接区分C++代码，而不是C代码。&lt;/p>
&lt;p>目前业界还有一些其他的后缀的表示方法：&lt;/p>
&lt;ul>
&lt;li>头文件： .hh, .hpp, .hxx&lt;/li>
&lt;li>cpp文件：.cc, .cxx, .c&lt;/li>
&lt;/ul>
&lt;p>如果当前项目组使用了某种特定的后缀，那么可以继续使用，但是请保持风格统一。
但是对于本文档，我们默认使用.h和.cpp作为后缀。&lt;/p></description></item><item><title>电信IPv6的一些特征</title><link>https://blog.jqknono.com/blog/2024/06/28/%E7%94%B5%E4%BF%A1ipv6%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E5%BE%81/</link><pubDate>Fri, 28 Jun 2024 17:21:06 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E7%94%B5%E4%BF%A1ipv6%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E5%BE%81/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> 电信IPv6的一些特征&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> 电信 IPv6 的一些特征&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>国内已经全面铺开 ipv6 使用, ipv6 地址池足够大, 个人的每个设备都可以获取到一个 ipv6 地址.&lt;br>
家庭用户使用时需要全栈设备都支持 ipv6 才能最终使用到 ipv6, 由于已经推了很多年, 目前来说 2016 年以后买的设备基本都支持 ipv6 了.&lt;/p>
&lt;p>全栈设备包括: 城域设备-&amp;gt;小区路由-&amp;gt;家庭路由(光猫,路由器)-&amp;gt;终端设备(手机,电脑,电视等)&lt;/p>
&lt;p>这里不讨论标准的 ipv6 协议, 只讨论电信的 ipv6 的一些特征.&lt;/p>
&lt;h2 id="地址分配">地址分配&lt;/h2>
&lt;p>首先是地址分配方式, ipv6 有三种分配方式: 静态分配, SLAAC, DHCPv6.&lt;br>
湖北电信使用的是 SLAAC, 也就是说电信的 ipv6 地址是由设备自动分配的, 由于电信的 ipv6 地址池足够大, 所以不会出现地址冲突的问题.&lt;/p>
&lt;p>电信 ipv6 地址是随机分配的, 24 小时后重新分配. 如果要从外部访问, 必须使用 DDNS 服务.&lt;/p>
&lt;h2 id="防火墙">防火墙&lt;/h2>
&lt;p>目前可以发现常见的&lt;code>80&lt;/code>, &lt;code>139&lt;/code>, &lt;code>445&lt;/code>等端口已对齐 ipv4 防火前已经都封了, 这非常容易理解, 运营商级的防火墙确实能保护到缺乏网络安全意识的普通用户. 2020 年时电信 ipv6 都是开放的, 现在已经封了一些常用端口.&lt;/p></description></item><item><title>为什么不应该把TCP思维套在UDP上</title><link>https://blog.jqknono.com/blog/2024/06/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BA%94%E8%AF%A5%E6%8A%8Atcp%E6%80%9D%E7%BB%B4%E5%A5%97%E5%9C%A8udp%E4%B8%8A/</link><pubDate>Fri, 28 Jun 2024 17:20:09 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BA%94%E8%AF%A5%E6%8A%8Atcp%E6%80%9D%E7%BB%B4%E5%A5%97%E5%9C%A8udp%E4%B8%8A/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 为什么不应该把TCP思维套在UDP上&lt;/li>
&lt;/ul>
&lt;h1 id="为什么不应该把-tcp-思维套在-udp-上">为什么不应该把 TCP 思维套在 UDP 上?&lt;/h1>
&lt;h2 id="结构差异">结构差异&lt;/h2>
&lt;p>&lt;img alt="TCP表头" src="https://s2.loli.net/2023/06/30/ndPGpzMRX1L4Q6D.png">&lt;br>
&lt;img alt="UDP表头" src="https://s2.loli.net/2023/06/30/ofdBYKb6iqaICA9.png">&lt;/p>
&lt;p>TCP 上的概念很多: 建立通路, 资源使用, 数据传输, 可靠传输, 基于重复累计确认的重传, 超时重传, 校验和, 流量控制, 拥塞控制, 最大分段大小, 选择确认, TCP 窗口缩放选项, TCP 时间戳, 强制数据递交, 终结通路.&lt;/p>
&lt;p>以上这些能力, UDP 基本上都没有, 它仅比链路层多一点区分应用层目的的能力. UDP 足够简单意味着足够灵活.&lt;/p>
&lt;h2 id="如果可能发生则一定会发生">如果可能发生,则一定会发生&lt;/h2>
&lt;p>墨菲定律:&lt;/p>
&lt;blockquote>
&lt;p>如果有多过一种方式去做某事，而其中一种方式将导致灾难，则必定有人会这样选择。&lt;/p>
&lt;/blockquote>
&lt;p>通常介绍 UDP 适合应用在游戏/语音/视频等场景, 少量的错包不影响业务.
为什么 UDP 适合这些场景? 它能用在这些场景, 不代表它是这些场景的最优方案, 必然是存在 TCP 无法解决的问题, 才让这些服务选择了功能简陋的 UDP 协议. 错包不影响业务扩展开来讲是指 TCP 协议在乎错包, UDP 不在乎错包, 更在乎实时性/连续性. UDP 的特点就是它不在乎 TCP 在乎的因素, 这些因素影响了实时性.&lt;/p>
&lt;p>在代码实现上, UDP 只需要创建一个 socket, 绑定到一个端口上, 即可以开始收发. 通常 socket 用完时, 端口也用完了.&lt;/p></description></item><item><title>openvpn网络不通</title><link>https://blog.jqknono.com/blog/2024/06/28/openvpn%E7%BD%91%E7%BB%9C%E4%B8%8D%E9%80%9A/</link><pubDate>Fri, 28 Jun 2024 17:18:48 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/openvpn%E7%BD%91%E7%BB%9C%E4%B8%8D%E9%80%9A/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> openvpn配置&lt;/li>
&lt;/ul>
&lt;h1 id="openvpn配置">openvpn配置&lt;/h1>
&lt;h2 id="工具脚本">工具脚本&lt;/h2>
&lt;p>&lt;a href="https://github.com/angristan/openvpn-install">openvpn-install&lt;/a>&lt;/p>
&lt;h2 id="windows防火墙配置">Windows防火墙配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">New-NetFirewallRule&lt;/span> &lt;span class="n">-DisplayName&lt;/span> &lt;span class="s2">&amp;#34;@openvpn&amp;#34;&lt;/span> &lt;span class="n">-Direction&lt;/span> &lt;span class="n">Inbound&lt;/span> &lt;span class="n">-RemoteAddress&lt;/span> &lt;span class="mf">10.8&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">24&lt;/span> &lt;span class="n">-Action&lt;/span> &lt;span class="n">Allow&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">New-NetFirewallRule&lt;/span> &lt;span class="n">-DisplayName&lt;/span> &lt;span class="s2">&amp;#34;@openvpn&amp;#34;&lt;/span> &lt;span class="n">-Direction&lt;/span> &lt;span class="n">Outbound&lt;/span> &lt;span class="n">-RemoteAddress&lt;/span> &lt;span class="mf">10.8&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">24&lt;/span> &lt;span class="n">-Action&lt;/span> &lt;span class="n">Allow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>理解Windows网络_WFP</title><link>https://blog.jqknono.com/blog/2024/06/28/%E7%90%86%E8%A7%A3windows%E7%BD%91%E7%BB%9C_wfp/</link><pubDate>Fri, 28 Jun 2024 17:16:15 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E7%90%86%E8%A7%A3windows%E7%BD%91%E7%BB%9C_wfp/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 理解Windows网络_WFP&lt;/li>
&lt;/ul>
&lt;h1 id="理解-windows-网络">理解 Windows 网络&lt;/h1>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 理解 Windows 网络&lt;/li>
&lt;/ul>
&lt;h2 id="wfp">WFP&lt;/h2>
&lt;h3 id="名词解释">名词解释&lt;/h3>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/fwp/object-model">https://learn.microsoft.com/en-us/windows/win32/fwp/object-model&lt;/a>
&lt;a href="https://learn.microsoft.com/en-us/windows/win32/fwp/basic-operation">https://learn.microsoft.com/en-us/windows/win32/fwp/basic-operation&lt;/a>
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network">https://learn.microsoft.com/en-us/windows-hardware/drivers/network&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network/callout">callout&lt;/a>: A callout provides functionality that extends the capabilities of the Windows Filtering Platform. A callout consists of a set of callout functions and a GUID key that uniquely identifies the callout.
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network/callout-driver">callout driver&lt;/a>: A callout driver is a driver that registers callouts with the Windows Filtering Platform. A callout driver is a type of filter driver.
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network/callout-function">callout function&lt;/a>: A callout function is a function that is called by the Windows Filtering Platform to perform a specific task. A callout function is associated with a callout.
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network/filter">filter&lt;/a>: A filter is a set of functions that are called by the Windows Filtering Platform to perform filtering operations. A filter consists of a set of filter functions and a GUID key that uniquely identifies the filter.
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network/filter-engine">filter engine&lt;/a>: The filter engine is the component of the Windows Filtering Platform that performs filtering operations. The filter engine is responsible for calling the filter functions that are registered with the Windows Filtering Platform.
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/network/filter-layer">filter layer&lt;/a>: A filter layer is a set of functions that are called by the Windows Filtering Platform to perform filtering operations. A filter layer consists of a set of filter layer functions and a GUID key that uniquely identifies the filter layer.&lt;/p></description></item><item><title>理解Windows事件跟踪_ETW</title><link>https://blog.jqknono.com/blog/2024/06/28/%E7%90%86%E8%A7%A3windows%E4%BA%8B%E4%BB%B6%E8%B7%9F%E8%B8%AA_etw/</link><pubDate>Fri, 28 Jun 2024 17:12:21 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E7%90%86%E8%A7%A3windows%E4%BA%8B%E4%BB%B6%E8%B7%9F%E8%B8%AA_etw/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 理解Windows事件跟踪_ETW&lt;/li>
&lt;/ul>
&lt;h1 id="理解-etw">理解 ETW&lt;/h1>
&lt;p>筛除了一些不必要的信息, 完整文档参阅: &lt;a href="https://docs.microsoft.com/en-us/windows/win32/etw/event-tracing-portal">https://docs.microsoft.com/en-us/windows/win32/etw/event-tracing-portal&lt;/a>&lt;/p>
&lt;h2 id="理解基础">理解基础&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/about-event-tracing">https://learn.microsoft.com/en-us/windows/win32/etw/about-event-tracing&lt;/a>&lt;/p>
&lt;p>&lt;img alt="架构" src="https://learn.microsoft.com/en-us/windows/win32/etw/images/etdiag2.png">&lt;/p>
&lt;h2 id="session">Session&lt;/h2>
&lt;p>存在四种 session&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>session 种类&lt;/th>
 &lt;th>使用&lt;/th>
 &lt;th>限制&lt;/th>
 &lt;th>特点&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/configuring-and-starting-an-event-tracing-session">Event Tracing Session&lt;/a>(Standard ETW)&lt;/td>
 &lt;td>1. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_properties">EVENT_TRACE_PROPERTIES&lt;/a>2. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-starttracea">StartTrace&lt;/a>, 创建 session3. EnableTrace 1. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enabletrace">EnableTrace&lt;/a> for classic provider 2. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enabletraceex">EnableTraceEx&lt;/a> for manifest-based provider4. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-controltracea">ControlTrace&lt;/a>  停止 session&lt;/td>
 &lt;td>- 一个 manifest-based provider 仅支持提供事件到至多 8 个 session- 一个 classic provider, 仅能服务一个 session.- session 抢占 provider 行为是后来居上.&lt;/td>
 &lt;td>标准 ETW.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/configuring-and-starting-a-systemtraceprovider-session">SystemTraceProvider Session&lt;/a>&lt;/td>
 &lt;td>1. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_properties">EVENT_TRACE_PROPERTIES&lt;/a>-&amp;gt;&lt;strong>EnableFlags&lt;/strong>2. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-starttracea">StartTrace&lt;/a>3. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-controltracea">ControlTrace&lt;/a>  停止 session&lt;/td>
 &lt;td>- **SystemTraceProvider **是一个内核事件 provider, 提供一套&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/nt-kernel-logger-constants">预定义的内核事件&lt;/a>.- &lt;strong>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/configuring-and-starting-the-nt-kernel-logger-session">NT Kernel Logger session&lt;/a>&lt;strong>是系统预置 session, 记录一系列系统预定义的内核事件- &lt;strong>Win7/WinServer2008R2&lt;/strong>仅 NT Kernel Logger session 可使用 SystemTraceProvider - &lt;strong>Win8/WinServer2012&lt;/strong>的 SystemTraceProvider 可以提供事件给&lt;/strong>8 个 logger session&lt;/strong>, 其中两个固定为 NT Kernel Logger 和 Circular Kernel Context Logger.- &lt;strong>Win10 20348&lt;/strong>之后, 各 Systerm provider 可以被单独控制.&lt;/td>
 &lt;td>获取系统内核预定义事件.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/configuring-and-starting-an-autologger-session">AutoLogger session&lt;/a>&lt;/td>
 &lt;td>1. 修改注册表 2. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enabletraceex">EnableTraceEx&lt;/a>3. &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-controltracea">ControlTrace&lt;/a>  停止 session&lt;/td>
 &lt;td>- **&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/configuring-and-starting-the-global-logger-session">Global Logger Session&lt;/a>**是特殊独立的 session, 记录系统启动时事件.- 普通 AutoLogger 需要自行使能 provider, GlobleLogger 不需要.- AutoLogger 不支持 NT Kernel Logger 事件, 仅 GlobalLogger 支持.- 影响启动时间, 节制使用&lt;/td>
 &lt;td>记录操作系统启动期间事件&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/etw/configuring-and-starting-a-private-logger-session">Private Logger Session&lt;/a>&lt;/td>
 &lt;td>-&lt;/td>
 &lt;td>- User-mode ETW- 仅进程内使用- 不计入 64 session 并行限制.&lt;/td>
 &lt;td>进程私有&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="工具">工具&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/logman">logman&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil">wevtutil&lt;/a>
&lt;ul>
&lt;li>xpath 查询实例: &lt;code>wevtutil qe Security /c:2 /q:&amp;quot;*[System[EventID=5157]]&amp;quot; /f:text&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-cn/windows-hardware/drivers/devtest/tracelog">tracelog&lt;/a>
&lt;ul>
&lt;li>使用 viusal studio 的&lt;code>tracelog&lt;/code>工具, 可以在运行时动态的添加和删除 ETW Provider, 以及动态的添加和删除 ETW Session&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/wes/message-compiler--mc-exe-">mc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/repnz/etw-providers-docs">etw-providers-docs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>wireguard配置</title><link>https://blog.jqknono.com/blog/2024/06/28/wireguard%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 28 Jun 2024 17:11:32 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/wireguard%E9%85%8D%E7%BD%AE/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> wireguard配置&lt;/li>
&lt;/ul>
&lt;h1 id="wireguard-配置">wireguard 配置&lt;/h1>
&lt;h2 id="防火墙配置">防火墙配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wireguard&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">installtunnelservice&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">wg_conf_path&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wg&lt;/span> &lt;span class="n">show&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetConnectionProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetFirewallProfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetFirewallProfile&lt;/span> &lt;span class="n">-Profile&lt;/span> &lt;span class="n">domain&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">public&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">-DisabledInterfaceAliases&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">wg_config_name&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-ifindex&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">interface&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">-Forwarding&lt;/span> &lt;span class="n">Enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">New-NetFirewallRule&lt;/span> &lt;span class="n">-DisplayName&lt;/span> &lt;span class="s2">&amp;#34;@wg1&amp;#34;&lt;/span> &lt;span class="n">-Direction&lt;/span> &lt;span class="n">Inbound&lt;/span> &lt;span class="n">-RemoteAddress&lt;/span> &lt;span class="mf">10.66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">24&lt;/span> &lt;span class="n">-Action&lt;/span> &lt;span class="n">Allow&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">New-NetFirewallRule&lt;/span> &lt;span class="n">-DisplayName&lt;/span> &lt;span class="s2">&amp;#34;@wg1&amp;#34;&lt;/span> &lt;span class="n">-Direction&lt;/span> &lt;span class="n">Outbound&lt;/span> &lt;span class="n">-RemoteAddress&lt;/span> &lt;span class="mf">10.66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">24&lt;/span> &lt;span class="n">-Action&lt;/span> &lt;span class="n">Allow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 定位拦截原因&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">auditpol&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nb">set &lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">subcategory&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="s2">&amp;#34;{0CCE9225-69AE-11D9-BED3-505054503030}&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">disable&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">failure&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">enable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wevtutil&lt;/span> &lt;span class="n">qe&lt;/span> &lt;span class="n">Security&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">q:&lt;/span>&lt;span class="s2">&amp;#34;*[System/EventID=5152]&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">c:&lt;/span>&lt;span class="mf">5&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">rd&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">true&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">f:text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">auditpol&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nb">set &lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">subcategory&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="s2">&amp;#34;{0CCE9225-69AE-11D9-BED3-505054503030}&amp;#34;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">disable&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">failure&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">disable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Windows阻断网络流量获取</title><link>https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/</link><pubDate>Fri, 28 Jun 2024 17:10:46 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Windows阻断网络流量获取&lt;/li>
&lt;/ul>
&lt;h1 id="windows-阻断网络流量获取">Windows 阻断网络流量获取&lt;/h1>
&lt;!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} -->
&lt;!-- code_chunk_output -->
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-windows-阻断网络流量获取-">Windows 阻断网络流量获取&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-搭建测试工程-">搭建测试工程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-通过审计获取-block-事件-">通过审计获取 block 事件&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-获取-provider-信息-">获取 provider 信息&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-构造-block-事件-">构造 block 事件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-监控网络事件net_event-">监控网络事件(NET_EVENT)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-监控网络链接netconnection-">监控网络链接(NetConnection)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-application-layer-enforcementale介绍-">Application Layer Enforcement(ALE)介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-编码-">编码&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-结论-">结论&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-附录-">附录&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-wfp-体系结构-">WFP 体系结构&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-数据流-">数据流&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/#-参考链接-">参考链接&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /code_chunk_output -->
&lt;ul>
&lt;li>需要识别出被阻断的流量, 被阻断的流量包括出站入站方向.&lt;/li>
&lt;li>阻断的两种形式, 基于链接(connection), 和基于数据包(packet). 数据包的丢弃较为频繁常见, 需要审查丢弃原因, 基于链接的阻断更符合实际需关注的阻断场景.&lt;/li>
&lt;li>许多正常处理的报文也会被 drop, 因此需要区分 drop 和 block 行为, 我们主要关注 block 的情况.&lt;/li>
&lt;/ul>
&lt;h2 id="搭建测试工程">搭建测试工程&lt;/h2>
&lt;p>WFP 主要工作在 usermode, 另一部分在 kernalmode, 能力以驱动形式体现, 搭建测试环境的方法比较复杂. 推荐的方法是测试机使用另一台物理机, 开发机编译好后, 发送至测试机远程调试.
受条件限制, 我们也可以直接在本地进行调试.&lt;/p></description></item><item><title>Windows防火墙管理-netsh</title><link>https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%A1%E7%90%86-netsh/</link><pubDate>Fri, 28 Jun 2024 17:10:36 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%A1%E7%90%86-netsh/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Windows防火墙管理-netsh&lt;/li>
&lt;/ul>
&lt;h1 id="windows-防火墙管理-netsh">Windows 防火墙管理-netsh&lt;/h1>
&lt;h2 id="管理工具">管理工具&lt;/h2>
&lt;h2 id="netsh-advfirewall">netsh advfirewall&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 导出防火墙规则&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">export&lt;/span> &lt;span class="n">advfirewallpolicy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">wfw&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 导入防火墙规则&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">import&lt;/span> &lt;span class="n">advfirewallpolicy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">wfw&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">allprofiles&lt;/span> &lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙默认规则&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">allprofiles&lt;/span> &lt;span class="n">firewallpolicy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># netsh advfirewall set allprofiles firewallpolicy blockinbound,allowoutbound&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># netsh advfirewall set allprofiles firewallpolicy blockinbound,blockoutbound&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙设置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">allprofiles&lt;/span> &lt;span class="n">settings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 启用防火墙&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="nb">set &lt;/span>&lt;span class="n">allprofiles&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="n">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 禁用防火墙&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="nb">set &lt;/span>&lt;span class="n">allprofiles&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="n">off&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙规则&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">firewall&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">rule&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">all&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">monitor&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">firewall&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="netsh-firewalldeprecated">netsh firewall(deprecated)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">firewall&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="netsh-mbnmobile-broadband-network">netsh mbn(Mobile Broadband network)&lt;/h2>
&lt;h2 id="netsh-wfp">netsh wfp&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">wfp&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看防火墙规则&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">wfp&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="kd">filter&lt;/span>&lt;span class="nb">s&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Windows相关资源</title><link>https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/</link><pubDate>Fri, 28 Jun 2024 17:10:07 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Windows相关资源&lt;/li>
&lt;/ul>
&lt;h1 id="windows-资源整理">Windows 资源整理&lt;/h1>
&lt;!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} -->
&lt;!-- code_chunk_output -->
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#windows-资源整理">Windows 资源整理&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#工具篇">工具篇&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#监控分析">监控&amp;amp;分析&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#antirootkit-工具">AntiRootkit 工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#pe-工具">PE 工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#逆向调试">逆向&amp;amp;调试&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#注入工具">注入工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#网络">网络&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#压测工具">压测工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#其他">其他&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#代码篇">代码篇&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#操作系统">操作系统&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#内核封装">内核封装&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#vt-技术">VT 技术&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#其他-1">其他&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#ctf-资源">CTF 资源&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#渗透相关">渗透相关&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/#专利免费查询">专利免费查询&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /code_chunk_output -->
&lt;p>这里只列举了一些 Windows 上调试，排查问题以及测试的一些常用工具，其他的加壳脱壳，加密解密，文件编辑器以及编程工具不进行整理了。&lt;/p>
&lt;h2 id="工具篇">工具篇&lt;/h2>
&lt;h3 id="监控分析">监控&amp;amp;分析&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>DebugView&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/debugview">https://docs.microsoft.com/zh-cn/sysinternals/downloads/debugview&lt;/a>&lt;/td>
 &lt;td style="text-align: left">sysinternals 里面的工具，可用来查看、控制内核及用户态调式输出&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Process Monitor&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procmon">https://docs.microsoft.com/zh-cn/sysinternals/downloads/procmon&lt;/a>&lt;/td>
 &lt;td style="text-align: left">sysinternals 里面的工具，实时监视文件系统，注册表，进程，线程以及 DLL 的活动，方便排查问题&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Process Explorer&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer&lt;/a>&lt;/td>
 &lt;td style="text-align: left">sysinternals 里面的工具，进程查看器，可以浏览加载的 DLL，调用堆栈以及查找文件被哪些进程打开&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>WinObj&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/winobj">https://docs.microsoft.com/zh-cn/sysinternals/downloads/winobj&lt;/a>&lt;/td>
 &lt;td style="text-align: left">sysinternals 里面的工具，对象管理器命名空间的查看利器，没有加载驱动而是使用系统 API 实现,可参考 GitHub 中的 WinObjEx64&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>WinObjEx64&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/hfiref0x/WinObjEx64">https://github.com/hfiref0x/WinObjEx64&lt;/a>&lt;/td>
 &lt;td style="text-align: left">对象管理器命名空间的查看利器，开源的&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Handle&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/handle">https://docs.microsoft.com/zh-cn/sysinternals/downloads/handle&lt;/a>&lt;/td>
 &lt;td style="text-align: left">sysinternals 里面的工具，查看特定的文件或者目录被哪个应用程序占用&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>sysinternals&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://live.sysinternals.com/">https://live.sysinternals.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">sysinternals 里面还有很多工具，一般用不着，暂时不进行罗列，上面几个是常用的工具&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>CPU-Z&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.cpuid.com/softwares/cpu-z.html">https://www.cpuid.com/softwares/cpu-z.html&lt;/a>&lt;/td>
 &lt;td style="text-align: left">CPU 实时监测工具&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ProcMonX&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/zodiacon/ProcMonX">https://github.com/zodiacon/ProcMonX&lt;/a>&lt;/td>
 &lt;td style="text-align: left">使用 ETW 实现的类似于 Process Monitor 功能的工具，开源 C#语言编写&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ProcMonXv2&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/zodiacon/ProcMonXv2">https://github.com/zodiacon/ProcMonXv2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">使用 ETW 实现的类似于 Process Monitor 功能的工具，开源 C#语言编写,第二版&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>processhacker&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/processhacker/processhacker">https://github.com/processhacker/processhacker&lt;/a>&lt;/td>
 &lt;td style="text-align: left">开源的类似于 Process Explorer 的工具，支持 GPU 相关的信息显示&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>API Monitor&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://www.rohitab.com/apimonitor">http://www.rohitab.com/apimonitor&lt;/a>&lt;/td>
 &lt;td style="text-align: left">通过跟踪 API 的调用，用来查看应用程序和服务的工作方式或跟踪应用程序中存在的问题，可修改 API 的入参及出参&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Dependency Walker&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://www.dependencywalker.com/">http://www.dependencywalker.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">扫描任何 32 位或 64 位 Windows 模块,列出了该模块导出的所有功能等&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>DeviceTree&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://www.osronline.com/article.cfm%5earticle=97.htm">http://www.osronline.com/article.cfm%5earticle=97.htm&lt;/a>&lt;/td>
 &lt;td style="text-align: left">显示系统的所有驱动对象以及相关设备栈信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Unlocker&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.softpedia.com/get/System/System-Miscellaneous/Unlocker.shtml">https://www.softpedia.com/get/System/System-Miscellaneous/Unlocker.shtml&lt;/a>&lt;/td>
 &lt;td style="text-align: left">解锁占用文件的，很多类似的工具以及开源代码&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>RpcView&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/silverf0x/RpcView">https://github.com/silverf0x/RpcView&lt;/a>&lt;/td>
 &lt;td style="text-align: left">显示以及反编译当前系统的 RPC 接口等信息，分析 RPC 的情况下可以借以辅助&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>RequestTrace&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://the-sz.com/products/rt/">https://the-sz.com/products/rt/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">可以查看 WINDOWS 上 IRP、SRB、URB 的详细信息，包含数据缓存等，一般也不会使用，因为 WINDBG 调试就可以分析数据，不调试的情况可以使用它来辅助&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>IRPMon&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/MartinDrab/IRPMon">https://github.com/MartinDrab/IRPMon&lt;/a>&lt;/td>
 &lt;td style="text-align: left">通过挂钩驱动对象，实现类似于 RequestTrace、IrpTracker 的功能，监控驱动对象的所有 IRP 等形式的请求&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>IRPTrace&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/haidragon/drivertools">https://github.com/haidragon/drivertools&lt;/a>&lt;/td>
 &lt;td style="text-align: left">里面有一些其他工具&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="antirootkit-工具">AntiRootkit 工具&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>PcHunter&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.anxinsec.com/view/antirootkit/">https://www.anxinsec.com/view/antirootkit/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">安全分析工具，为了对抗 Rootkit，使用穿透技术进行文件，网络，注册表等的操作，并提供线程、进程以及内核模块的各种详细信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Windows-Kernel-Explorer&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/AxtMueller/Windows-Kernel-Explorer">https://github.com/AxtMueller/Windows-Kernel-Explorer&lt;/a>&lt;/td>
 &lt;td style="text-align: left">类似于 Pchunter，不开源，如果 PcHunter 没有支持最新系统，可以尝试这个软件&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>PowerTool&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">目前没咋更新，朋友公司的同事开发的，据说代码很乱。。。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>py&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/antiwar3/py">https://github.com/antiwar3/py&lt;/a>&lt;/td>
 &lt;td style="text-align: left">飘云 ark&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="pe-工具">PE 工具&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>CFF Explorer&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://ntcore.com/?page_id=388">https://ntcore.com/?page_id=388&lt;/a>&lt;/td>
 &lt;td style="text-align: left">还不错的&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ExeinfoPe&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://www.exeinfo.xn.pl/">http://www.exeinfo.xn.pl/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="逆向调试">逆向&amp;amp;调试&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Ghidra&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.nsa.gov/resources/everyone/ghidra/">https://www.nsa.gov/resources/everyone/ghidra/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">由美国国家安全局（NSA）研究部门开发的软件逆向工程（SRE）套件，用于支持网络安全任务&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>IDA&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://down.52pojie.cn/">https://down.52pojie.cn/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">最新的破解版吧好像是 7.5，可在吾爱破解论坛查找下载地址&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>dnSpy&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/dnSpy/dnSpy">https://github.com/dnSpy/dnSpy&lt;/a>&lt;/td>
 &lt;td style="text-align: left">.NET 程序的逆向工具，对于不混淆不加密的.NET 程序相当于看源代码了，前提是了解.NET 框架&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>OllyDbg&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://down.52pojie.cn/Tools/Debuggers//">https://down.52pojie.cn/Tools/Debuggers//&lt;/a>&lt;/td>
 &lt;td style="text-align: left">用于逆向分析应用程序，插件丰富，但是不开源也不支持 x64 程序&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>x64DBG&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://x64dbg.com/">https://x64dbg.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">用于逆向分析应用程序，开源，支持 x64 程序，相对于 windbg 来说操作更方便点，和 OD 比较建议选择 x64dbg&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>CheatEngine&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.cheatengine.org/">https://www.cheatengine.org/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">逆向破解的神器，支持各种内存搜索、修改以及一些其他的高级逆向功能&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>VirtualKD-Redux&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/4d61726b/VirtualKD-Redux/releases">https://github.com/4d61726b/VirtualKD-Redux/releases&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Windbg 虚拟机调试的全自动化辅助工具，不再需要设置一堆环境变量，支持最新 VMWare&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Driver Loader&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://www.osronline.com/article.cfm%5Earticle=157.htm">http://www.osronline.com/article.cfm%5Earticle=157.htm&lt;/a>&lt;/td>
 &lt;td style="text-align: left">OSR 提供的工具，进行驱动的安装，加载以及卸载&lt;/td>
 &lt;td> &lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">reverse-engineering&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/wtsxDev/reverse-engineering">https://github.com/wtsxDev/reverse-engineering&lt;/a>&lt;/td>
 &lt;td style="text-align: left">基本上逆向需要得工具都可以在这里找到&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="注入工具">注入工具&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;th>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>yapi&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/ez8-co/yapi">https://github.com/ez8-co/yapi&lt;/a>&lt;/td>
 &lt;td style="text-align: left">一个程序注入 x64/x86 进程&lt;/td>
 &lt;td>开源，使用少，可重点查看源码，支持 32 位程序向 64 位程序注入&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Xenos&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/DarthTon/Xenos">https://github.com/DarthTon/Xenos&lt;/a>&lt;/td>
 &lt;td style="text-align: left">开源，而且使用了鼎鼎大名的黑古工程，支持内核注入&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ExtremeInjector&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/master131/ExtremeInjector">https://github.com/master131/ExtremeInjector&lt;/a>&lt;/td>
 &lt;td style="text-align: left">应用层注入工具，支持 32 位程序向 64 位程序注入&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="网络">网络&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Fiddler&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.telerik.com/fiddler">https://www.telerik.com/fiddler&lt;/a>&lt;/td>
 &lt;td style="text-align: left">可直接中间人劫持，不需要手动添加证书等，支持脚本进行流量劫持,同事也提供了 SDK 进行编码&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Wireshark&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.wireshark.org/download.html">https://www.wireshark.org/download.html&lt;/a>&lt;/td>
 &lt;td style="text-align: left">这个就不多介绍了&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Burp Suite&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://portswigger.net/burp">https://portswigger.net/burp&lt;/a>&lt;/td>
 &lt;td style="text-align: left">渗透的好像都偏爱这个抓包工具，依赖 JDK，可在吾爱下载破解版&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="压测工具">压测工具&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Driver Verifier&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/driver-verifier">https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/driver-verifier&lt;/a>&lt;/td>
 &lt;td style="text-align: left">系统自带，驱动稳定性测试工具&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Application Verifier&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/application-verifier">https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/application-verifier&lt;/a>&lt;/td>
 &lt;td style="text-align: left">系统自带，应用层的压测工具&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>CPUStress&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/cpustres">https://docs.microsoft.com/en-us/sysinternals/downloads/cpustres&lt;/a>&lt;/td>
 &lt;td style="text-align: left">让 CPU 负荷工作，测试极端情况下软件的稳定性以及响应度等&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="其他">其他&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>game-hacking&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/dsasmblr/game-hacking">https://github.com/dsasmblr/game-hacking&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>awesome-malware-analysis&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/rootkiter/awesome-malware-analysis">https://github.com/rootkiter/awesome-malware-analysis&lt;/a>&lt;/td>
 &lt;td style="text-align: left">病毒分析工具集合&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>drawio&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/jgraph/drawio-desktop">https://github.com/jgraph/drawio-desktop&lt;/a>&lt;/td>
 &lt;td style="text-align: left">绘图神器&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">RazorSQL&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.razorsql.com/">https://www.razorsql.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">SQLite3 数据库 GUI 工具&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Git 学习笔记&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/No-Github/1earn/blob/master/1earn/Develop/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md">https://github.com/No-Github/1earn/blob/master/1earn/Develop/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Git 版本管理知识&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Markdown 语法学习&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/No-Github/1earn/blob/master/1earn/Develop/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/Markdown/Markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0.md">https://github.com/No-Github/1earn/blob/master/1earn/Develop/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/Markdown/Markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0.md&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Markdown 语法学习&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="代码篇">代码篇&lt;/h2>
&lt;h3 id="操作系统">操作系统&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ReactOS&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/reactos/reactos">https://github.com/reactos/reactos&lt;/a>&lt;/td>
 &lt;td style="text-align: left">好像是逆向 windows 2000 的开源系统，可以替换 win 2000 的内核程序&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>wrk-v1.2&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/jmcjmmcjc/wrk-v1.2">https://github.com/jmcjmmcjc/wrk-v1.2&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Windows NT 5.2 Partial Source Code&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>WinNT4&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/ZoloZiak/WinNT4">https://github.com/ZoloZiak/WinNT4&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Windows NT4 Kernel Source code&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">whids&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/0xrawsec/whids/tree/a826d87e0d035daac10bfa96b530c5deff6b9915">https://github.com/0xrawsec/whids/tree/a826d87e0d035daac10bfa96b530c5deff6b9915&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Open Source EDR for Windows&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="内核封装">内核封装&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>CPPHelper&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/Chuyu-Team/CPPHelper">https://github.com/Chuyu-Team/CPPHelper&lt;/a>&lt;/td>
 &lt;td style="text-align: left">C++基础辅助类库&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>cpp_component&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/skyformat99/cpp_component">https://github.com/skyformat99/cpp_component&lt;/a>&lt;/td>
 &lt;td style="text-align: left">对 cpp 一些常用的功能进行封装&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>WinToolsLib&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/deeonis-ru/WinToolsLib">https://github.com/deeonis-ru/WinToolsLib&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Suite of classes for Windows programming&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>KDU&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/hfiref0x/KDU">https://github.com/hfiref0x/KDU&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>KTL&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/MeeSong/KTL">https://github.com/MeeSong/KTL&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Kernel-Bridge&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/HoShiMin/Kernel-Bridge">https://github.com/HoShiMin/Kernel-Bridge&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>KernelForge&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/killvxk/KernelForge">https://github.com/killvxk/KernelForge&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ExecutiveCallbackObjects&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/0xcpu/ExecutiveCallbackObjects">https://github.com/0xcpu/ExecutiveCallbackObjects&lt;/a>&lt;/td>
 &lt;td style="text-align: left">内核下的各种回调研究&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>SyscallHook&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/AnzeLesnik/SyscallHook">https://github.com/AnzeLesnik/SyscallHook&lt;/a>&lt;/td>
 &lt;td style="text-align: left">System call hook for Windows 10 20H1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Antivirus_R3_bypass_demo&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/huoji120/Antivirus_R3_bypass_demo">https://github.com/huoji120/Antivirus_R3_bypass_demo&lt;/a>&lt;/td>
 &lt;td style="text-align: left">分别用 R3 的 0day 与 R0 的 0day 来干掉杀毒软件&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>KernelHiddenExecute&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/zouxianyu/KernelHiddenExecute">https://github.com/zouxianyu/KernelHiddenExecute&lt;/a>&lt;/td>
 &lt;td style="text-align: left">在内核地址空间中隐藏代码/数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>DriverInjectDll&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/strivexjun/DriverInjectDll">https://github.com/strivexjun/DriverInjectDll&lt;/a>&lt;/td>
 &lt;td style="text-align: left">内核模式下全局注入，内存注入，支持 WIN7-WIN10&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>zwhawk&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/eLoopWoo/zwhawk">https://github.com/eLoopWoo/zwhawk&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Windows 远程命令和控制界面的内核 rootkit&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ZeroBank-ring0-bundle&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/Trietptm-on-Coding-Algorithms/ZeroBank-ring0-bundle">https://github.com/Trietptm-on-Coding-Algorithms/ZeroBank-ring0-bundle&lt;/a>&lt;/td>
 &lt;td style="text-align: left">连接到远程服务器以发送和接收命令的内核模式 rootkit&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>kdmapper&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/z175/kdmapper">https://github.com/z175/kdmapper&lt;/a>&lt;/td>
 &lt;td style="text-align: left">About driver manual mapper (outdated/for educational purposes)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>antispy&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/mohuihui/antispy">https://github.com/mohuihui/antispy&lt;/a>&lt;/td>
 &lt;td style="text-align: left">a free but powerful anti virus and rootkits toolkit&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>windows_kernel_resources&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/sam-b/windows_kernel_resources">https://github.com/sam-b/windows_kernel_resources&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>HookLib&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/HoShiMin/HookLib">https://github.com/HoShiMin/HookLib&lt;/a>&lt;/td>
 &lt;td style="text-align: left">UserMode and KernelMode support&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Kernel-Whisperer&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/BrunoMCBraga/Kernel-Whisperer">https://github.com/BrunoMCBraga/Kernel-Whisperer&lt;/a>&lt;/td>
 &lt;td style="text-align: left">内核模块封装&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">SQLiteCpp&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/SRombauts/SQLiteCpp">https://github.com/SRombauts/SQLiteCpp&lt;/a>&lt;/td>
 &lt;td style="text-align: left">a smart and easy to use C++ SQLite3 wrapper&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">awesome-windows-kernel-security-development&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/ExpLife0011/awesome-windows-kernel-security-development">https://github.com/ExpLife0011/awesome-windows-kernel-security-development&lt;/a>&lt;/td>
 &lt;td style="text-align: left">各种内核技术得代码合集&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="vt-技术">VT 技术&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>hvpp&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/wbenny/hvpp">https://github.com/wbenny/hvpp&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>HyperBone&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/DarthTon/HyperBone">https://github.com/DarthTon/HyperBone&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>HyperWin&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/amiryeshurun/HyperWin">https://github.com/amiryeshurun/HyperWin&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Hypervisor&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/Bareflank/hypervisor">https://github.com/Bareflank/hypervisor&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>HyperPlatform&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/tandasat/HyperPlatform">https://github.com/tandasat/HyperPlatform&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Hyper-V-Internals&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/gerhart01/Hyper-V-Internals">https://github.com/gerhart01/Hyper-V-Internals&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Hypervisor-From-Scratch&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/SinaKarvandi/Hypervisor-From-Scratch">https://github.com/SinaKarvandi/Hypervisor-From-Scratch&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>KasperskyHook&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/iPower/KasperskyHook">https://github.com/iPower/KasperskyHook&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>awesome-virtualization&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/Wenzel/awesome-virtualization">https://github.com/Wenzel/awesome-virtualization&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ransomware_begone&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/ofercas/ransomware_begone">https://github.com/ofercas/ransomware_begone&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="其他-1">其他&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">工具名&lt;/th>
 &lt;th style="text-align: left">下载地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Divert&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/basil00/Divert">https://github.com/basil00/Divert&lt;/a>&lt;/td>
 &lt;td style="text-align: left">将数据流量转发给应用程序，可以修改，丢弃等操作网络流量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Blackbone&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/DarthTon/Blackbone">https://github.com/DarthTon/Blackbone&lt;/a>&lt;/td>
 &lt;td style="text-align: left">内核模式下的几种注入方式，包括了内核模式下的内存注入&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>NetWatch&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/huoji120/NetWatch">https://github.com/huoji120/NetWatch&lt;/a>&lt;/td>
 &lt;td style="text-align: left">威胁流量检测系统，可以做虚拟内存补丁&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>x64_AOB_Search&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/wanttobeno/x64_AOB_Search">https://github.com/wanttobeno/x64_AOB_Search&lt;/a>&lt;/td>
 &lt;td style="text-align: left">快速内存搜索算法，商用级别,支持通配符&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>DuckMemoryScan&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/huoji120/DuckMemoryScan">https://github.com/huoji120/DuckMemoryScan&lt;/a>&lt;/td>
 &lt;td style="text-align: left">检测绝大部分所谓的内存免杀马&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>FSDefender&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/Randomize163/FSDefender">https://github.com/Randomize163/FSDefender&lt;/a>&lt;/td>
 &lt;td style="text-align: left">文件驱动监控 + 云备份方案&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>AntiRansomware&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/clavis0x/AntiRansomware">https://github.com/clavis0x/AntiRansomware&lt;/a>&lt;/td>
 &lt;td style="text-align: left">防勒索方案，不让覆盖，写就进行扫描&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Lazy&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/moonAgirl/Lazy">https://github.com/moonAgirl/Lazy&lt;/a>&lt;/td>
 &lt;td style="text-align: left">(恶意)勒索软件终结者&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">awesome-cheatsheets&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/skywind3000/awesome-cheatsheets/blob/master/tools/git.txt">https://github.com/skywind3000/awesome-cheatsheets/blob/master/tools/git.txt&lt;/a>&lt;/td>
 &lt;td style="text-align: left">各种 python,git 速查表&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="ctf-资源">CTF 资源&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">仓库名&lt;/th>
 &lt;th style="text-align: left">仓库地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>CTF-All-In-One&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/firmianay/CTF-All-In-One">https://github.com/firmianay/CTF-All-In-One&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>ctf-book&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/firmianay/ctf-book">https://github.com/firmianay/ctf-book&lt;/a>&lt;/td>
 &lt;td style="text-align: left">CTF 竞赛权威指南(Pwn 篇) 相关资源&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="渗透相关">渗透相关&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">仓库名&lt;/th>
 &lt;th style="text-align: left">仓库地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Web-Security-Learning&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/CHYbeta/Web-Security-Learning">https://github.com/CHYbeta/Web-Security-Learning&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>pentest&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/r0eXpeR/pentest">https://github.com/r0eXpeR/pentest&lt;/a>&lt;/td>
 &lt;td style="text-align: left">内网渗透中的一些工具及项目资料&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>K8tools&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://k8gege.org/p/72f1fea6.html">http://k8gege.org/p/72f1fea6.html&lt;/a>&lt;/td>
 &lt;td style="text-align: left">K8tools 工具合集&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Awesome-Red-Teaming&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming">https://github.com/yeyintminthuhtut/Awesome-Red-Teaming&lt;/a>&lt;/td>
 &lt;td style="text-align: left">List of Awesome Red Teaming Resources&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>Awesome-Hacking&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/Hack-with-Github/Awesome-Hacking">https://github.com/Hack-with-Github/Awesome-Hacking&lt;/a>&lt;/td>
 &lt;td style="text-align: left">A collection of various awesome lists for hackers&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">awesome-web-hacking&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://github.com/infoslack/awesome-web-hacking">https://github.com/infoslack/awesome-web-hacking&lt;/a>&lt;/td>
 &lt;td style="text-align: left">渗透知识&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="专利免费查询">专利免费查询&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">仓库名&lt;/th>
 &lt;th style="text-align: left">仓库地址&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>专利信息服务平台&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="http://search.cnipr.com/">http://search.cnipr.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>patents&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&amp;lt;www.google.com/patents&amp;gt;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>incopat&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&amp;lt;www.incopat.com&amp;gt;&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>佰腾&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.baiten.cn/">https://www.baiten.cn/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>rainpat&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.rainpat.com/">https://www.rainpat.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;strong>度衍&lt;/strong>&lt;/td>
 &lt;td style="text-align: left">&lt;a href="https://www.uyanip.com/">https://www.uyanip.com/&lt;/a>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Windows导览</title><link>https://blog.jqknono.com/blog/2024/06/28/windows%E5%AF%BC%E8%A7%88/</link><pubDate>Fri, 28 Jun 2024 17:09:22 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/windows%E5%AF%BC%E8%A7%88/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Windows 导览&lt;/li>
&lt;/ul>
&lt;h1 id="windows">Windows&lt;/h1>
&lt;ul>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/" title="Win-to-go">Win-to-go&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="%E7%90%86%E8%A7%A3Windows%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F" title="理解Windows文件系统">理解Windows文件系统&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="%E7%90%86%E8%A7%A3Windows%E8%BF%9B%E7%A8%8B" title="理解Windows进程">理解Windows进程&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/" title="Windows相关资源">Windows相关资源&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="Windows%E7%AE%A1%E7%90%86%E8%BF%9B%E9%98%B6" title="Windows管理进阶">Windows管理进阶&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%A1%E7%90%86-netsh/" title="Windows防火墙管理-netsh">Windows防火墙管理-netsh&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows%E9%98%BB%E6%96%AD%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E8%8E%B7%E5%8F%96/" title="Windows阻断网络流量获取">Windows阻断网络流量获取&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="../../../%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/Windows%E9%BA%BB%E7%83%A6%E9%97%AE%E9%A2%98" title="Windows麻烦问题">Windows麻烦问题&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/%E7%90%86%E8%A7%A3windows%E4%BA%8B%E4%BB%B6%E8%B7%9F%E8%B8%AA_etw/" title="理解Windows事件跟踪_ETW">理解Windows事件跟踪_ETW&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/%E7%90%86%E8%A7%A3windows%E7%BD%91%E7%BB%9C_wfp/" title="理解Windows网络_WFP">理解Windows网络_WFP&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/windows-ipv6%E7%AE%A1%E7%90%86/" title="windows-ipv6管理">windows-ipv6管理&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2023/05/06/windows%E6%A1%A5%E6%8E%A5%E6%97%B6%E7%9A%84ipv6%E9%97%AE%E9%A2%98/" title="Windows桥接时的IPv6问题">Windows桥接时的IPv6问题&lt;/a>]&lt;/li>
&lt;li>[&lt;a href="https://blog.jqknono.com/blog/2024/06/28/wireguard%E9%85%8D%E7%BD%AE/" title="wireguard配置">wireguard配置&lt;/a>]&lt;/li>
&lt;/ul></description></item><item><title>windows-ipv6管理</title><link>https://blog.jqknono.com/blog/2024/06/28/windows-ipv6%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 28 Jun 2024 17:08:36 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/windows-ipv6%E7%AE%A1%E7%90%86/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> windows-ipv6管理&lt;/li>
&lt;/ul>
&lt;h1 id="windows-ipv6-管理">windows-ipv6 管理&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看ipv6地址, 过滤locallink地址, 过滤Loopback地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetIPAddress&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Where-Object&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">IPAddress&lt;/span> &lt;span class="o">-notlike&lt;/span> &lt;span class="s2">&amp;#34;fe80*&amp;#34;&lt;/span> &lt;span class="o">-and&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">IPAddress&lt;/span> &lt;span class="o">-notlike&lt;/span> &lt;span class="s2">&amp;#34;::1&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Format-Table&lt;/span> &lt;span class="n">-AutoSize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看ipv6路由&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetRoute&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看ipv6邻居&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetNeighbor&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 查看interface&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetAdapter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 使能临时ipv6地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-UseTemporaryAddress&lt;/span> &lt;span class="n">Enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 获取interface 信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetIPInterface&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="n">-ifAlias&lt;/span> &lt;span class="n">Ethernet&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Select-Object&lt;/span> &lt;span class="n">-Property&lt;/span> &lt;span class="p">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-NetIPv6Protocol&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 设置interface 信息, 解决Windows IPv6地址不更新的问题&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="n">-ifAlias&lt;/span> &lt;span class="n">Ethernet&lt;/span> &lt;span class="n">-Dhcp&lt;/span> &lt;span class="n">Disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="n">-ifAlias&lt;/span> &lt;span class="n">Ethernet&lt;/span> &lt;span class="n">-AdvertiseDefaultRoute&lt;/span> &lt;span class="n">Disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPInterface&lt;/span> &lt;span class="n">-AddressFamily&lt;/span> &lt;span class="n">IPv6&lt;/span> &lt;span class="n">-ifAlias&lt;/span> &lt;span class="n">Ethernet&lt;/span> &lt;span class="n">-IgnoreDefaultRoutes&lt;/span> &lt;span class="n">Enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 手动恢复ipv6访问&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set-NetIPInterface -AddressFamily IPv6 -ifAlias Ethernet -RouterDiscovery Disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set-NetIPInterface -AddressFamily IPv6 -ifAlias Ethernet -RouterDiscovery Enabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-DhcpMediaSense&lt;/span> &lt;span class="n">Disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-RandomizeIdentifiers&lt;/span> &lt;span class="n">Disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-UseTemporaryAddresses&lt;/span> &lt;span class="n">Disabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-MaxTemporaryDesyncTime&lt;/span> &lt;span class="mf">0&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">3&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-MaxTemporaryPreferredLifetime&lt;/span> &lt;span class="mf">0&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">10&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-MaxTemporaryValidLifetime&lt;/span> &lt;span class="mf">0&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">30&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-NetIPv6Protocol&lt;/span> &lt;span class="n">-TemporaryRegenerateTime&lt;/span> &lt;span class="mf">0&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">0&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">30&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>window-message</title><link>https://blog.jqknono.com/blog/2024/06/28/window-message/</link><pubDate>Fri, 28 Jun 2024 17:07:51 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/window-message/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> window-message&lt;/li>
&lt;/ul>
&lt;h1 id="windows-message">windows-message&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://gist.github.com/amgine/2395987">All windows messages as C# enum (github.com)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.winehq.org/List_Of_Windows_Messages">List Of Windows Messages - WineHQ Wiki&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.pinvoke.net/default.aspx/Constants/WM.html">pinvoke.net: WM (Constants)&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pinvoke.net/default.aspx/Enums.WindowsMessages">pinvoke.net: WindowsMessages (Enums)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/winmsg/window-notifications">Window Notifications&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Win-to-go</title><link>https://blog.jqknono.com/blog/2024/06/28/win-to-go/</link><pubDate>Fri, 28 Jun 2024 17:07:10 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/win-to-go/</guid><description>&lt;p>===&lt;/p>
&lt;p>Windows To Go 的优点在于移动便携性, 缺点在于经典 Windows系统的数个功能受到限制.&lt;/p>
&lt;!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} -->
&lt;!-- code_chunk_output -->
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#前言">前言&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#windows-to-go-overview">Windows To Go Overview&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#windows-to-go-和传统-windows-安装方式的区别">Windows To Go 和传统 Windows 安装方式的区别&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#使用-windows-to-go-来移动工作">使用 Windows To Go 来移动工作&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#准备安装-windows-to-go">准备安装 Windows To Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#硬件要求">硬件要求&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#usb-硬盘或-u盘">USB 硬盘或 U盘&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#载体机器host-computer">载体机器(Host computer)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#检查载体-pc-和-windows-to-go-盘的架构兼容性">检查载体 PC 和 Windows To Go 盘的架构兼容性&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/win-to-go/#windows-to-go-的常见问题">Windows To Go 的常见问题&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- /code_chunk_output -->
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Windows To Go出现很多年了, 可是百度到的中文文档却如此少, 不禁为国内IT技术的发展而担忧.作者J参加工作时间不长, 能力有限, 但工作中接触大量英文开发文档, 因此仍希望能做一点基础的铺路工作, 方便后来者查阅, 有不当之处也请读者不吝指出. Windows To Go有详尽的官方文档, 有英文阅读能力的可以直接跳转到微软官方文档. 链接如下:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/deployment/planning/windows-to-go-overview">Windows To Go Overview&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/deployment/planning/best-practice-recommendations-for-windows-to-go">Best practice recommendations for Windows To Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/deployment/planning/deployment-considerations-for-windows-to-go">Deployment considerations for Windows To Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/deployment/planning/prepare-your-organization-for-windows-to-go">Prepare your organization for Windows To Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/deployment/planning/security-and-data-protection-considerations-for-windows-to-go">Security and data protection considerations for Windows To Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/deployment/planning/windows-to-go-frequently-asked-questions">Windows To Go: frequently asked questions&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>本文主要会介绍 Overview, 和一些常见问题, 大部分内容为翻译, 少量作者的提醒以[J]来标注直至句号结束, 以确保不误导读者.&lt;/p></description></item><item><title>虚拟内存磁盘配置</title><link>https://blog.jqknono.com/blog/2024/06/28/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A3%81%E7%9B%98%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 28 Jun 2024 16:38:40 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A3%81%E7%9B%98%E9%85%8D%E7%BD%AE/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 虚拟内存磁盘配置&lt;/li>
&lt;/ul>
&lt;h1 id="虚拟内存磁盘配置">虚拟内存磁盘配置&lt;/h1>
&lt;h2 id="浏览器缓存到虚拟磁盘">浏览器缓存到虚拟磁盘&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bat" data-lang="bat">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>!-- imdisk --&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">rd&lt;/span> /q /s &lt;span class="s2">&amp;#34;C:\Users\Administrator\AppData\Local\Microsoft\Edge\User Data\Default\Cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">rd&lt;/span> /q /s &lt;span class="s2">&amp;#34;C:\Users\Administrator\AppData\Local\Microsoft\Edge\User Data\Default\Code Cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">md&lt;/span> M:\Edge_Cache\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">md&lt;/span> M:\Edge_CodeCache\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">mklink&lt;/span> /D &lt;span class="s2">&amp;#34;C:\Users\Administrator\AppData\Local\Microsoft\Edge\User Data\Default\Cache&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;M:\Edge_Cache\&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">mklink&lt;/span> /D &lt;span class="s2">&amp;#34;C:\Users\Administrator\AppData\Local\Microsoft\Edge\User Data\Default\Code Cache&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;M:\Edge_CodeCache\&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>wsl</title><link>https://blog.jqknono.com/blog/2024/06/28/wsl/</link><pubDate>Fri, 28 Jun 2024 16:37:30 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/wsl/</guid><description>&lt;h1 id="配置-wsl">配置 wsl&lt;/h1>
&lt;!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} -->
&lt;!-- code_chunk_output -->
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/wsl/#配置-wsl">配置 wsl&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/wsl/#远程访问-ssh">远程访问 ssh&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/blog/2024/06/28/wsl/#配置-wsl-1">配置 wsl&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /code_chunk_output -->
&lt;h2 id="远程访问-ssh">远程访问 ssh&lt;/h2>
&lt;p>&lt;strong>wsl&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo apt install openssh-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo nano /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...STUFF ABOVE THIS...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">2222&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#AddressFamily any&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ListenAddress 0.0.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#ListenAddress ::&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...STUFF BELOW THIS...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>windows&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="n">service&lt;/span> &lt;span class="n">ssh&lt;/span> &lt;span class="nb">start
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">&lt;/span>&lt;span class="n">netsh&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">portproxy&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">v4tov4&lt;/span> &lt;span class="n">listenaddress&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">0&lt;/span> &lt;span class="n">listenport&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">2222&lt;/span> &lt;span class="n">connectaddress&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">172.23&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">129&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">80&lt;/span> &lt;span class="n">connectport&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">2222&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">advfirewall&lt;/span> &lt;span class="n">firewall&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">rule&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="s2">&amp;#34;Open Port 2222 for WSL2&amp;#34;&lt;/span> &lt;span class="n">dir&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="k">in&lt;/span> &lt;span class="n">action&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">allow&lt;/span> &lt;span class="n">protocol&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">localport&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">2222&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">portproxy&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">v4tov4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">int&lt;/span> &lt;span class="n">portproxy&lt;/span> &lt;span class="n">reset&lt;/span> &lt;span class="n">all&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置-wsl-1">配置 wsl&lt;/h2>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/wsl-config#configuration-setting-for-wslconfig">https://docs.microsoft.com/en-us/windows/wsl/wsl-config#configuration-setting-for-wslconfig&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-Content&lt;/span> &lt;span class="n">-Path&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$env:userprofile&lt;/span>&lt;span class="s2">\\.wslconfig&amp;#34;&lt;/span> &lt;span class="n">-Value&lt;/span> &lt;span class="s2">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Settings apply across all Linux distros running on WSL 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">[wsl2]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Limits VM memory to use no more than 4 GB, this can be set as whole numbers using GB or MB
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">memory=2GB
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Sets the VM to use two virtual processors
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">processors=2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Specify a custom Linux kernel to use with your installed distros. The default kernel used can be found at https://github.com/microsoft/WSL2-Linux-Kernel
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># kernel=C:\\temp\\myCustomKernel
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Sets additional kernel parameters, in this case enabling older Linux base images such as Centos 6
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># kernelCommandLine = vsyscall=emulate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Sets amount of swap storage space to 8GB, default is 25% of available RAM
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">swap=1GB
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Sets swapfile path location, default is %USERPROFILE%\AppData\Local\Temp\swap.vhdx
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">swapfile=C:\\temp\\wsl-swap.vhdx
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Disable page reporting so WSL retains all allocated memory claimed from Windows and releases none back when free
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">pageReporting=false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Turn off default connection to bind WSL 2 localhost to Windows localhost
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">localhostforwarding=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Disables nested virtualization
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">nestedVirtualization=false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"># Turns on output console showing contents of dmesg when opening a WSL 2 distro for debugging
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">debugConsole=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>简易server-client代码</title><link>https://blog.jqknono.com/blog/2024/06/28/%E7%AE%80%E6%98%93server-client%E4%BB%A3%E7%A0%81/</link><pubDate>Fri, 28 Jun 2024 16:07:13 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E7%AE%80%E6%98%93server-client%E4%BB%A3%E7%A0%81/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 简易server-client代码&lt;/li>
&lt;/ul>
&lt;h1 id="简易-server-client-代码-windows">简易 server-client 代码 windows&lt;/h1>
&lt;h2 id="windows">Windows&lt;/h2>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/windows/win32/winsock/complete-client-code">Complete Winsock Client Code&lt;/a>
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/winsock/complete-server-code">Complete Winsock Server Code&lt;/a>&lt;/p>
&lt;h2 id="linux">Linux&lt;/h2>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/socket-programming-cc/">Linux Socket Programming&lt;/a>
&lt;a href="https://www.geeksforgeeks.org/simple-client-server-application-in-c/">Simple client/server application in C&lt;/a>&lt;/p></description></item><item><title>docker介绍</title><link>https://blog.jqknono.com/blog/2024/06/28/docker%E4%BB%8B%E7%BB%8D/</link><pubDate>Fri, 28 Jun 2024 16:00:31 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/docker%E4%BB%8B%E7%BB%8D/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> docker介绍&lt;/li>
&lt;/ul>
&lt;h1 id="docker-介绍">docker 介绍&lt;/h1>
&lt;ul>
&lt;li>docker 是一个应用容器引擎, 可以打包应用及其依赖包到一个可移植的容器中, 然后发布到任何流行的 Linux 或 Windows 机器上, 也可以实现虚拟化.&lt;/li>
&lt;li>为什么会有 docker, 因为开发和运维经常遇到一类问题, 那就是应用在开发人员的环境上运行没有任何问题, 但在实际生产环境中却 bug 百出.
&lt;ul>
&lt;li>程序的运行从硬件架构到操作系统, 再到应用程序, 这些都是不同的层次, 但是开发人员往往只关注应用程序的开发, 而忽略了其他层次的问题.&lt;/li>
&lt;li>docker 的出现就是为了解决这个问题, 它将应用程序及其依赖, 打包在一个容器中, 这样就不用担心环境的问题了.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>同步开发和生产环境, 使开发人员可以在本地开发, 测试, 部署应用程序, 而不用担心环境的问题. 显著提升了开发和运维的效率, 代价是一点点资源的浪费.&lt;/li>
&lt;/ul>
&lt;p>我极力建议所有开发者都学会使用容器进行开发和部署, 它以相对很低的代价, 为你的应用程序提供一个稳定的运行环境, 从而提高开发和运维的效率.&lt;/p>
&lt;p>使用一些通俗的语言来描述使用 docker 的一种工作流:&lt;/p>
&lt;ol>
&lt;li>从零创建一个开发的环境, 包含了操作系统, 应用程序, 依赖包, 配置文件等等.
&lt;ul>
&lt;li>环境可以在任何地方运行, 也可以在任何地方创建.&lt;/li>
&lt;li>环境对源码编译的结果稳定且可预测, 行为完全一致.&lt;/li>
&lt;li>环境中程序的运行不会产生任何歧义.&lt;/li>
&lt;li>最好是可以使用声明式的方式来创建环境(docker-compose), 进一步减少环境的隐藏差异, 环境的一切都已在声明里展示.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>创建一个 commit, 创建镜像, 这相当于一个快照, 保存当前的环境, 以便以后使用.&lt;/li>
&lt;li>分享镜像给其它开发和运维, 大家基于相同语境同步展开工作.&lt;/li>
&lt;li>随着业务的发展需求, 修改镜像, 重新创建 commit, 重新创建镜像, 重新分发.&lt;/li>
&lt;/ol>
&lt;h2 id="docker-的基本架构">docker 的基本架构&lt;/h2>
&lt;ul>
&lt;li>[&lt;a href="docker%E7%BD%91%E7%BB%9C" title="docker网络">docker网络&lt;/a>]&lt;/li>
&lt;/ul></description></item><item><title>可信设计</title><link>https://blog.jqknono.com/blog/2024/06/28/%E5%8F%AF%E4%BF%A1%E8%AE%BE%E8%AE%A1/</link><pubDate>Fri, 28 Jun 2024 15:49:18 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E5%8F%AF%E4%BF%A1%E8%AE%BE%E8%AE%A1/</guid><description>&lt;h1 id="安全架构与设计原则">安全架构与设计原则&lt;/h1>
&lt;h2 id="安全三要素与安全设计原则">安全三要素与安全设计原则&lt;/h2>
&lt;ul>
&lt;li>完整性 Integrity&lt;/li>
&lt;li>可用性 Availability&lt;/li>
&lt;li>机密性 Confidentiality&lt;/li>
&lt;/ul>
&lt;h2 id="开放设计原则">开放设计原则&lt;/h2>
&lt;p>Open Design&lt;/p>
&lt;ul>
&lt;li>设计不应该是秘密, 开放设计更安全.&lt;/li>
&lt;li>安全不依赖保密.&lt;/li>
&lt;/ul>
&lt;h2 id="失败-默认安全原则">失败-默认安全原则&lt;/h2>
&lt;p>Fail-safe defaults&lt;/p>
&lt;ul>
&lt;li>访问决策基于&amp;quot;允许&amp;quot;, 而不是&amp;quot;拒绝&amp;quot;.&lt;/li>
&lt;li>默认情况下不允许访问, 保护机制仅用来识别允许访问的情况.&lt;/li>
&lt;li>失败安全: 任何一个复杂系统应该有功能失效后的应急安全机制, 另外对错误消息和日志要小心, 防止信息泄露.&lt;/li>
&lt;li>默认安全: 系统在初始状态下, 默认配置是安全的, 通过使用最少的系统和服务来提供最大的安全性.&lt;/li>
&lt;/ul>
&lt;h2 id="权限分离原则">权限分离原则&lt;/h2>
&lt;p>Separation of Privilege&lt;/p>
&lt;ul>
&lt;li>一种保护机制需要使用两把钥匙来解锁, 比使用一把钥匙要更健壮和更灵活.&lt;/li>
&lt;li>权限分离的目的&lt;/li>
&lt;li>防止利益冲突, 个别权力滥用&lt;/li>
&lt;li>对某一重要权限分解为多个权限, 让需要保护的对象更难被非法获取, 从而也更安全.&lt;/li>
&lt;li>分离不同进程的权责&lt;/li>
&lt;/ul>
&lt;p>系统可以默认设置 3 个角色, 角色间系统账号权限相互独立, 权责分离:&lt;/p>
&lt;ul>
&lt;li>系统管理员: 负责系统的日常用户管理, 配置管理.&lt;/li>
&lt;li>安全管理员: 负责对用户状态, 安全配置的激活, 去激活管理.&lt;/li>
&lt;li>安全审计员: 负责对前面二者的操作做日志审计, 并拥有日志导出权限, 保证系统用户所有操作的可追溯性.&lt;/li>
&lt;/ul>
&lt;h2 id="最小权限原则">最小权限原则&lt;/h2>
&lt;p>Least Privilege&lt;/p>
&lt;ul>
&lt;li>系统的每一个用户, 每一个程序, 都应该使用最小且必须的权限集来完成工作.&lt;/li>
&lt;li>确保应用程序使用最低的权限运行.&lt;/li>
&lt;li>对系统中各用户运行各类程序, 如数据库, WEB 服务器登, 要注意最小权限的账户运行或连接, 不能是系统最高权限的账号.&lt;/li>
&lt;li>新建账号时, 默认赋给最小权限的角色.&lt;/li>
&lt;/ul>
&lt;h2 id="经济使用原则">经济使用原则&lt;/h2>
&lt;p>Economy of Mechanism&lt;/p></description></item><item><title>华为可信概念</title><link>https://blog.jqknono.com/blog/2024/06/28/%E5%8D%8E%E4%B8%BA%E5%8F%AF%E4%BF%A1%E6%A6%82%E5%BF%B5/</link><pubDate>Fri, 28 Jun 2024 15:49:02 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E5%8D%8E%E4%B8%BA%E5%8F%AF%E4%BF%A1%E6%A6%82%E5%BF%B5/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> 华为可信概念&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安全性（Security）：产品有良好的抗攻击能力，保护业务和数据的机密性、完整性和可用性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>韧性（Resilience）：系统受攻击时保持有定义的运行状态（包括降级），遭遇攻击后快速恢复并持续演进的能力。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>隐私性（Privacy）：遵从隐私保护既是法律法规的要求，也是价值观的体现。用户应该能够适当地控制他们的数据的使用方式。信息的使用政策应该是对用户透明的。用户应该根据自己的需要来控制何时接收以及是否接收信息。用户的隐私数据要有完善的保护能力和机制。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安全性（Safety）：系统失效导致的危害不存在不可接受的风险，不会伤害自然人生命或危及自然人健康，不管是直接还是通过损害环境或财产间接造成的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可靠性和可用性（Reliability&amp;amp; Availability）：产品能在生命周期内长期保障业务无故障运行，具备快速恢复和自我管理的能力，提供可预期的、一致的服务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>ref:&lt;/p>
&lt;p>&lt;a href="https://www.huawei.com/cn/trust-center/trustworthy#we-offer">华为.我们提供什么&lt;/a>&lt;/p></description></item><item><title>华为内网网络安全分析</title><link>https://blog.jqknono.com/blog/2024/06/28/%E5%8D%8E%E4%B8%BA%E5%86%85%E7%BD%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%86%E6%9E%90/</link><pubDate>Fri, 28 Jun 2024 15:48:48 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/%E5%8D%8E%E4%B8%BA%E5%86%85%E7%BD%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%86%E6%9E%90/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 华为内网网络安全分析&lt;/li>
&lt;/ul>
&lt;p>华为公司内部有很多不错的学习资料，自己也总结了很多知识经验，一直想着如何导入到自己的知识库。我清楚的明白这些通用化的知识是不涉密不敏感的，但信息安全警钟长鸣，让人心痒又不敢越雷池一步。经过一些测试，我发现公司的网络安全保护比较难突破。本文将对研发区黄区作一点粗略解析。绿区属于自由区域，默认无重要信息，一般为外围工作人员的网络。红区为超高级别的网络防护，目前尚未有长时间深入接触，简单接触到的红区位于网络设备实验室，存放各种大型交换机框架，是公司内网的枢纽，攻破红区的话就相当于攻破了区域网络，至少一栋楼的网络是可以瘫痪一段时间的。&lt;/p>
&lt;h2 id="路由器防火墙方式">路由器防火墙方式&lt;/h2>
&lt;p>&lt;strong>加密&lt;/strong>：加密使用公钥，什么是公钥，简单理解为钥匙，这把钥匙可以人手一把，但只能上锁，不可以开锁。以上是极为具现化的表达，下边会稍微抽象一点，公钥是一个数字 A，有一条信息 M，用 A 对 M 进行加密操作$$f(A, M)$$，得到的信息无法轻易反向解密，类似对数字求平方和求开方的难度区别，合并同类项和因式分解的难度区别。反向解密会非常困难且耗时，使用超级计算机也需要数年乃至数十年。&lt;/p>
&lt;p>&lt;strong>解密&lt;/strong>：服务端使用私钥揭秘，四面八方汇聚来的已加密信息可以使用同一把私钥解密。&lt;/p>
&lt;p>&lt;strong>中间人&lt;/strong>：中间人角色类似传话筒，对客户端它是服务端，在服务端看来它是一个普通用户。因为传声筒的角色，双方的信息它都一览无余。简单描述的话，华为自身扮演了一个非常强大的中间人，所有外发的网络流量都会经过其扫描，不使用 80/443 端口的流量会全部拦截。&lt;/p>
&lt;p>&lt;strong>如何破解&lt;/strong>：由于黄区只有特定端口可以走代理服务器进出公网，对其它端口默认全封，那么严格来说网络流量就没有漏洞。我们可以手动生成密钥，在内网手动加密，再在外网手动解密，这样至少中间人看到的信息无法真正解析。加密器如何发送至内网，邮件/welink/网页都可以，但都会留下痕迹，其中通过网页直接秘密发送影响最小，痕迹最不明显。或者直接把密钥抄纸上，公司电脑保存起来，完全无法察觉，除了公司内遍布的摄像头。github 上的 ssh 贴心的支持 ssh over 443，经过测试发现也行不通，毕竟代理作为防火墙可以轻易识别这样的高风险网站。根据自身体验，公司的防火墙是基于白名单，而非黑名单，也就是即便是自建 ssh 服务器，也会被代理拦住。在浏览器中访问未知网站会有跳转页面提示“后果自负”，在终端窗口中直接就显示链接被关了。&lt;/p>
&lt;p>华为毕竟是搞网络起家，搞网络的能人异士众多，技术上几乎无法突破，恐怕唯有社会工程能突破了。&lt;/p>
&lt;h2 id="本地防火墙方式">本地防火墙方式&lt;/h2>
&lt;p>Windows 系统会安装安全应用，用户无法随意更改配置，配置由管理员统一下发。应用的网络访问权限可能是黑白名单方式，部分应用无法访问网络。vscode 的新版无法走代理通道。&lt;/p></description></item><item><title>DoS防范</title><link>https://blog.jqknono.com/blog/2024/06/28/dos%E9%98%B2%E8%8C%83/</link><pubDate>Fri, 28 Jun 2024 15:47:44 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/28/dos%E9%98%B2%E8%8C%83/</guid><description>&lt;h1 id="ddos-防范">DDoS 防范&lt;/h1>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Denial-of-service_attack">DDoS 定义&lt;/a>&lt;/p>
&lt;p>两种 DoS 攻击方式:&lt;/p>
&lt;ul>
&lt;li>使服务崩溃&lt;/li>
&lt;li>使网络拥塞&lt;/li>
&lt;/ul>
&lt;h2 id="攻击类型">攻击类型&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>攻击类型&lt;/th>
 &lt;th>攻击方式&lt;/th>
 &lt;th>应对方式&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Distributed DoS&lt;/td>
 &lt;td>多台独立 IP 的机器同时开始攻击&lt;/td>
 &lt;td>1. 降级服务 2. 黑名单 3. 关闭网络设备&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Yo-yo attack 悠悠球攻击&lt;/td>
 &lt;td>对有自动扩展资源能力的服务, 在资源减少的间隙进行攻击&lt;/td>
 &lt;td>黑名单&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Application layer attacks 应用层攻击&lt;/td>
 &lt;td>针对特定的功能或特性进行攻击，&lt;a href="https://en.wikipedia.org/wiki/LAND">LAND&lt;/a> 攻击属于这种类型&lt;/td>
 &lt;td>黑名单&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>LANS&lt;/td>
 &lt;td>这种攻击方式采用了特别构造的 TCP SYN 数据包（通常用于开启一个新的连接），使目标机器开启一个源地址与目标地址均为自身 IP 地址的空连接，持续地自我应答，消耗系统资源直至崩溃。这种攻击方法与 SYN 洪泛攻击并不相同。&lt;/td>
 &lt;td>黑名单&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Advanced persistent DoS 高级持续性 DoS&lt;/td>
 &lt;td>反侦察/目标明确/逃避反制/长时间攻击/大算力/多线程攻击&lt;/td>
 &lt;td>降级服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>HTTP slow POST DoS attack 慢 post 攻击&lt;/td>
 &lt;td>创造合法连接后以极慢的速度发送大量数据, 导致服务器资源耗尽&lt;/td>
 &lt;td>降级服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Challenge Collapsar (CC) attack 挑战 Collapsar (CC) 攻击&lt;/td>
 &lt;td>将标准合法请求频繁发送，该请求会占用较多资源，比如搜索引擎会占用大量的内存&lt;/td>
 &lt;td>降级服务，内容识别&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ICMP flood Internet 控制消息协议 (ICMP) 洪水&lt;/td>
 &lt;td>大量 ping/错误 ping 包 /Ping of death(malformed ping packet)&lt;/td>
 &lt;td>降级服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>永久拒绝服务攻击 Permanent denial-of-service attacks&lt;/td>
 &lt;td>对硬件进行攻击&lt;/td>
 &lt;td>内容识别&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>反射攻击 Reflected attack&lt;/td>
 &lt;td>向第三方发送请求，通过伪造地址，将回复引导至真正受害者&lt;/td>
 &lt;td>ddos 范畴&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Amplification 放大&lt;/td>
 &lt;td>利用一些服务作为反射器，将流量放大&lt;/td>
 &lt;td>ddos 范畴&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Mirai botnet 僵尸网络&lt;/td>
 &lt;td>利用被控制的物联网设备&lt;/td>
 &lt;td>ddos 范畴&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SACK Panic 麻袋恐慌&lt;/td>
 &lt;td>操作最大段大小和选择性确认，导致重传&lt;/td>
 &lt;td>内容识别&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Shrew attack 泼妇攻击&lt;/td>
 &lt;td>利用 TCP 重传超时机制的弱点，使用短暂的同步流量突发中断同一链路上的 TCP 连接&lt;/td>
 &lt;td>超时丢弃&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>慢读攻击 Slow Read attack&lt;/td>
 &lt;td>和慢 post 类似，发送合法请求，但读取非常慢， 以耗尽连接池，通过为 TCP Receive Window 大小通告一个非常小的数字来实现&lt;/td>
 &lt;td>超时断连，降级服务，黑名单&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SYN flood SYN 洪水&lt;/td>
 &lt;td>发送大量 TCP/SYN 数据包， 导致服务器产生半开连接&lt;/td>
 &lt;td>超时机制&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>泪珠攻击 Teardrop attacks&lt;/td>
 &lt;td>向目标机器发送带有重叠、超大有效负载的损坏 IP 片段&lt;/td>
 &lt;td>内容识别&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>TTL 过期攻击&lt;/td>
 &lt;td>当由于 TTL 过期而丢弃数据包时，路由器 CPU 必须生成并发送 ICMP 超时响应。生成许多 ​​ 这样的响应会使路由器的 CPU 过载&lt;/td>
 &lt;td>丢弃流量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>UPnP 攻击&lt;/td>
 &lt;td>基于 DNS 放大技术，但攻击机制是一个 UPnP 路由器，它将请求从一个外部源转发到另一个源，而忽略 UPnP 行为规则&lt;/td>
 &lt;td>降级服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SSDP 反射攻击&lt;/td>
 &lt;td>许多设备，包括一些住宅路由器，都在 UPnP 软件中存在漏洞，攻击者可以利用该漏洞从端口号 1900 获取对他们选择的目标地址的回复。&lt;/td>
 &lt;td>降级服务， 封禁端口&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ARP 欺骗&lt;/td>
 &lt;td>将 MAC 地址与另一台计算机或网关（如路由器）的 IP 地址相关联，导致原本用于原始真实 IP 的流量重新路由到攻击者，导致拒绝服务。&lt;/td>
 &lt;td>ddos 范畴&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="防范措施">防范措施&lt;/h2>
&lt;ol>
&lt;li>识别攻击流量
&lt;ul>
&lt;li>破坏服务
&lt;ul>
&lt;li>识别流量内容&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>拥塞服务
&lt;ul>
&lt;li>记录访问时间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>对攻击流量进行处理
&lt;ul>
&lt;li>丢弃攻击流量&lt;/li>
&lt;li>封禁攻击 ip
&lt;ul>
&lt;li>ipv4 ip 数量有限, 容易构造黑名单&lt;/li>
&lt;li>ipv6 数量较多, 不容易构造黑名单. 可以使用 ipv6 的地址段, 但有错封禁的风险&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>控制访问频率&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="开源工具">开源工具&lt;/h2>
&lt;h3 id="攻击工具">攻击工具&lt;/h3>
&lt;ul>
&lt;li>&lt;del>&lt;a href="https://github.com/palahsu/DDoS-Ripper">https://github.com/palahsu/DDoS-Ripper&lt;/a>&lt;/del>
&lt;ul>
&lt;li>162 forks, 755 stars&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/MHProDev/MHDDoS">https://github.com/MHProDev/MHDDoS&lt;/a>
&lt;ul>
&lt;li>539 forks, 2.2k stars&lt;/li>
&lt;li>MHDDoS - DDoS Attack Script With 40 Methods&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/NewEraCracker/LOIC">https://github.com/NewEraCracker/LOIC&lt;/a>
&lt;ul>
&lt;li>539 forks, 1.9k stars&lt;/li>
&lt;li>C#&lt;/li>
&lt;li>network stress tool&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/PraneethKarnena/DDoS-Scripts">https://github.com/PraneethKarnena/DDoS-Scripts&lt;/a>
&lt;ul>
&lt;li>165 forks, 192 stars&lt;/li>
&lt;li>C, Python&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/theodorecooper/awesome-ddos-tools">https://github.com/theodorecooper/awesome-ddos-tools&lt;/a>
&lt;ul>
&lt;li>46 stars&lt;/li>
&lt;li>collection of ddos tools&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="防御工具">防御工具&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/AltraMayor/gatekeeper">https://github.com/AltraMayor/gatekeeper&lt;/a>
&lt;ul>
&lt;li>GPL-3.0 License&lt;/li>
&lt;li>159 forks, 737 stars&lt;/li>
&lt;li>C, Lua&lt;/li>
&lt;li>Gatekeeper is the first open source DoS protection system.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;del>&lt;a href="https://github.com/Exa-Networks/exabgp">https://github.com/Exa-Networks/exabgp&lt;/a>&lt;/del>
&lt;ul>
&lt;li>Apache like license&lt;/li>
&lt;li>415 forks, 1.8k stars&lt;/li>
&lt;li>Python&lt;/li>
&lt;li>The BGP swiss army knife of networking&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/curiefense/curiefense">https://github.com/curiefense/curiefense&lt;/a>
&lt;ul>
&lt;li>Apache 2.0 License&lt;/li>
&lt;li>60 forks, 386 stars&lt;/li>
&lt;li>Application-layer protection&lt;/li>
&lt;li>protects sites, services, and APIs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/qssec/Hades-lite">https://github.com/qssec/Hades-lite&lt;/a>
&lt;ul>
&lt;li>GPL-3.0 License&lt;/li>
&lt;li>24 forks, 72 stars&lt;/li>
&lt;li>C&lt;/li>
&lt;li>内核级 Anti-ddos 的驱动程序&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/snort3/snort3">https://github.com/snort3/snort3&lt;/a>
&lt;ul>
&lt;li>GPL-2.0 License&lt;/li>
&lt;li>372 forks, 1.4k stars&lt;/li>
&lt;li>next generation Snort IPS (Intrusion Prevention System)&lt;/li>
&lt;li>C++&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="流量监控">流量监控&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/netdata/netdata">https://github.com/netdata/netdata&lt;/a>
&lt;ul>
&lt;li>GPL-3.0 License&lt;/li>
&lt;li>5.2k forks, 58.3k stars&lt;/li>
&lt;li>C&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/giampaolo/psutil">https://github.com/giampaolo/psutil&lt;/a>
&lt;ul>
&lt;li>BSD-3-Clause License&lt;/li>
&lt;li>1.2 forks, 8.2k stars&lt;/li>
&lt;li>Python, C&lt;/li>
&lt;li>Cross-platform lib for process and system monitoring in Python, also network monitoring&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/iptraf-ng/iptraf-ng">https://github.com/iptraf-ng/iptraf-ng&lt;/a>
&lt;ul>
&lt;li>GPL-2.0 License&lt;/li>
&lt;li>22 forks, 119 stars&lt;/li>
&lt;li>C&lt;/li>
&lt;li>IPTraf-ng is a console-based network monitoring program for Linux that displays information about IP traffic.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>ingress-nginx与nginx ingress不是一个东西</title><link>https://blog.jqknono.com/blog/2024/06/18/ingress-nginx%E4%B8%8Enginx-ingress%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%9C%E8%A5%BF/</link><pubDate>Tue, 18 Jun 2024 16:39:06 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/18/ingress-nginx%E4%B8%8Enginx-ingress%E4%B8%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%9C%E8%A5%BF/</guid><description>&lt;p>看了两周的文档才发现 &lt;code>Ingress-Nginx&lt;/code> 和 &lt;code>Nginx Ingress&lt;/code> 不是同一个东西, 两者的功能和实现方式都不一样. 并且还有指导迁移的文档.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.nginx.com/nginx-ingress-controller/installation/ingress-nginx/">从 Ingress-NGINX Controller 迁移到 NGINX Ingress Controller&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.nginx.com/nginx-ingress-controller/">NGINX Ingress Controller&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.github.io/ingress-nginx/">Ingress-NGINX&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Ingress-NGINX&lt;/code> 是社区版, 参与讨论的人数更多, 搜索到的答案更多. &lt;code>NGINX Ingress&lt;/code> 是商业版, 功能更多, 但是社区参与度更低.&lt;/p>
&lt;p>根据 &lt;a href="https://docs.nginx.com/mesh/tutorials/kic/deploy-with-kic/">Deploy with NGINX Ingress Controller - Overview&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>NGINX Ingress Controller can be used for free with NGINX Open Source. Paying customers have access to NGINX Ingress Controller with NGINX Plus. To deploy NGINX Ingress Controller with NGINX Service Mesh, you must use either:&lt;/p></description></item><item><title>自建K8S集群使用阿里云分布存储</title><link>https://blog.jqknono.com/blog/2024/06/14/%E8%87%AA%E5%BB%BAk8s%E9%9B%86%E7%BE%A4%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%86%E5%B8%83%E5%AD%98%E5%82%A8/</link><pubDate>Fri, 14 Jun 2024 12:53:46 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/14/%E8%87%AA%E5%BB%BAk8s%E9%9B%86%E7%BE%A4%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%86%E5%B8%83%E5%AD%98%E5%82%A8/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>本文写作于 2024.06.14, 介绍如何在阿里云的自建集群中使用阿里云分布存储, 最后附上文档连接, 其中阿里云的官方文档是中文, 但阿里云存储插件安装在 github 上, 目前只有英文文档, 建议有条件的读者尽量阅读原文.&lt;/p>
&lt;h2 id="存储插件安装">存储插件安装&lt;/h2>
&lt;ol>
&lt;li>创建自定义权限策略: &lt;a href="https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/ram-policies/disk.json">https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/ram-policies/disk.json&lt;/a>&lt;/li>
&lt;li>创建 RAM 角色, 授予自定义权限策略, 暂存&lt;code>accesskey&lt;/code> 和 &lt;code>secret&lt;/code>
&lt;ol>
&lt;li>&lt;code>kubectl create secret -n kube-system generic csi-access-key --from-literal=id='{id}' --from-literal=secret='{secret}'&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>安装 CSI 驱动, 没有 helm chart, 只能本地安装(20240613).
&lt;ol>
&lt;li>&lt;code>git clone https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver.git&lt;/code>&lt;/li>
&lt;li>&lt;code>cd alibaba-cloud-csi-driver/deploy&lt;/code>&lt;/li>
&lt;li>如果是安装在阿里云的 ecs 上的自建集群, 可直接执行下一句, &lt;strong>如果不是, 请自行阅读&lt;/strong>: &lt;a href="https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/install.md">https://github.com/kubernetes-sigs/alibaba-cloud-csi-driver/blob/master/docs/install.md&lt;/a>&lt;/li>
&lt;li>&lt;code>helm upgrade --install alibaba-cloud-csi-driver ./chart --values chart/values-ecs.yaml --namespace kube-system&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>确认, &lt;code>watch kubectl get pods -n kube-system -l app=csi-plugin&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="存储类型选型参考">存储类型选型参考&lt;/h2>
&lt;ul>
&lt;li>ECS 云盘创建的最小容量是 20GB, IOPS 3000, 这个容量是比较大的, 并不太划算.
&lt;ul>
&lt;li>云盘动态存储卷
&lt;ul>
&lt;li>官方文档:
&lt;ul>
&lt;li>云盘不支持跨可用区使用，为非共享存储，且只能同时被一个 Pod 挂载。(实测可以被同一个 deployment 的多个 pod 挂载)&lt;/li>
&lt;li>云盘类型和 ECS 类型需要匹配才可以挂载，否则会挂载失败。关于云盘类型和 ECS 类型的匹配关系，请参见&lt;a href="https://help.aliyun.com/zh/ecs/user-guide/overview-of-instance-families#concept-sx4-lxv-tdb">实例规格族&lt;/a>。&lt;/li>
&lt;li>在应用部署时，通过 StorageClass 自动创建 PV 购买云盘。如果您已经购买云盘，推荐使用云盘静态存储卷。&lt;/li>
&lt;li>申请云盘的大小，不能超出云盘的单盘容量范围。&lt;/li>
&lt;li>当 Pod 重建时，会重新挂载原云盘。若由于其他限制无法调度到原可用区，则 Pod 将会处于 Pending 状态。&lt;/li>
&lt;li>动态创建的云盘为按量付费的云盘&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其它测试总结:
&lt;ul>
&lt;li>虽然云盘可以被多 pod 挂载, 但只有一个 pod 可以读写, 其他 pod 不能读写. 因此 pvc 中&lt;code>accessModes&lt;/code>只能设置为&lt;code>ReadWriteOnce&lt;/code>, 修改不会得到正确结果.&lt;/li>
&lt;li>如果 StorageClass 的&lt;code>reclaimPolicy&lt;/code>设置为&lt;code>Delete&lt;/code>，则删除 PVC 时，云盘也可以被自动删除。&lt;/li>
&lt;li>如果 StorageClass 的&lt;code>reclaimPolicy&lt;/code>设置为&lt;code>Retain&lt;/code>，则删除 PVC 时，云盘不会被自动删除，需要手动在集群和阿里云控制台删除。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>难以找到合适使用场景.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>云盘静态存储卷
&lt;ul>
&lt;li>官方文档:
&lt;ul>
&lt;li>手动创建 PV 及 PVC&lt;/li>
&lt;li>云盘不支持跨可用区使用，为非共享存储，且只能同时被一个 Pod 挂载。&lt;/li>
&lt;li>云盘类型和 ECS 类型需要匹配才可以挂载，否则会挂载失败。&lt;/li>
&lt;li>可以选择与集群属于相同地域和可用区下处于待挂载状态的云盘。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NAS 操作延时较大, 表现最好 2ms, 深度存储 10ms, 按量计费, 读写性能相对于对象存储 OSS 高&lt;/li>
&lt;li>OSS 存储卷, &lt;a href="https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/oss-volume-overview-1?spm=a2c4g.11186623.0.0.43166a351NbtvU">https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/oss-volume-overview-1?spm=a2c4g.11186623.0.0.43166a351NbtvU&lt;/a>
&lt;ul>
&lt;li>OSS 为共享存储，可以同时为多个 Pod 提供共享存储服务。&lt;/li>
&lt;li>(20240613)目前支持 CentOS、Alibaba Cloud Linux、ContainerOS 和龙蜥操作系统。&lt;/li>
&lt;li>使用数据卷时，每个应用使用独立的 PV 名称。&lt;/li>
&lt;li>OSS 数据卷是使用 ossfs 文件进行挂载的 FUSE 文件系统。
&lt;ul>
&lt;li>适合于读文件场景。例如，读配置文件、视频、图片文件等场景。&lt;/li>
&lt;li>不适用于写文件的应用场景。如需写入文件，建议您使用 SDK 实现写操作或者使用 NAS 存储卷服务。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ossfs 可以通过调整配置参数的方式，优化其在缓存、权限等方面的表现&lt;/li>
&lt;li>ossfs 使用限制
&lt;ul>
&lt;li>随机或者追加写文件操作将导致所有文件重写。&lt;/li>
&lt;li>因为需要远程访问 OSS 服务器，list directory 等元数据操作的性能较差。&lt;/li>
&lt;li>文件、文件夹的 rename 操作不是原子的。&lt;/li>
&lt;li>多个客户端挂载同一个 OSS Bucket 时，依赖用户自行协调各个客户端的行为，例如，避免多个客户端写入同一个文件等。&lt;/li>
&lt;li>不支持硬链接（Hard Link）。&lt;/li>
&lt;li>CSI plugin 为 v1.20.7 以下的版本时，仅检测本地修改，而不能检测其他客户端或工具的外部修改。&lt;/li>
&lt;li>为避免系统的负载升高，请勿在高并发读写的场景中使用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果是混合集群(部分节点不属于阿里云), 则只能使用 NAS 和 OSS 静态卷.&lt;/li>
&lt;li>云盘, nas 和 oss 都有其区域限制.&lt;/li>
&lt;/ul>
&lt;p>总结, 云盘以硬盘整体的形式申请和挂载, 不便共享. OSS 操作颗粒度到文件, 高并发读写存在性能问题, 并且支持系统有限.&lt;/p></description></item><item><title>利用DNS服务平滑切换网络服务</title><link>https://blog.jqknono.com/blog/2024/06/12/%E5%88%A9%E7%94%A8dns%E6%9C%8D%E5%8A%A1%E5%B9%B3%E6%BB%91%E5%88%87%E6%8D%A2%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/</link><pubDate>Wed, 12 Jun 2024 19:00:34 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/12/%E5%88%A9%E7%94%A8dns%E6%9C%8D%E5%8A%A1%E5%B9%B3%E6%BB%91%E5%88%87%E6%8D%A2%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/</guid><description>&lt;p>假设服务域名为&lt;code>example.domain&lt;/code>, 原服务器 IP 地址为&lt;code>A&lt;/code>, 由于服务器迁移或 IP 更换, 新服务器 IP 地址为&lt;code>B&lt;/code>, 为了保证用户无感知, 可以通过 DNS 服务平滑切换网络服务.&lt;/p>
&lt;ol>
&lt;li>原服务状态, &lt;code>example.domain&lt;/code> 解析到 IP 地址&lt;code>A&lt;/code>&lt;/li>
&lt;li>过渡状态, &lt;code>example.domain&lt;/code> 解析到 IP 地址&lt;code>A&lt;/code> 和&lt;code>B&lt;/code>&lt;/li>
&lt;li>新服务状态, &lt;code>example.domain&lt;/code> 解析到 IP 地址&lt;code>B&lt;/code>, 移除 IP 地址&lt;code>A&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>说明: 当用户获得两个解析地址时, 客户端会选择其中一个地址进行连接, 当连接失败时, 会尝试其它地址, 以此保证服务的可用性.&lt;/p>
&lt;p>由于 DNS 解析存在缓存, 为了保证平滑切换, 需要在过渡状态保持一段时间, 以确保所有缓存失效.&lt;/p>
&lt;p>我这里需要迁移的是 dns 服务, 可以在过渡状态中设置&lt;code>DNS重写&lt;/code>, 加快迁移过程.&lt;/p>
&lt;p>A 服务重写规则:&lt;/p>
&lt;p>&lt;img alt="A服务重写" src="https://s2.loli.net/2024/06/12/xRFMB1PTIcvUQHr.png">&lt;/p>
&lt;p>B 服务重写规则:&lt;/p>
&lt;p>&lt;img alt="B服务重写" src="https://s2.loli.net/2024/06/12/DILEi9jJoVYeuT2.png">&lt;/p>
&lt;p>原迁移过程拓展为:&lt;/p>
&lt;ol>
&lt;li>原服务状态, &lt;code>example.domain&lt;/code> 解析到 IP 地址&lt;code>A&lt;/code>&lt;/li>
&lt;li>过渡状态, &lt;code>example.domain&lt;/code> 在&lt;code>dns A&lt;/code>服务中重写到&lt;code>A&lt;/code>和&lt;code>B&lt;/code>, 在&lt;code>dns B&lt;/code>服务中重写到&lt;code>B&lt;/code>&lt;/li>
&lt;li>新服务状态, &lt;code>example.domain&lt;/code> 解析到 IP 地址&lt;code>B&lt;/code>, 移除 IP 地址&lt;code>A&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>当用户仍在使用&lt;code>dns A&lt;/code>服务时, 可以获得两个地址, 有一半的概率会选择&lt;code>dns A&lt;/code>服务.&lt;br>
另外一半的概率会切换到&lt;code>dns B&lt;/code>服务, &lt;code>dns B&lt;/code>服务故障时切换回&lt;code>dns A&lt;/code>. &lt;code>dns B&lt;/code>服务未故障时, 将只会获得一个地址, 因而用户会停留在&lt;code>dns B&lt;/code>服务中.&lt;br>
这样我们可以逐步的减少&lt;code>dns A&lt;/code>服务的资源消耗, 而不是直接停止, 实现更平滑的迁移.&lt;/p></description></item><item><title>卷的分类和方法论</title><link>https://blog.jqknono.com/blog/2024/06/05/%E5%8D%B7%E7%9A%84%E5%88%86%E7%B1%BB%E5%92%8C%E6%96%B9%E6%B3%95%E8%AE%BA/</link><pubDate>Wed, 05 Jun 2024 17:17:37 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/05/%E5%8D%B7%E7%9A%84%E5%88%86%E7%B1%BB%E5%92%8C%E6%96%B9%E6%B3%95%E8%AE%BA/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/volumes/">卷&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/">持久卷&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/projected-volumes/">投射卷&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/ephemeral-volumes/">临时卷&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/storage-classes/">存储类&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/dynamic-provisioning/">动态卷制备&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/volume-snapshots/">卷快照&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/volume-snapshot-classes/">卷快照类&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/storage/volume-pvc-datasource/">卷克隆&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>亚马逊商店社区规则</title><link>https://blog.jqknono.com/blog/2023/11/13/%E4%BA%9A%E9%A9%AC%E9%80%8A%E5%95%86%E5%BA%97%E7%A4%BE%E5%8C%BA%E8%A7%84%E5%88%99/</link><pubDate>Mon, 13 Nov 2023 14:15:31 +0800</pubDate><guid>https://blog.jqknono.com/blog/2023/11/13/%E4%BA%9A%E9%A9%AC%E9%80%8A%E5%95%86%E5%BA%97%E7%A4%BE%E5%8C%BA%E8%A7%84%E5%88%99/</guid><description>&lt;h1 id="亚马逊商店社区规则">亚马逊商店社区规则&lt;/h1>
&lt;article role="article" class="help-content" id="GUID-E6787856-0944-40BE-9C1E-CA924C4ED52D" aria-labelledby="GUID-E6787856-0944-40BE-9C1E-CA924C4ED52D__GUID-2C1DF364-8FA3-4387-BCDB-2A63B7C51B64" style="box-sizing: border-box; display: block;">
&lt;h2 id="社区准则">社区准则&lt;/h2>
&lt;p>社区准则的目的是为亚马逊社区保持有帮助、相关、有意义和适当的信息&lt;/p>
&lt;section class="a-section" id="GUID-E6787856-0944-40BE-9C1E-CA924C4ED52D__SECTION_2824A0EEA8F64F6EB32684F72FC6E47B" style="box-sizing: border-box; display: block; margin-bottom: 22px;">
&lt;h2 id="什么是亚马逊社区">什么是亚马逊社区？&lt;/h2>
&lt;p>社区是与其他用户分享您的想法和经历（正面和负面）的地方。以下准则解释了社区允许和不允许发布的内容。&lt;/p>
&lt;p>使用社区功能，即表示您已同意我们的&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?ref_=hp_left_v4_sib&amp;nodeId=G201909000">使用条件&lt;/a>。并将遵守不时修订的社区准则。社区功能包括：&lt;/p>
&lt;ul>
&lt;li>评论（包括星级）&lt;/li>
&lt;li>问题和答案&lt;/li>
&lt;li>有帮助的投票&lt;/li>
&lt;li>心愿和礼品清单&lt;/li>
&lt;li>个人资料页面&lt;/li>
&lt;li>滥用报告&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_2824A0EEA8F64F6EB32684F72FC6E47B">什么是亚马逊社区?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_A993291070FB4A6CB3DCF8A859FFFB02">社区准则适用于什么？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_E7E0A5F4DA4F41FC8ABD608648E3F97C">谁可以参加？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_D3312F3190B64B00952DDDB40353BD0D">什么不允许？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_2D1C184475794BDEB3877E462DFA3C33">关于定价、供货情况的评论&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_AFC665B1386B48BBBCDC22AAAE3D071C">以不受支持的语言编写的内容&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_8F0F95A8B6E14E569C61093EDDBF46F9">重复的文字、垃圾邮件、用符号创建的图片&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_B7190C5F17A342078B6E4664F4CCD242">私人信息&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_DE823C7FDD6B471BAA5105C223B3DA68">亵渎、骚扰&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_F6DE7F1A03114D098280D41DCBCDE440">仇恨言论&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_67933B47729242418B030952A9EC9C6F">色情内容&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_20246F2449034141934C7588772D47FC">外部链接&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_4FB92607938A4485A5CF53AA87F1C217">广告促销内容&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_53B5DEB418C84B3F9BDCCC7E1A065710">利益冲突&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_CFFC92ACA21E4172B8F82555D893489B">煽动&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_47E2E7943ED34B7CAF073D2673722990">抄袭、侵权、冒名顶替&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_6E9CD56E7C19464386DBB4532D49C9DF">非法活动&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_1A34DB899A564FFAAE722B30BC943EDC">违规行为的后果&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.cn/gp/help/customer/display.html?nodeId=#GUID-49DB245C-095A-4D7A-9247-41C4491A2D42__SECTION_F10DD42B52F0419EAD13F152FF7F5B63">如何举报违规行为&lt;/a>&lt;/li>
&lt;/ul>
&lt;/section>
&lt;section class="a-section" id="GUID-E6787856-0944-40BE-9C1E-CA924C4ED52D__SECTION_A993291070FB4A6CB3DCF8A859FFFB02" style="box-sizing: border-box; display: block; margin-bottom: 22px;">
&lt;h2 id="准则适用于什么">准则适用于什么&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>您的社区行为，包括：&lt;/p>
&lt;ul>
&lt;li>分享文字、照片、视频、链接&lt;/li>
&lt;li>将评论标记为 &amp;ldquo;有帮助的&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>与其他社区成员以及亚马逊的互动&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>该指南不适用于在亚马逊上销售的商品或服务中的内容（例如：图书内容）。&lt;/p>
&lt;/section>
&lt;section class="a-section" id="GUID-E6787856-0944-40BE-9C1E-CA924C4ED52D__SECTION_E7E0A5F4DA4F41FC8ABD608648E3F97C" style="box-sizing: border-box; display: block; margin-bottom: 22px;">
&lt;h2 id="谁可以参加">谁可以参加&lt;/h2>
&lt;p>如果您有亚马逊账户，则可以：&lt;/p>
&lt;ul>
&lt;li>创建和更新购物清单、愿望清单和礼品清单&lt;/li>
&lt;li>更新您的个人资料页面&lt;/li>
&lt;li>参加数码和设备论坛&lt;/li>
&lt;/ul>
&lt;p>要执行以下任何操作，您需要在过去 12 个月内使用有效的信用卡或借记卡在 Amazon.cn 上花费至少 20 元人民币：&lt;/p>
&lt;ul>
&lt;li>发表评论（包括星级）&lt;/li>
&lt;li>回答买家的问题&lt;/li>
&lt;li>提交有帮助的投票&lt;/li>
&lt;li>创建心愿单&lt;/li>
&lt;li>关注其他用户&lt;/li>
&lt;/ul>
&lt;p>促销折扣不计入 20 元人民币的最低消费要求。&lt;/p></description></item><item><title>OKR的陷阱与助力</title><link>https://blog.jqknono.com/blog/2023/06/27/okr%E7%9A%84%E9%99%B7%E9%98%B1%E4%B8%8E%E5%8A%A9%E5%8A%9B/</link><pubDate>Tue, 27 Jun 2023 15:33:30 +0800</pubDate><guid>https://blog.jqknono.com/blog/2023/06/27/okr%E7%9A%84%E9%99%B7%E9%98%B1%E4%B8%8E%E5%8A%A9%E5%8A%9B/</guid><description>&lt;h1 id="okr-的陷阱与助力">OKR 的陷阱与助力&lt;/h1>
&lt;blockquote>
&lt;p>2009 年，哈佛商学院发表了一篇名为《疯狂目标》（Goals Gone Wild）的论文。文章用一系列例子解释了“过度追求目标的破坏性”：福特平托（Pinto）汽车油箱爆炸、西尔斯汽车维修中心的漫天要价、安然公司疯狂膨胀的销售目标，以及 1996 年造成 8 人死亡的珠穆朗玛峰灾难。作者提醒说：目标就像是“一种需要谨慎使用和严密监管的处方药”。作者甚至还提出这样的警告：“由于聚焦过度、出现不道德行为、冒险行为增多，以及合作意愿和工作积极性下降等原因，目标会在组织内部引发系统性问题。”目标设定的坏处可能会抵消其所带来的好处，这就是这篇论文的观点。&lt;/p>
&lt;/blockquote>
&lt;h2 id="读这就是-okr">读&amp;quot;这就是 OKR&amp;quot;&lt;/h2>
&lt;p>在前公司实践过 3 年 OKR, 恰逢新公司现在也要转向 OKR, 老板推荐了这本书&lt;a href="https://yd.qq.com/web/reader/72332cb0716aecb27234506">这就是 OKR&lt;/a>.
花了两周时间才断断续续看完, 简单且主观的分享一点未深思的观后感.&lt;/p>
&lt;p>OKR, 原文 objectives and key results, 直译是&lt;strong>目标和关键性结果&lt;/strong>.&lt;/p>
&lt;p>按照谷歌的 OKR 模式, 目标可以分为两种, 承诺型目标, 和愿景型目标. 对待两种类型目标会有不同评价方式. 目标的设立需要仔细思考, 可以参考原书最后一章资源 1 &lt;em>谷歌公司的内部 OKR 模板&lt;/em> 或者 这个&lt;a href="https://www.whatmatters.com/resources/google-okr-playbook">链接&lt;/a>, 对照阅读.&lt;/p>
&lt;p>对关键性结果的设立也需要好好思考, 可以把这个词理解为一个里程碑, 每一次前进时, 朝着最近的里程碑前进, 最终达到目标. 这个里程碑是建议能用数字衡量的, 以此判断自己达到目标与否, 分析产生差距原因.&lt;/p>
&lt;p>由于 OKR 里的关键性结果仍然建议能用数字衡量, 那么它和 KPI 的区别在哪. KPI 是 key performance indicator, 关键绩效指标. 很明显, KPI 没有明确的包含&lt;strong>目标&lt;/strong>.&lt;br>
不考虑目标, 盲目的下发数字任务对企业产生伤害有许多的案例, 书中会举很多例子.&lt;/p></description></item><item><title>Windows桥接时的IPv6问题</title><link>https://blog.jqknono.com/blog/2023/05/06/windows%E6%A1%A5%E6%8E%A5%E6%97%B6%E7%9A%84ipv6%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 06 May 2023 11:47:48 +0800</pubDate><guid>https://blog.jqknono.com/blog/2023/05/06/windows%E6%A1%A5%E6%8E%A5%E6%97%B6%E7%9A%84ipv6%E9%97%AE%E9%A2%98/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> Windows桥接时的IPv6问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> WindowsServer 桥接时的 IPv6 问题&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>现在很多用作软路由的机器硬件配置较好, 仅安装一个 openwrt 大材小用, 基本都会自己折腾一下去榨干它的价值. Linux 的难点在于命令行, 其实命令行用的多的能感受到这也是 linux 的容易之处.&lt;/p>
&lt;p>外网访问需求基本爱折腾的人都会遇到, 考虑到 linux 不太有专业的人维护, 安全补丁更新较慢, 衡量后会有部分人决定使用 Windows Server 系统. 原本 openwrt 上的软件则使用 wsl 加 docker 方式运行, 所有需求都可以同样满足.&lt;/p>
&lt;p>在 Windows(Server)桥接多个网络时, 会出现 IPv6 地址无法更新的问题, 但是 IPv4 可以正常访问. 由于 IPv6 的地址是运营商自动分配的, 无法手动修改, 所以需要修改桥接的网络配置.&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://forums.tomshardware.com/threads/network-bridge-for-ipv6.3118590/">Network Bridge for ipv6&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Generally, bridging is purely layer 2 so no IP address is required, so just like an unmanaged switch should be iPv6 capable.&lt;/p></description></item><item><title>vs-remote-debug</title><link>https://blog.jqknono.com/blog/2022/11/13/vs-remote-debug/</link><pubDate>Sun, 13 Nov 2022 14:17:28 +0800</pubDate><guid>https://blog.jqknono.com/blog/2022/11/13/vs-remote-debug/</guid><description>&lt;h1 id="remote-debug-with-visual-studio">remote debug with visual studio&lt;/h1>
&lt;p>远程调试 C++:
&lt;a href="https://docs.microsoft.com/en-us/visualstudio/debugger/remote-debugging-cpp?view=vs-2019">https://docs.microsoft.com/en-us/visualstudio/debugger/remote-debugging-cpp?view=vs-2019&lt;/a>&lt;/p>
&lt;p>Attach 调试:
&lt;a href="https://docs.microsoft.com/en-us/visualstudio/debugger/attach-to-running-processes-with-the-visual-studio-debugger?view=vs-2019">https://docs.microsoft.com/en-us/visualstudio/debugger/attach-to-running-processes-with-the-visual-studio-debugger?view=vs-2019&lt;/a>&lt;/p>
&lt;p>配置联调程序为 service:
&lt;a href="https://docs.microsoft.com/en-us/visualstudio/debugger/remote-debugging?view=vs-2019#bkmk_configureService">https://docs.microsoft.com/en-us/visualstudio/debugger/remote-debugging?view=vs-2019#bkmk_configureService&lt;/a>&lt;/p>
&lt;p>如何配置启动参数:
&lt;a href="https://stackoverflow.com/questions/6740422/visual-studio-remote-debugging-a-service">https://stackoverflow.com/questions/6740422/visual-studio-remote-debugging-a-service&lt;/a>&lt;/p>
&lt;p>可用参数:
&lt;a href="https://social.msdn.microsoft.com/Forums/vstudio/en-US/174c2039-b316-455a-800e-18c0d93b74bc/visual-studio-2010-remote-debugger-settings-dont-persist?forum=vsdebug">https://social.msdn.microsoft.com/Forums/vstudio/en-US/174c2039-b316-455a-800e-18c0d93b74bc/visual-studio-2010-remote-debugger-settings-dont-persist?forum=vsdebug&lt;/a>&lt;/p>
&lt;p>自己添加任务&lt;/p>
&lt;p>&lt;code>&amp;quot;C:\Program Files\Microsoft Visual Studio 16.0\Common7\IDE\Remote Debugger\x64\msvsmon.exe&amp;quot;&lt;/code>&lt;/p>
&lt;p>启动参数&lt;/p>
&lt;p>&lt;code>/noauth /anyuser /port:4045 /nosecuritywarn /timeout 360000&lt;/code>&lt;/p>
&lt;p>开发机连接: &lt;code>test0.example.com:4045&lt;/code>&lt;/p>
&lt;p>远程访问(需提前开启开发者模式): &lt;code>http://test0.example.com:50080/&lt;/code>&lt;/p></description></item><item><title>设备的分类</title><link>https://blog.jqknono.com/docs/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1/%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E7%9A%84%E5%88%86%E7%B1%BB/</link><pubDate>Tue, 04 Jun 2024 12:26:28 +0800</pubDate><guid>https://blog.jqknono.com/docs/%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1/%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E7%9A%84%E5%88%86%E7%B1%BB/</guid><description>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 设备的分类&lt;/li>
&lt;/ul>
&lt;p>网络流行的 NAS, 软路由, Mac mini, 路由器等统一抽象为设备, 不需要关注其命名和形态, 主要应关注&lt;strong>处理器&lt;/strong>, &lt;strong>存储&lt;/strong>, &lt;strong>网络&lt;/strong>, &lt;strong>应用生态&lt;/strong>这四个方面.&lt;/p>
&lt;p>处理器首要关注的是架构, 一般使用的是&lt;strong>x86&lt;/strong>, &lt;strong>ARM&lt;/strong>, 其它架构不建议非专业人士购买, 较贫乏的生态会增加学习和使用的难度.&lt;/p>
&lt;p>你会看到有些人评价&lt;strong>ARM&lt;/strong>通常用于低功耗设备, 适合家用, &lt;strong>x86&lt;/strong>通常用于高性能设备, 适合企业. 但本文写作的 2024 年的时间点, 这种论调早已过时, 我们还是要基于生态去考虑, 目前&lt;strong>ARM&lt;/strong>生态已非常丰富, 并且具有更好的性价比, 值得大家考虑. 建议非专业人士可以直接选择&lt;strong>ARM&lt;/strong>架构的设备, 以阿里云为例&lt;strong>ARM&lt;/strong>设备的价格仅为&lt;strong>x86&lt;/strong>设备的一半, 性能也足够应付家用需求. 专业人士可以根据自己的需求选择&lt;strong>x86&lt;/strong>架构的设备.&lt;/p></description></item><item><title>宝塔docker源加速</title><link>https://blog.jqknono.com/blog/2024/06/03/%E5%AE%9D%E5%A1%94docker%E6%BA%90%E5%8A%A0%E9%80%9F/</link><pubDate>Mon, 03 Jun 2024 18:31:48 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/06/03/%E5%AE%9D%E5%A1%94docker%E6%BA%90%E5%8A%A0%E9%80%9F/</guid><description>&lt;p>&lt;img src="https://s2.loli.net/2024/06/03/BT8s1ldrF7wyUYP.png">&lt;/p>
&lt;p>宝塔 8.2 及以下版本设置 docker 源加速无效, 并且界面上手动设置配置文件内容无效.&lt;/p>
&lt;p>这是由于 docker 配置文件位于&lt;code>/etc/docker/daemon.json&lt;/code>, 该文件及其文件夹默认不存在, 直接修改文件不会保存成功.&lt;/p>
&lt;p>只需要执行&lt;code>mkdir /etc/docker&lt;/code>, 然后再在界面上修改加速配置即可生效.&lt;/p></description></item><item><title>linux网络问题定位</title><link>https://blog.jqknono.com/blog/2024/05/28/linux%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/</link><pubDate>Tue, 28 May 2024 16:39:14 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/28/linux%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D/</guid><description>&lt;h2 id="排障工具">排障工具&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>工具&lt;/th>
 &lt;th>说明&lt;/th>
 &lt;th>用法&lt;/th>
 &lt;th>说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ping&lt;/td>
 &lt;td>测试网络连通性&lt;/td>
 &lt;td>ping baidu.com&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>traceroute&lt;/td>
 &lt;td>路由跟踪&lt;/td>
 &lt;td>traceroute ip&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>route&lt;/td>
 &lt;td>路由表&lt;/td>
 &lt;td>route -n&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netstat&lt;/td>
 &lt;td>网络连接&lt;/td>
 &lt;td>netstat -ano&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nslookup&lt;/td>
 &lt;td>DNS 解析&lt;/td>
 &lt;td>nslookup baidu.com&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ifconfig&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>ifconfig&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>arp&lt;/td>
 &lt;td>ARP 缓存&lt;/td>
 &lt;td>arp -a&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nbtstat&lt;/td>
 &lt;td>NetBIOS&lt;/td>
 &lt;td>nbtstat -n&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netsh&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>netsh&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>net&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>net&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpdump&lt;/td>
 &lt;td>网络抓包&lt;/td>
 &lt;td>tcpdump&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>wireshark&lt;/td>
 &lt;td>网络抓包&lt;/td>
 &lt;td>wireshark&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ip&lt;/td>
 &lt;td>网络配置&lt;/td>
 &lt;td>ip addr show&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ss&lt;/td>
 &lt;td>网络连接&lt;/td>
 &lt;td>ss -tunlp&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netstat&lt;/td>
 &lt;td>查看网络连接状态&lt;/td>
 &lt;td>netstat -anp&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpdump&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpdump -i eth0 -nn -s 0 -c 1000 -w /tmp/tcpdump.pcap&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iptables&lt;/td>
 &lt;td>防火墙&lt;/td>
 &lt;td>iptables -L -n -v -t nat -t mangle -t filter&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ss&lt;/td>
 &lt;td>netstat 的替代品&lt;/td>
 &lt;td>ss -anp&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ifconfig&lt;/td>
 &lt;td>查看网卡信息&lt;/td>
 &lt;td>ifconfig eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ip&lt;/td>
 &lt;td>查看网卡信息&lt;/td>
 &lt;td>ip addr show eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>route&lt;/td>
 &lt;td>查看路由表&lt;/td>
 &lt;td>route -n&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>traceroute&lt;/td>
 &lt;td>查看路由跳数&lt;/td>
 &lt;td>traceroute &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ping&lt;/td>
 &lt;td>测试网络连通性&lt;/td>
 &lt;td>ping &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>telnet&lt;/td>
 &lt;td>测试端口连通性&lt;/td>
 &lt;td>telnet &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a> 80&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nslookup&lt;/td>
 &lt;td>域名解析&lt;/td>
 &lt;td>nslookup &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dig&lt;/td>
 &lt;td>域名解析&lt;/td>
 &lt;td>dig &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>arp&lt;/td>
 &lt;td>查看 arp 缓存&lt;/td>
 &lt;td>arp -a&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netcat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>nc -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nmap&lt;/td>
 &lt;td>端口扫描工具&lt;/td>
 &lt;td>nmap -sT -p 80 &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>mtr&lt;/td>
 &lt;td>网络连通性测试工具&lt;/td>
 &lt;td>mtr &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iperf&lt;/td>
 &lt;td>网络性能测试工具&lt;/td>
 &lt;td>iperf -s -p 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iptraf&lt;/td>
 &lt;td>网络流量监控工具&lt;/td>
 &lt;td>iptraf -i eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ipcalc&lt;/td>
 &lt;td>IP 地址计算工具&lt;/td>
 &lt;td>ipcalc&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iftop&lt;/td>
 &lt;td>网络流量监控工具&lt;/td>
 &lt;td>iftop -i eth0&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>iostat&lt;/td>
 &lt;td>磁盘 IO 监控工具&lt;/td>
 &lt;td>iostat -x 1 10&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>vmstat&lt;/td>
 &lt;td>虚拟内存监控工具&lt;/td>
 &lt;td>vmstat 1 10&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>sar&lt;/td>
 &lt;td>系统性能监控工具&lt;/td>
 &lt;td>sar -n DEV 1 10&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>lsof&lt;/td>
 &lt;td>查看文件打开情况&lt;/td>
 &lt;td>lsof -i:80&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>strace&lt;/td>
 &lt;td>跟踪系统调用&lt;/td>
 &lt;td>strace -p 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpflow&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpflow -i eth0 -c -C -p -o /tmp/tcpflow&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpick&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpick -i eth0 -C -p -o /tmp/tcpick&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcptrace&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcptrace -i eth0 -C -p -o /tmp/tcptrace&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpslice&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpslice -i eth0 -C -p -o /tmp/tcpslice&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpstat&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpstat -i eth0 -C -p -o /tmp/tcpstat&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tcpdump&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tcpdump -i eth0 -C -p -o /tmp/tcpdump&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tshark&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>tshark -i eth0 -C -p -o /tmp/tshark&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>wireshark&lt;/td>
 &lt;td>抓包工具&lt;/td>
 &lt;td>wireshark -i eth0 -C -p -o /tmp/wireshark&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>socat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>socat -d -d TCP-LISTEN:1234,fork TCP:www.baidu.com:80&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ncat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>ncat -l 1234 -c &amp;rsquo;ncat &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a> 80'&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netperf&lt;/td>
 &lt;td>网络性能测试工具&lt;/td>
 &lt;td>netperf -H &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a> -l 60 -t TCP_STREAM&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netcat&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>netcat -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nc&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>nc -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netpipe&lt;/td>
 &lt;td>网络性能测试工具&lt;/td>
 &lt;td>netpipe -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>netkit&lt;/td>
 &lt;td>网络调试工具&lt;/td>
 &lt;td>netkit -l 1234&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>bridge&lt;/td>
 &lt;td>网桥工具&lt;/td>
 &lt;td>bridge -s&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>如何在集群的负载均衡过程保留请求源IP</title><link>https://blog.jqknono.com/blog/2024/05/27/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%9B%86%E7%BE%A4%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E8%BF%87%E7%A8%8B%E4%BF%9D%E7%95%99%E8%AF%B7%E6%B1%82%E6%BA%90ip/</link><pubDate>Mon, 27 May 2024 11:52:22 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/27/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%9B%86%E7%BE%A4%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E8%BF%87%E7%A8%8B%E4%BF%9D%E7%95%99%E8%AF%B7%E6%B1%82%E6%BA%90ip/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>&lt;strong>应用部署&lt;/strong>不一定总是简单的&lt;strong>安装&lt;/strong>和&lt;strong>运行&lt;/strong>, 有时候还需要考虑&lt;strong>网络&lt;/strong>的问题. 本文将介绍如何在&lt;strong>k8s集群&lt;/strong>中使服务能获取到请求的&lt;strong>源IP&lt;/strong>.&lt;/p>
&lt;p>应用提供服务一般依赖输入信息, 输入信息如果不依赖&lt;strong>五元组&lt;/strong>(源 IP, 源端口, 目的 IP, 目的端口, 协议), 那么该服务和&lt;strong>网络耦合性低&lt;/strong>, 不需要关心网络细节.&lt;/p>
&lt;p>因此, 对多数人来说都没有阅读本文的必要, 如果你对网络感兴趣, 或者希望拓宽一点视野, 可以继续阅读下文, 了解更多的服务场景.&lt;/p>
&lt;p>本文基于 k8s &lt;code>v1.29.4&lt;/code>, 文中部分叙述混用了 pod 和 endpoint, 本文场景下可以视为等价.&lt;/p>
&lt;p>&lt;strong>如果有错误, 欢迎指正, 我会及时更正.&lt;/strong>&lt;/p>
&lt;h2 id="为什么源-ip-信息会丢失">为什么源 IP 信息会丢失?&lt;/h2>
&lt;p>我们首先明确源 IP 是什么, 当 A 向 B 发送请求, B 将请求转发给 C, 虽然 C 看到的 IP 协议的源 IP 是 B 的 IP, 但本文把&lt;strong>A的IP&lt;/strong>看作源 IP.&lt;/p>
&lt;p>主要有两类行为会导致源信息丢失:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>网络地址转换(NAT)&lt;/strong>, 目的是节省公网 IPv4, 负载均衡等. 将导致服务端看到的源 IP 是 &lt;strong>NAT&lt;/strong> 设备的 IP, 而不是真实的源 IP.&lt;/li>
&lt;li>&lt;strong>代理(Proxy)&lt;/strong>, &lt;strong>反向代理&lt;/strong>(RP, Reverse Proxy)和&lt;strong>负载均衡&lt;/strong>(LB, Load Balancer)都属于这一类, 下文统称&lt;strong>代理服务器&lt;/strong>. 这类代理服务会将请求转发给后端服务, 但是会将源 IP 替换为自己的 IP.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>NAT 简单来说是&lt;strong>以端口空间换IP空间&lt;/strong>, IPv4 地址有限, 一个 IP 地址可以映射 65535 个端口, 绝大多数时候这些端口没有用完, 因而可以多个子网 IP 共用一个公网 IP, 在端口上区分不同的服务. 其使用形式是: &lt;code>public IP:public port -&amp;gt; private IP_1:private port&lt;/code>, 更多内容请自行参阅&lt;a href="https://www.google.com/search?q=%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2">网络地址转换&lt;/a>&lt;/li>
&lt;li>代理服务是为了&lt;strong>隐藏或暴露&lt;/strong>, 代理服务会将请求转发给后端服务, 同时将源 IP 替换为自己的 IP, 以此来隐藏后端服务的真实 IP, 保护后端服务的安全. 代理服务的使用形式是: &lt;code>client IP -&amp;gt; proxy IP -&amp;gt; server IP&lt;/code>, 更多内容请自行参阅&lt;a href="https://www.google.com/search?q=%E4%BB%A3%E7%90%86">代理&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>NAT&lt;/strong>和&lt;strong>代理服务器&lt;/strong>都非常常见, 多数服务都无法获得请求的源 IP.&lt;/p></description></item><item><title>武汉小龙虾市场提供加工服务了</title><link>https://blog.jqknono.com/blog/2024/05/18/%E6%AD%A6%E6%B1%89%E5%B0%8F%E9%BE%99%E8%99%BE%E5%B8%82%E5%9C%BA%E6%8F%90%E4%BE%9B%E5%8A%A0%E5%B7%A5%E6%9C%8D%E5%8A%A1%E4%BA%86/</link><pubDate>Sat, 18 May 2024 12:05:38 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/18/%E6%AD%A6%E6%B1%89%E5%B0%8F%E9%BE%99%E8%99%BE%E5%B8%82%E5%9C%BA%E6%8F%90%E4%BE%9B%E5%8A%A0%E5%B7%A5%E6%9C%8D%E5%8A%A1%E4%BA%86/</guid><description>&lt;p>武汉的&lt;strong>小龙虾&lt;/strong>市场现在提供处理服务了, 买虾后, 虾摊旁提供免费的虾清洗和处理服务, 有三个人一同处理.&lt;/p>
&lt;p>第一批提供虾处理服务的商家, 可以立即获得一些利益, 吸引购买者, 毕竟这是典型的&amp;quot;&lt;strong>人无我有&lt;/strong>&amp;ldquo;的优质服务.&lt;/p>
&lt;p>但是, 该服务门槛较低, 任何商家叫上三个人都可以提供, 而代价却很高, 毕竟虾处理服务占用了三个劳动力. 如果不能抢占足够多的市场, 这个服务迟早成本高于获利.&lt;/p>
&lt;p>只要商贩在这个夏天长期的贩卖小龙虾, 最终会发现这个服务的代价远远高于收益, 但是却无法停止, 因为这个服务已经成为了他们的卖点, 他们的客户已经习惯了这个服务, 一旦停止, 客户就会流失. 你可以一开始就不给客户提供这个服务, 但很难在提供免费服务后撤回.&lt;/p>
&lt;p>有的人做生意会讲究一个&amp;rdquo;&lt;strong>多给一点&lt;/strong>&amp;quot;, 这种策略自然比&amp;quot;少给一点&amp;quot;更受消费者欢迎, 但它无形中增加了商家的成本, 让商家们陷入低意义低门槛的竞争中, 最终大家都挣不到钱而行业枯萎. 所以有些行业到底是因为服务差而没落, 还是因为服务好而没落, 这个问题值得深思.&lt;/p>
&lt;p>许多大企业也有类似亏本赚吆喝的行为, 其目的乃是为了&lt;strong>垄断&lt;/strong>, 直至有一天市场长只有一家打车, 只有一家团购, 这一天才是到了收割的时候. 但我们也可以发现, 它们都不急于收割, 而是通过算法只收割部分人. 一方面赚取定价权带来的超额利润, 另一方面, 使用新产品的低定价对新入场者围追堵截, 防范每一个潜在的竞争对手. 这些大企业已形成&lt;strong>事实上的垄断&lt;/strong>, 韭菜割不割只是时间问题.&lt;/p>
&lt;p>我们在工作中也会遇到不少&amp;quot;卷王&amp;quot;, 很难评估他们是否带来了更多价值, 但能他们明确能做到的就是永远比别人晚下班半小时, 一旦俩卷王较上劲了, &amp;ldquo;多给一点&amp;quot;互锁, 全办公室都得笼罩在其阴影之下. 他们靠着这种低质的服务, 挤压着正常打工者的生存空间. 比的既不是创新, 也不是业绩, 主打的就是&amp;quot;卖苦力&amp;rdquo;, 却能获得老板的青睐, 这显然是一种不正常的恶行竞争.&lt;/p>
&lt;p>最后再说回小龙虾市场, 有人能垄断定价自行定价, 有人能垄断货源专供高端, 而谁能通过&lt;strong>垄断打工而自发打工&lt;/strong>呢?&lt;/p></description></item><item><title>如何提升自建DNS服务下的网络体验</title><link>https://blog.jqknono.com/blog/2024/05/18/%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%87%AA%E5%BB%BAdns%E6%9C%8D%E5%8A%A1%E4%B8%8B%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BD%93%E9%AA%8C/</link><pubDate>Sat, 18 May 2024 10:46:44 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/18/%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%87%AA%E5%BB%BAdns%E6%9C%8D%E5%8A%A1%E4%B8%8B%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BD%93%E9%AA%8C/</guid><description>&lt;h2 id="网络质量和网络体验">网络质量和网络体验&lt;/h2>
&lt;blockquote>
&lt;p>什么都不做, 即可以获得最好的网络体验&lt;/p>
&lt;/blockquote>
&lt;p>需要明确, 这里&lt;code>网络质量&lt;/code>和&lt;code>网络体验&lt;/code>是两个不同的概念. 通信是一个过程, 涉及多个设备, 我们可以称单个设备的上下行表现为&lt;code>网络质量&lt;/code>, 而整个端到端的通信表现, 我们可以称为&lt;code>网络体验&lt;/code>.&lt;/p>
&lt;h2 id="如何衡量网络质量">如何衡量网络质量&lt;/h2>
&lt;p>衡量网络质量通常涉及多个指标和方法。以下是一些常见的衡量网络质量的方法和指标：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>带宽（Bandwidth）&lt;/strong>：带宽是指网络传输数据的能力，通常以每秒传输的数据量（比特/秒）来衡量。更高的带宽通常表示更好的网络质量。&lt;/li>
&lt;li>&lt;strong>延迟（Latency）&lt;/strong>：延迟是指数据从发送端到接收端所需的时间。低延迟表示数据传输速度快，网络响应更快。&lt;/li>
&lt;li>&lt;strong>丢包率（Packet Loss Rate）&lt;/strong>：丢包率是指在数据传输过程中丢失的数据包的比例。较低的丢包率通常意味着网络质量较好。&lt;/li>
&lt;li>&lt;strong>抖动（Jitter）&lt;/strong>：抖动是指数据包在传输过程中的变化或波动。较小的抖动表示网络稳定性较高。&lt;/li>
&lt;li>&lt;strong>吞吐量（Throughput）&lt;/strong>：吞吐量是指网络传输的实际数据量，通常以单位时间内的数据传输量来衡量。更高的吞吐量表示网络质量更好。&lt;/li>
&lt;li>&lt;strong>网络拓扑（Network Topology）&lt;/strong>：网络拓扑描述了网络中节点之间的连接方式和结构。合理的网络拓扑设计可以提高网络性能和质量。&lt;/li>
&lt;li>&lt;strong>服务质量（Quality of Service，QoS）&lt;/strong>：QoS 是一组技术和机制，用于确保在网络中的数据传输中实现可接受的服务质量。QoS 可以通过各种方式实现，包括流量控制、优先级队列等。&lt;/li>
&lt;li>&lt;strong>网络协议分析（Protocol Analysis）&lt;/strong>：通过分析网络协议和数据包，可以了解网络中的性能指标和问题，例如使用 Wireshark 等网络分析工具。&lt;/li>
&lt;/ol>
&lt;p>综合利用这些指标和方法，可以全面地评估网络质量，确定网络性能的优势和改进的空间。 但这些是运营商关注的指标, 对于普通用户, 只需要购买价格合适的路由器即可, 现代路由器都有自动调整网络质量的功能.&lt;/p>
&lt;h2 id="如何衡量网络体验">如何衡量网络体验&lt;/h2>
&lt;p>首先是&lt;strong>可访问性&lt;/strong>, 能访问是最重要的基础. 因此, 域名解析服务需要满足基础的能力:&lt;/p>
&lt;ul>
&lt;li>全面, 上级 DNS 服务需要权威, 且能够解析更多的域名&lt;/li>
&lt;li>正确, 解析结果需要正确, 不能出现解析错误. 部分 DNS 服务商会对一些域名进行劫持或污染, 解析到广告页面.&lt;/li>
&lt;li>及时, ip 地址变更后, 需要及时更新解析结果, 而不是返回旧的 ip 地址&lt;/li>
&lt;/ul>
&lt;p>其次是 DNS 解析结果的 IP 所能提供服务的&lt;code>网络质量&lt;/code>.&lt;/p>
&lt;p>互联网服务所能提供的&lt;code>网络质量&lt;/code>, 通常&lt;strong>强依赖地域&lt;/strong>, 服务器和客户端在地域上越接近, 则服务质量越好.&lt;/p>
&lt;p>许多付费 DNS 解析服务商都支持按地域解析不同 IP, 例如这是阿里云能提供的一部分服务:&lt;/p></description></item><item><title>设计模式究竟有几个原则</title><link>https://blog.jqknono.com/blog/2024/05/16/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%A9%B6%E7%AB%9F%E6%9C%89%E5%87%A0%E4%B8%AA%E5%8E%9F%E5%88%99/</link><pubDate>Thu, 16 May 2024 13:03:16 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/16/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%A9%B6%E7%AB%9F%E6%9C%89%E5%87%A0%E4%B8%AA%E5%8E%9F%E5%88%99/</guid><description>&lt;p>最早总结的设计模式只有 5 个, 即&lt;code>SOLID&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>单一职责原则 (Single Responsibility Principle, SRP)&lt;/code>：一个类应该只有一个引起变化的原因，即一个类应该只有一个责任。&lt;/li>
&lt;li>&lt;code>开闭原则 (Open/Closed Principle, OCP)&lt;/code>：软件实体（类、模块、函数等）应该对扩展开放，对修改关闭，即应该通过扩展来实现变化，而不是通过修改已有的代码。&lt;/li>
&lt;li>&lt;code>里氏替换原则 (Liskov Substitution Principle, LSP)&lt;/code>：子类型必须能够替换其基类型，即派生类必须能够替换其基类而不影响程序的正确性。&lt;/li>
&lt;li>&lt;code>接口隔离原则 (Interface Segregation Principle, ISP)&lt;/code>：不应该强迫客户端依赖于它们不使用的接口。应该将大接口拆分成更小的、更具体的接口，以便客户端只需知道它们需要使用的方法。&lt;/li>
&lt;li>&lt;code>依赖倒置原则 (Dependency Inversion Principle, DIP)&lt;/code>：高层模块不应该依赖于低层模块，二者都应该依赖于抽象。抽象不应该依赖于具体实现细节，具体实现细节应该依赖于抽象。&lt;/li>
&lt;/ul>
&lt;p>后来增加了两个规则, 这些后加的规则相较来说更具体, 更有指导性. 我们从原则解释中可以看到&lt;code>SOLID&lt;/code>描述&lt;code>应该怎么做&lt;/code>, 后加的规则描述&lt;code>优先/最好怎么做&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>&lt;code>合成/聚合复用原则 (Composition/Aggregation Reuse Principle, CARP)&lt;/code>：应该优先使用对象组合（合成）和聚合，而不是继承来达到代码复用的目的。&lt;/li>
&lt;li>&lt;code>迪米特法则 (Law of Demeter, LoD)&lt;/code>：一个对象应该对其他对象有尽可能少的了解，即一个对象应该对其它对象的内部结构和实现细节知道得越少越好。&lt;/li>
&lt;/ul>
&lt;p>除了上述提到的常见设计原则外，还有一些其他的设计原则，虽然不如前面提到的那些广为人知，但同样对软件设计和架构有重要的指导作用。
后续提出的这些规则, 有点画蛇添足, 至少我认为它们不反直觉, 不需要深入思考.&lt;/p>
&lt;ul>
&lt;li>&lt;code>最少知识原则 (Principle of Least Knowledge, PoLK)&lt;/code>：也被称为迪米特法则的扩展，主张一个对象应该尽可能少地了解其他对象的信息。这个原则的产生可以追溯到 1987 年由帕特里夏·莱塞尔（Patricia Lago）和科威特·伯克（Koos Visser）提出的“最少通信法则”。&lt;/li>
&lt;li>&lt;code>稳定依赖原则 (Stable Dependencies Principle, SDP)&lt;/code>：该原则认为软件设计应该确保稳定的组件不依赖于不稳定的组件，即稳定性较高的组件应该更少地依赖于稳定性较低的组件。这个原则的思想来源于对软件系统中组件之间关系的深入研究。&lt;/li>
&lt;li>&lt;code>稳定抽象原则 (Stable Abstraction Principle, SAP)&lt;/code>：与稳定依赖原则相呼应，该原则指导着将抽象性与稳定性相匹配，即稳定的组件应该是抽象的，而不稳定的组件应该是具体的。这个原则有助于确保软件系统的稳定性和灵活性。&lt;/li>
&lt;/ul></description></item><item><title>多平台内容发布工具--蚁小二体验</title><link>https://blog.jqknono.com/blog/2024/05/09/%E5%A4%9A%E5%B9%B3%E5%8F%B0%E5%86%85%E5%AE%B9%E5%8F%91%E5%B8%83%E5%B7%A5%E5%85%B7--%E8%9A%81%E5%B0%8F%E4%BA%8C%E4%BD%93%E9%AA%8C/</link><pubDate>Thu, 09 May 2024 20:47:38 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/09/%E5%A4%9A%E5%B9%B3%E5%8F%B0%E5%86%85%E5%AE%B9%E5%8F%91%E5%B8%83%E5%B7%A5%E5%85%B7--%E8%9A%81%E5%B0%8F%E4%BA%8C%E4%BD%93%E9%AA%8C/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近想写点东西扩展下收入类别, 四处调研了下创作者平台, 看看是否能靠文字赚点钱, 实在不行赚点金币也是好的.&lt;/p>
&lt;p>先不论具体的平台, 写东西多少是要费点脑子的, 文章生产不易, 自然不会只投一个平台, 如果需要发布多个平台, 则会涉及一件比较令人厌烦的事, 那就是同一件事需要重复做多次.&lt;/p>
&lt;p>如果各平台都支持外链, 支持 markdown 格式, 简单的复制粘贴倒也不会太令人苦恼. 但实际情况是, 很多平台都不支持 markdown 文件导入, 但好消息是它们都支持 word 导入. 可以 md 转 docx, 再 docx 导入.&lt;/p>
&lt;p>另外在多个平台发文, 还需要在各自的发布页面操作, 我希望的是可以批量操作. 搜索的时候找到了&lt;code>蚁小二&lt;/code>这样一个工具, 请放心这不是带货, 如果这东西确实能给我带来很多价值的话, 我自然会审慎而吝啬的决定是否要分享. 既然我分享出来了, 就代表我对它带来的价值存疑.&lt;/p>
&lt;h2 id="支持的平台">支持的平台&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/06/20/NGdJbYPmKFsu6MX.png">&lt;/p>
&lt;p>可以一键发布内容到多个平台, 我所使用的免费版支持添加五个账号, 由于我是文字创作, 五个账号已经足够了. 如果是视频创作者, 这个工具或许可以帮上许多忙.&lt;/p>
&lt;h2 id="文字自媒体体验">文字自媒体体验&lt;/h2>
&lt;p>视频部分由于我完全不会做视频, 就暂且不分享体验了, 下面仅就自媒体平台体验做一些分享.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/06/20/unKh5tRUSXyCDsx.png">&lt;/p>
&lt;ul>
&lt;li>创作界面可以参考常见的 word 编辑器, 包含段落, 加粗, 引用, 下划线, 删除线, 斜体, 分割线, 缩进, 图片&lt;/li>
&lt;li>不支持超链接&lt;/li>
&lt;li>不支持表格&lt;/li>
&lt;li>没有 markdown, 可以通过在 vscode 的 mardown 预览中拷贝粘贴实现了一些格式的保留&lt;/li>
&lt;li>抽象支持多个平台&lt;/li>
&lt;li>抽象支持平台多个账号&lt;/li>
&lt;/ul>
&lt;p>&lt;em>一键发布&lt;/em>, 不得不说体验还可以, 但是我想看到文章反馈还是得去各平台查看.&lt;/p></description></item><item><title>简书的创作体验</title><link>https://blog.jqknono.com/blog/2024/05/09/%E7%AE%80%E4%B9%A6%E7%9A%84%E5%88%9B%E4%BD%9C%E4%BD%93%E9%AA%8C/</link><pubDate>Thu, 09 May 2024 12:28:43 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/09/%E7%AE%80%E4%B9%A6%E7%9A%84%E5%88%9B%E4%BD%9C%E4%BD%93%E9%AA%8C/</guid><description>&lt;p>简书的写文章体验仅强于记事本.&lt;/p>
&lt;h2 id="笔记管理简洁">笔记管理简洁&lt;/h2>
&lt;p>这是文章编辑页面, 仅两层抽象,&lt;/p>
&lt;ul>
&lt;li>笔记本列表&lt;/li>
&lt;li>笔记列表&lt;/li>
&lt;li>编辑器&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s2.loli.net/2024/05/09/QaCNwOghDi6b7xu.png">&lt;/p>
&lt;p>层级少有好处也有坏处, 简单的操作可以减低理解成本. 但会在将来增加作者的文章管理成本.&lt;/p>
&lt;h2 id="图片上传困难">图片上传困难&lt;/h2>
&lt;p>&lt;strong>简书在长达 8 年的时间里仍然没有处理好外链图片上传问题&lt;/strong>&lt;/p>
&lt;p>&lt;img alt="https://www.jianshu.com/p/acb660ddc619" src="https://s2.loli.net/2024/05/09/nxkTBGpo3KDjtsh.png">&lt;/p>
&lt;p>外链只是有时会失败, 许多图床是允许空 reffer 或任意 reffer 获取的, 简书试都不试下, 还称本地上传是&amp;quot;正确&amp;quot;的图片上传方式, 不知道运营者有没有试过别的平台的创作体验.&lt;/p>
&lt;p>很难相信会有作者只深耕一个平台, 平台如果不能让创作者方便的复制粘贴, 只能一直走小众路线.&lt;/p>
&lt;h2 id="没有审核">没有审核&lt;/h2>
&lt;p>简书似乎不怎么审核, 从未看到过审核状态, 文章发出即可阅. 如果一个平台不怎么审核的话, 或许我们可以这样那样&amp;hellip;&lt;/p>
&lt;h2 id="随机-ip-属地">随机 IP 属地&lt;/h2>
&lt;p>简书实际没有实现 IP 属地, IP 地址刷新即随机更新.&lt;/p></description></item><item><title>ChatGPT VPN识别绕过方法</title><link>https://blog.jqknono.com/blog/2024/05/09/chatgpt-vpn%E8%AF%86%E5%88%AB%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 09 May 2024 10:30:29 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/09/chatgpt-vpn%E8%AF%86%E5%88%AB%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/</guid><description>&lt;p>如何处理 ChatGPT 报错&lt;br>
&amp;ldquo;Unable to load site&amp;rdquo;&lt;br>
&amp;ldquo;Please try again later, if you are using a VPN, try turning it off.&amp;rdquo;&lt;br>
&amp;ldquo;Check the status page for information on outages.&amp;rdquo;&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2024/05/09/dT4xi1mwFgYRKhq.png">&lt;/p>
&lt;p>chatgpt 目前仍然是使用体验最好的聊天机器人，但是在国内使用时，由于网络环境的限制，我们需要使用梯子来访问 chatgpt。但是 chatgpt 对梯子的检测较为严格，如果检测到使用了梯子，会直接拒绝访问。这里介绍一种绕过 chatgpt 对梯子检测的方法。&lt;/p>
&lt;p>有其他人提到更换 IP 来绕过封锁, 但我们一般使用 IP 的地域已经是可以提供服务的地区, 所以这种方法并不一定是实际的拒绝服务原因.&lt;/p>
&lt;p>另外有人提到梯子使用人数较多容易被识别, 劝人购买较贵的使用人数少的梯子, 这也很难成为合理理由, 在 ipv4 短缺的今天, 即便是海外, 也存在大量的社区使用 nat 分配端口, 共用一个 ipv4 的情况. chatgpt 一封就要封一大片, 作为一个被广泛使用的服务, 这样的检测设计肯定是不合理的.&lt;/p>
&lt;p>对大众服务来说, 检测源 IP 一致性则更为合理. 付费梯子的特征通常是限制流量或限制网速, 因此多数使用梯子的用户选择按规则绕过. 绕过自己的运营商可直接访问的地址, 以减少流量消耗, 或者获得更快的访问速度, 仅在访问被防火墙拦截的地址时导入流量到代理. 这种访问目标服务的不同方式, 可能会造成源地址不一致. 例如访问 A 服务需要同时和域名 X 和域名 Y 进行通信, 而防火墙仅拦截了域名 X, 那么在 A 服务看到的同一请求的不同阶段的访问来源 IP 不一致.&lt;/p></description></item><item><title>Windows Edge浏览器卡顿的一种解决办法</title><link>https://blog.jqknono.com/blog/2024/05/07/windows-edge%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8D%A1%E9%A1%BF%E7%9A%84%E4%B8%80%E7%A7%8D%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link><pubDate>Tue, 07 May 2024 11:48:37 +0800</pubDate><guid>https://blog.jqknono.com/blog/2024/05/07/windows-edge%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8D%A1%E9%A1%BF%E7%9A%84%E4%B8%80%E7%A7%8D%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid><description>&lt;h2 id="浏览器版本">浏览器版本&lt;/h2>
&lt;p>&lt;code>122.0.2365.80+&lt;/code>&lt;/p>
&lt;h2 id="卡顿现象">卡顿现象&lt;/h2>
&lt;ul>
&lt;li>打开个人 profile 时卡顿&lt;/li>
&lt;li>打开和搜索存储密码时卡顿&lt;/li>
&lt;li>新建和关闭 tab 时卡顿&lt;/li>
&lt;li>在新建的 tab 中输入字符时卡顿&lt;/li>
&lt;/ul>
&lt;p>目前发现仅中文版 Windows 系统会出现此类型的卡顿.&lt;/p>
&lt;h2 id="解决办法">解决办法&lt;/h2>
&lt;p>中文浏览器设置路径: &lt;code>隐私-搜索-服务 -&amp;gt; 地址栏和搜索 -&amp;gt; 搜索建议和筛选器 -&amp;gt; 搜索筛选器&lt;/code>, &lt;strong>关闭&lt;/strong>搜索筛选器.&lt;/p>
&lt;p>英文浏览器设置路径: &lt;code>Privacy search and services -&amp;gt; Address bar and search -&amp;gt; Search sugesstion and filters -&amp;gt; Search filters&lt;/code>, &lt;strong>TURN OFF&lt;/strong> Search filters.&lt;/p>
&lt;p>&lt;img alt="设置指导" src="https://s2.loli.net/2024/05/07/yhBqcLiaFAkdp3G.png">&lt;/p></description></item><item><title/><link>https://blog.jqknono.com/blog/1/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jqknono.com/blog/1/01/01/</guid><description/></item><item><title/><link>https://blog.jqknono.com/blog/1/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jqknono.com/blog/1/01/01/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set Key File Variable:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">New-Variable&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">Key&lt;/span> &lt;span class="n">-Value&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$env:UserProfile&lt;/span>&lt;span class="s2">\.ssh\id_rsa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Remove Inheritance:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Icacls&lt;/span> &lt;span class="nv">$Key&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">Inheritance&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Set Ownership to Owner:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Key&amp;#39;s within $env:UserProfile:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Icacls&lt;/span> &lt;span class="nv">$Key&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">Grant&lt;/span> &lt;span class="p">${&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">UserName&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">F&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Key&amp;#39;s outside of $env:UserProfile:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TakeOwn&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">F&lt;/span> &lt;span class="nv">$Key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Icacls&lt;/span> &lt;span class="nv">$Key&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">Grant&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="nb">r &lt;/span>&lt;span class="p">${&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">UserName&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">F&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Remove All Users, except for Owner:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Icacls&lt;/span> &lt;span class="nv">$Key&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">Remove&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">Administrator&lt;/span> &lt;span class="s2">&amp;#34;Authenticated Users&amp;#34;&lt;/span> &lt;span class="n">BUILTIN&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">Administrators&lt;/span> &lt;span class="n">BUILTIN&lt;/span> &lt;span class="n">Everyone&lt;/span> &lt;span class="n">System&lt;/span> &lt;span class="n">Users&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Verify:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Icacls&lt;/span> &lt;span class="nv">$Key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Remove Variable:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Remove-Variable&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">Key&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://blog.jqknono.com/blog/1/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jqknono.com/blog/1/01/01/</guid><description/></item><item><title>Search Results</title><link>https://blog.jqknono.com/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.jqknono.com/search/</guid><description/></item></channel></rss>