<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>adguard on Nono Blogs</title><link>https://blog.jqknono.com/en-us/blog/tools/adguard/</link><description>Recent content in adguard on Nono Blogs</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 12 Jun 2024 19:00:34 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/en-us/blog/tools/adguard/index.xml" rel="self" type="application/rss+xml"/><item><title>Using DNS to Gracefully Switch Network Services</title><link>https://blog.jqknono.com/en-us/blog/2024/06/12/using-dns-to-gracefully-switch-network-services/</link><pubDate>Wed, 12 Jun 2024 19:00:34 +0800</pubDate><guid>https://blog.jqknono.com/en-us/blog/2024/06/12/using-dns-to-gracefully-switch-network-services/</guid><description>&lt;p>Assume the service domain name is &lt;code>example.domain&lt;/code>, the original server IP is &lt;code>A&lt;/code>, and the new server IP is &lt;code>B&lt;/code> after migration or IP change. To keep users unaware, we can use DNS to gracefully switch network services.&lt;/p>
&lt;ol>
&lt;li>Original state: &lt;code>example.domain&lt;/code> resolves to IP &lt;code>A&lt;/code>.&lt;/li>
&lt;li>Transition state: &lt;code>example.domain&lt;/code> resolves to both IP &lt;code>A&lt;/code> and &lt;code>B&lt;/code>.&lt;/li>
&lt;li>New state: &lt;code>example.domain&lt;/code> resolves to IP &lt;code>B&lt;/code>; IP &lt;code>A&lt;/code> is removed.&lt;/li>
&lt;/ol>
&lt;p>Note: When users receive two resolved addresses, the client picks one to connect to; if that fails, it tries the others, ensuring service availability.&lt;/p></description></item></channel></rss>