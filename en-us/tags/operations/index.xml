<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operations on Nono Blogs</title><link>https://blog.jqknono.com/en-us/tags/operations/</link><description>Recent content in Operations on Nono Blogs</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 25 Apr 2025 19:25:01 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/en-us/tags/operations/index.xml" rel="self" type="application/rss+xml"/><item><title>Certificate Application Issues Caused by CNAME–TXT Conflicts</title><link>https://blog.jqknono.com/en-us/blog/2025/04/25/certificate-application-issues-caused-by-cnametxt-conflicts/</link><pubDate>Fri, 25 Apr 2025 19:25:01 +0800</pubDate><guid>https://blog.jqknono.com/en-us/blog/2025/04/25/certificate-application-issues-caused-by-cnametxt-conflicts/</guid><description>&lt;h2 id="cname-and-txt-records-with-the-same-prefix-cannot-coexist">CNAME and TXT Records With the Same Prefix Cannot Coexist&lt;/h2>
&lt;p>Anyone who has ever configured a domain knows that (A, AAAA) records cannot coexist with a CNAME, but most people have never run into a TXT vs. CNAME conflict.&lt;/p>
&lt;p>When would TXT and CNAME need the same prefix?&lt;/p>
&lt;p>One scenario occurs while applying for a Let’s Encrypt certificate and using the &lt;strong>&lt;em>DNS-01&lt;/em> challenge&lt;/strong> to prove domain ownership.&lt;/p>
&lt;ol>
&lt;li>Certbot creates a &lt;strong>TXT record&lt;/strong> for &lt;code>_acme-challenge.example.com&lt;/code>, using an akid/aksecret pair or a token.&lt;/li>
&lt;li>Let’s Encrypt queries the &lt;strong>TXT record&lt;/strong> to confirm that the applicant can modify DNS and therefore controls the domain.&lt;/li>
&lt;li>Let’s Encrypt issues the certificate.&lt;/li>
&lt;li>Certbot cleans up the &lt;strong>TXT record&lt;/strong> for &lt;code>_acme-challenge.example.com&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>If a &lt;strong>CNAME record&lt;/strong> for &lt;code>_acme-challenge.example.com&lt;/code> already exists when the &lt;strong>TXT record&lt;/strong> is created, the &lt;strong>TXT record&lt;/strong> insertion usually fails, causing the challenge to fail and the certificate to be denied.&lt;/p></description></item></channel></rss>