<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI on Nono Blogs</title><link>https://blog.jqknono.com/en-us/tags/ai/</link><description>Recent content in AI on Nono Blogs</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 22 Jul 2025 10:03:40 +0800</lastBuildDate><atom:link href="https://blog.jqknono.com/en-us/tags/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>A brief share on using trae</title><link>https://blog.jqknono.com/en-us/blog/2025/07/22/a-brief-share-on-using-trae/</link><pubDate>Tue, 22 Jul 2025 10:03:40 +0800</pubDate><guid>https://blog.jqknono.com/en-us/blog/2025/07/22/a-brief-share-on-using-trae/</guid><description>&lt;p>This lengthy post was published on 2025-07-22; at the moment trae&amp;rsquo;s feature completeness and performance remain poor. It may improve later, so feel free to try it for yourself and trust your own experience.&lt;/p>
&lt;p>As common sense dictates, the first employees shape a company’s culture and products, forming a deep-rooted foundation that is hard to change and also somewhat intangible; my sharing is for reference only.&lt;/p>
&lt;h2 id="ui-design">UI Design&lt;/h2>
&lt;p>Trae’s interface has nice aesthetics, with layout / color / font tweaks over the original version, and it looks great visually. The logic is fairly clear as well; in this area I have no suggestions to offer.&lt;/p></description></item><item><title>Automated debugging with Cursor</title><link>https://blog.jqknono.com/en-us/blog/2025/06/27/automated-debugging-with-cursor/</link><pubDate>Fri, 27 Jun 2025 13:18:19 +0800</pubDate><guid>https://blog.jqknono.com/en-us/blog/2025/06/27/automated-debugging-with-cursor/</guid><description>&lt;p>The following is an outline for automated development testing using Cursor:&lt;/p>
&lt;h3 id="1-introduction">1. Introduction&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Overview of Cursor&lt;/strong>: Describe what Cursor is and its main features and capabilities.&lt;/li>
&lt;li>&lt;strong>Background on automated development testing&lt;/strong>: Explain why automated development testing is needed and its importance in modern software development.&lt;/li>
&lt;/ul>
&lt;h3 id="2-preparation">2. Preparation&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Installation and setup&lt;/strong>:
&lt;ul>
&lt;li>Download and install Cursor.&lt;/li>
&lt;li>Configure required plugins and extensions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Environment configuration&lt;/strong>:
&lt;ul>
&lt;li>Set up the project structure.&lt;/li>
&lt;li>Install dependencies (e.g., Node.js, Python, etc.).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-fundamentals-of-automation-testing">3. Fundamentals of automation testing&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Test types&lt;/strong>:
&lt;ul>
&lt;li>Unit tests&lt;/li>
&lt;li>Integration tests&lt;/li>
&lt;li>End-to-end tests&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Choosing a test framework&lt;/strong>:
&lt;ul>
&lt;li>Introduce common frameworks (e.g., Jest, Mocha, PyTest, etc.).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="4-writing-test-cases-with-cursor">4. Writing test cases with Cursor&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Creating test files&lt;/strong>:
&lt;ul>
&lt;li>Create new test files in Cursor.&lt;/li>
&lt;li>Use templates to generate basic test structures.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Writing test logic&lt;/strong>:
&lt;ul>
&lt;li>Write unit tests.&lt;/li>
&lt;li>Use assertion libraries for validation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="5-running-and-debugging-tests">5. Running and debugging tests&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Run tests&lt;/strong>:
&lt;ul>
&lt;li>Execute single or multiple test cases in Cursor.&lt;/li>
&lt;li>View test results and output.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Debug tests&lt;/strong>:
&lt;ul>
&lt;li>Set breakpoints.&lt;/li>
&lt;li>Step through execution to inspect variables and program state.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="6-test-reports-and-analysis">6. Test reports and analysis&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Generate test reports&lt;/strong>:
&lt;ul>
&lt;li>Use frameworks to produce detailed reports.&lt;/li>
&lt;li>Export in HTML or other formats.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Analyze results&lt;/strong>:
&lt;ul>
&lt;li>Identify failing tests.&lt;/li>
&lt;li>Determine causes and repair them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="7-continuous-integration--deployment-cicd">7. Continuous integration &amp;amp; deployment (CI/CD)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Integrate with CI/CD tools&lt;/strong>:
&lt;ul>
&lt;li>Integrate Cursor with GitHub Actions, Travis CI, etc.&lt;/li>
&lt;li>Configure automatic test triggering.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Deployment and monitoring&lt;/strong>:
&lt;ul>
&lt;li>Auto-deploy to test environments.&lt;/li>
&lt;li>Monitor test coverage and quality metrics.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="8-best-practices-and-tips">8. Best practices and tips&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Refactoring and test maintenance&lt;/strong>:
&lt;ul>
&lt;li>Keep tests effective while refactoring code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Performance optimization&lt;/strong>:
&lt;ul>
&lt;li>Tips to speed up test execution.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Troubleshooting common issues&lt;/strong>:
&lt;ul>
&lt;li>Address frequent causes of test failures.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="9-conclusion">9. Conclusion&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Summary&lt;/strong>: Review the advantages and key steps of automated development testing with Cursor.&lt;/li>
&lt;li>&lt;strong>Outlook&lt;/strong>: Possible future developments and improvements.&lt;/li>
&lt;/ul>
&lt;p>This outline aims to help developers systematically understand how to leverage Cursor for automated development testing, thereby improving efficiency and code quality.&lt;/p></description></item><item><title>Getting Started with Copilot</title><link>https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/</link><pubDate>Fri, 28 Jun 2024 15:56:16 +0800</pubDate><guid>https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/</guid><description>&lt;p>&lt;a href="https://qingteng.feishu.cn/minutes/obcnj9f86gvr3o863mb88p99">Video share&lt;/a>&lt;/p>
&lt;!-- TOC tocDepth:2..3 chapterDepth:2..6 -->
&lt;ul>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#copilot-labs-%e8%83%bd%e5%8a%9b">Copilot Labs capabilities&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#copilot-%e6%98%af%e4%bb%80%e4%b9%88">What is Copilot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e7%90%86%e8%a7%a3">Understanding&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e5%bb%ba%e8%ae%ae">Suggestions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e8%b0%83%e8%af%95">Debugging&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e6%a3%80%e8%a7%86">Code review&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e9%87%8d%e6%9e%84">Refactoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e6%96%87%e6%a1%a3">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e4%bd%bf%e7%94%a8-custom-%e6%89%a9%e5%b1%95-copilot-%e8%be%b9%e7%95%8c">Extend Copilot boundary with Custom&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e8%8e%b7%e5%be%97%e6%9b%b4%e4%b8%93%e4%b8%9a%e7%9a%84%e5%bb%ba%e8%ae%ae">Get more professional suggestions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e7%ba%af%e6%96%87%e6%9c%ac%e7%9a%84%e5%bb%ba%e8%ae%ae">Plain-text suggestions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e8%ae%be%e7%bd%ae%e9%a1%b9">Settings&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e6%95%b0%e6%8d%ae%e5%ae%89%e5%85%a8">Data security&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jqknono.com/en-us/blog/2024/06/28/getting-started-with-copilot/#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98">FAQ&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;p>GitHub Copilot is a machine-learning-based code completion tool that helps you write code faster and boosts your coding efficiency.&lt;/p>
&lt;h2 id="copilot-labs-capabilities">Copilot Labs capabilities&lt;/h2>
&lt;p>| Capability | Description | Remarks&lt;/p></description></item></channel></rss>